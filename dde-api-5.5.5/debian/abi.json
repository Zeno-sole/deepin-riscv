{"Filepath":"adjust-grub-theme/main.go","Functions":[{"Uniquefunname":"func adjustBackground(themeOutputDir string, img image.Image) (image.Image, error)","Funname":"adjustBackground","Returntype":"(image.Image, error)","Args":"themeOutputDir string, img image.Image"},{"Uniquefunname":"func adjustBootMenu(themeOutputDir string, comp *tt.Component, vars map[string]float64)","Funname":"adjustBootMenu","Returntype":"","Args":"themeOutputDir string, comp *tt.Component, vars map[string]float64"},{"Uniquefunname":"func adjustBootMenuPixmapStyle(themeOutputDir string, comp *tt.Component, bgImg image.Image)","Funname":"adjustBootMenuPixmapStyle","Returntype":"","Args":"themeOutputDir string, comp *tt.Component, bgImg image.Image"},{"Uniquefunname":"func adjustFont(themeOutputDir string, comp *tt.Component, propName string, vars map[string]float64)(*font.Face, error)","Funname":"adjustFont","Returntype":"(*font.Face, error)","Args":"themeOutputDir string, comp *tt.Component, propName string, vars map[string]float64"},{"Uniquefunname":"func adjustItemPixmapStyle(r int)","Funname":"adjustItemPixmapStyle","Returntype":"","Args":"r int"},{"Uniquefunname":"func adjustLabel(themeOutputDir string, comp *tt.Component, vars map[string]float64)","Funname":"adjustLabel","Returntype":"","Args":"themeOutputDir string, comp *tt.Component, vars map[string]float64"},{"Uniquefunname":"func adjustLabelText(comp *tt.Component)","Funname":"adjustLabelText","Returntype":"","Args":"comp *tt.Component"},{"Uniquefunname":"func adjustProp(comp *tt.Component, propName string, vars map[string]float64) int","Funname":"adjustProp","Returntype":"int","Args":"comp *tt.Component, propName string, vars map[string]float64"},{"Uniquefunname":"func adjustResourcesOsLogos(themeInputDir, themeOutputDir string, width, height int)","Funname":"adjustResourcesOsLogos","Returntype":"","Args":"themeInputDir, themeOutputDir string, width, height int"},{"Uniquefunname":"func adjustScrollbarThumbPixmapStyle(r int)","Funname":"adjustScrollbarThumbPixmapStyle","Returntype":"","Args":"r int"},{"Uniquefunname":"func adjustSelectedItemPixmapStyle(r int)","Funname":"adjustSelectedItemPixmapStyle","Returntype":"","Args":"r int"},{"Uniquefunname":"func adjustTerminalFont(themeOutputDir string, theme *tt.Theme, vars map[string]float64) error","Funname":"adjustTerminalFont","Returntype":"error","Args":"themeOutputDir string, theme *tt.Theme, vars map[string]float64"},{"Uniquefunname":"func adjustTheme()","Funname":"adjustTheme","Returntype":"","Args":""},{"Uniquefunname":"func adjustThemeFallback() error","Funname":"adjustThemeFallback","Returntype":"error","Args":""},{"Uniquefunname":"func adjustThemeNormal() error","Funname":"adjustThemeNormal","Returntype":"error","Args":""},{"Uniquefunname":"func cleanupThemeOutputDir(dir string)","Funname":"cleanupThemeOutputDir","Returntype":"","Args":"dir string"},{"Uniquefunname":"func convertPropAbs2Rel(comp *tt.Component, propName string, orientation int)","Funname":"convertPropAbs2Rel","Returntype":"","Args":"comp *tt.Component, propName string, orientation int"},{"Uniquefunname":"func convertPropRel2Abs(comp *tt.Component, propName string, orientation int)","Funname":"convertPropRel2Abs","Returntype":"","Args":"comp *tt.Component, propName string, orientation int"},{"Uniquefunname":"func copyBgSource(filename string) error","Funname":"copyBgSource","Returntype":"error","Args":"filename string"},{"Uniquefunname":"func copyThemeFiles(themeInputDir, themeOutputDir string)","Funname":"copyThemeFiles","Returntype":"","Args":"themeInputDir, themeOutputDir string"},{"Uniquefunname":"func cropSaveScrollbarThumbStyleBox(img image.Image, r int, name string)","Funname":"cropSaveScrollbarThumbStyleBox","Returntype":"","Args":"img image.Image, r int, name string"},{"Uniquefunname":"func cropSaveStyleBox(img image.Image, filenamePrefix string, r int)","Funname":"cropSaveStyleBox","Returntype":"","Args":"img image.Image, filenamePrefix string, r int"},{"Uniquefunname":"func genPF2Font(themeOutputDir, fontFile string, faceIndex, size int) (*font.Face, error)","Funname":"genPF2Font","Returntype":"(*font.Face, error)","Args":"themeOutputDir, fontFile string, faceIndex, size int"},{"Uniquefunname":"func getBootMenuR(itemHeight int) int","Funname":"getBootMenuR","Returntype":"int","Args":"itemHeight int"},{"Uniquefunname":"func getFallbackDir() string","Funname":"getFallbackDir","Returntype":"string","Args":""},{"Uniquefunname":"func getFontSize(screenWidth int, screenHeight int) int","Funname":"getFontSize","Returntype":"int","Args":"screenWidth int, screenHeight int"},{"Uniquefunname":"func getItemR(itemHeight int) int","Funname":"getItemR","Returntype":"int","Args":"itemHeight int"},{"Uniquefunname":"func getScreenSizeFromGrubParams() (w, h int, err error)","Funname":"getScreenSizeFromGrubParams","Returntype":"(w, h int, err error)","Args":""},{"Uniquefunname":"func getScrollbarThumbR(menuR int) int","Funname":"getScrollbarThumbR","Returntype":"int","Args":"menuR int"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func loadBackgroundImage() (image.Image, error)","Funname":"loadBackgroundImage","Returntype":"(image.Image, error)","Args":""},{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func adjustBackground(themeOutputDir string, img image.Image) (image.Image, error)","Funname":"main.adjustBackground","Returntype":"(image.Image, error)","Args":"themeOutputDir string, img image.Image"},{"Uniquefunname":"func adjustBootMenu(themeOutputDir string, comp *tt.Component, vars map[string]float64)","Funname":"main.adjustBootMenu","Returntype":"","Args":"themeOutputDir string, comp *tt.Component, vars map[string]float64"},{"Uniquefunname":"func adjustBootMenuPixmapStyle(themeOutputDir string, comp *tt.Component, bgImg image.Image)","Funname":"main.adjustBootMenuPixmapStyle","Returntype":"","Args":"themeOutputDir string, comp *tt.Component, bgImg image.Image"},{"Uniquefunname":"func main.adjustFont(themeOutputDir string, comp *tt.Component, propName string, vars map[string]float64)(*font.Face, error)","Funname":"main.adjustFont","Returntype":"(*font.Face, error)","Args":"themeOutputDir string, comp *tt.Component, propName string, vars map[string]float64"},{"Uniquefunname":"func adjustItemPixmapStyle(r int)","Funname":"main.adjustItemPixmapStyle","Returntype":"","Args":"r int"},{"Uniquefunname":"func adjustLabel(themeOutputDir string, comp *tt.Component, vars map[string]float64)","Funname":"main.adjustLabel","Returntype":"","Args":"themeOutputDir string, comp *tt.Component, vars map[string]float64"},{"Uniquefunname":"func adjustLabelText(comp *tt.Component)","Funname":"main.adjustLabelText","Returntype":"","Args":"comp *tt.Component"},{"Uniquefunname":"func adjustProp(comp *tt.Component, propName string, vars map[string]float64) int","Funname":"main.adjustProp","Returntype":"int","Args":"comp *tt.Component, propName string, vars map[string]float64"},{"Uniquefunname":"func adjustResourcesOsLogos(themeInputDir, themeOutputDir string, width, height int)","Funname":"main.adjustResourcesOsLogos","Returntype":"","Args":"themeInputDir, themeOutputDir string, width, height int"},{"Uniquefunname":"func adjustScrollbarThumbPixmapStyle(r int)","Funname":"main.adjustScrollbarThumbPixmapStyle","Returntype":"","Args":"r int"},{"Uniquefunname":"func adjustSelectedItemPixmapStyle(r int)","Funname":"main.adjustSelectedItemPixmapStyle","Returntype":"","Args":"r int"},{"Uniquefunname":"func adjustTerminalFont(themeOutputDir string, theme *tt.Theme, vars map[string]float64) error","Funname":"main.adjustTerminalFont","Returntype":"error","Args":"themeOutputDir string, theme *tt.Theme, vars map[string]float64"},{"Uniquefunname":"func adjustTheme()","Funname":"main.adjustTheme","Returntype":"","Args":""},{"Uniquefunname":"func adjustThemeFallback() error","Funname":"main.adjustThemeFallback","Returntype":"error","Args":""},{"Uniquefunname":"func adjustThemeNormal() error","Funname":"main.adjustThemeNormal","Returntype":"error","Args":""},{"Uniquefunname":"func cleanupThemeOutputDir(dir string)","Funname":"main.cleanupThemeOutputDir","Returntype":"","Args":"dir string"},{"Uniquefunname":"func convertPropAbs2Rel(comp *tt.Component, propName string, orientation int)","Funname":"main.convertPropAbs2Rel","Returntype":"","Args":"comp *tt.Component, propName string, orientation int"},{"Uniquefunname":"func convertPropRel2Abs(comp *tt.Component, propName string, orientation int)","Funname":"main.convertPropRel2Abs","Returntype":"","Args":"comp *tt.Component, propName string, orientation int"},{"Uniquefunname":"func copyBgSource(filename string) error","Funname":"main.copyBgSource","Returntype":"error","Args":"filename string"},{"Uniquefunname":"func copyThemeFiles(themeInputDir, themeOutputDir string)","Funname":"main.copyThemeFiles","Returntype":"","Args":"themeInputDir, themeOutputDir string"},{"Uniquefunname":"func cropSaveScrollbarThumbStyleBox(img image.Image, r int, name string)","Funname":"main.cropSaveScrollbarThumbStyleBox","Returntype":"","Args":"img image.Image, r int, name string"},{"Uniquefunname":"func cropSaveStyleBox(img image.Image, filenamePrefix string, r int)","Funname":"main.cropSaveStyleBox","Returntype":"","Args":"img image.Image, filenamePrefix string, r int"},{"Uniquefunname":"func genPF2Font(themeOutputDir, fontFile string, faceIndex, size int) (*font.Face, error)","Funname":"main.genPF2Font","Returntype":"(*font.Face, error)","Args":"themeOutputDir, fontFile string, faceIndex, size int"},{"Uniquefunname":"func getBootMenuR(itemHeight int) int","Funname":"main.getBootMenuR","Returntype":"int","Args":"itemHeight int"},{"Uniquefunname":"func getFallbackDir() string","Funname":"main.getFallbackDir","Returntype":"string","Args":""},{"Uniquefunname":"func getFontSize(screenWidth int, screenHeight int) int","Funname":"main.getFontSize","Returntype":"int","Args":"screenWidth int, screenHeight int"},{"Uniquefunname":"func getItemR(itemHeight int) int","Funname":"main.getItemR","Returntype":"int","Args":"itemHeight int"},{"Uniquefunname":"func getScreenSizeFromGrubParams() (w, h int, err error)","Funname":"main.getScreenSizeFromGrubParams","Returntype":"(w, h int, err error)","Args":""},{"Uniquefunname":"func getScrollbarThumbR(menuR int) int","Funname":"main.getScrollbarThumbR","Returntype":"int","Args":"menuR int"},{"Uniquefunname":"func init()","Funname":"main.init","Returntype":"","Args":""},{"Uniquefunname":"func loadBackgroundImage() (image.Image, error)","Funname":"main.loadBackgroundImage","Returntype":"(image.Image, error)","Args":""},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""},{"Uniquefunname":"func parseTplFont(str string) (fontName string, sizeScale float64, err error)","Funname":"main.parseTplFont","Returntype":"(fontName string, sizeScale float64, err error)","Args":"str string"},{"Uniquefunname":"func setBackground(bgFile string)","Funname":"main.setBackground","Returntype":"","Args":"bgFile string"},{"Uniquefunname":"func parseTplFont(str string) (fontName string, sizeScale float64, err error)","Funname":"parseTplFont","Returntype":"(fontName string, sizeScale float64, err error)","Args":"str string"},{"Uniquefunname":"func setBackground(bgFile string)","Funname":"setBackground","Returntype":"","Args":"bgFile string"}],"Records":[{"Name":"const:main","Fields":["main.defaultThemeInputDir","main.defaultThemeOutputDir","main.minFontSize","main.minTerminalFontSize","main.orientationHorizontal","main.orientationVertical","main.themeNameFallback","main.themeNameNormal"]},{"Name":"var:main","Fields":["main.genFontCache","main.logger","main.optFallbackOnly","main.optLang","main.optLogSys","main.optScreenHeight","main.optScreenWidth","main.optSetBackground","main.optTerminalFontName","main.optTerminalFontSize","main.optThemeInputDir","main.optThemeOutputDir","main.optVersion"]},{"Name":"struct:main.genFontCacheKey","Fields":["main.genFontCacheKey.faceIndex int","main.genFontCacheKey.fontFile string","main.genFontCacheKey.size int"]}]}
{"Filepath":"adjust-grub-theme/util.go","Functions":[{"Uniquefunname":"func (err InvalidResolutionError) Error() string","Funname":"Error","Returntype":"string","Args":""},{"Uniquefunname":"func convertSvg(svgFile, outFile string, width, height int) error","Funname":"convertSvg","Returntype":"error","Args":"svgFile, outFile string, width, height int"},{"Uniquefunname":"func copyFile(src, dst string) (int64, error)","Funname":"copyFile","Returntype":"(int64, error)","Args":"src, dst string"},{"Uniquefunname":"func copyVars(vars map[string]float64) map[string]float64","Funname":"copyVars","Returntype":"map[string]float64","Args":"vars map[string]float64"},{"Uniquefunname":"func decodeShellValue(in string) string","Funname":"decodeShellValue","Returntype":"string","Args":"in string"},{"Uniquefunname":"func eval(vars map[string]float64, expr string) (float64, error)","Funname":"eval","Returntype":"(float64, error)","Args":"vars map[string]float64, expr string"},{"Uniquefunname":"func findFont(pattern string) (fontFile string, faceIndex int, err error)","Funname":"findFont","Returntype":"(fontFile string, faceIndex int, err error)","Args":"pattern string"},{"Uniquefunname":"func getCurrentLocale() (locale string)","Funname":"getCurrentLocale","Returntype":"(locale string)","Args":""},{"Uniquefunname":"func getDefaultLocale() (locale string)","Funname":"getDefaultLocale","Returntype":"(locale string)","Args":""},{"Uniquefunname":"func getGfxMode(params map[string]string) (val string)","Funname":"getGfxMode","Returntype":"(val string)","Args":"params map[string]string"},{"Uniquefunname":"func getLocaleFromFile(file string) string","Funname":"getLocaleFromFile","Returntype":"string","Args":"file string"},{"Uniquefunname":"func loadGrubParams() (map[string]string, error)","Funname":"loadGrubParams","Returntype":"(map[string]string, error)","Args":""},{"Uniquefunname":"func loadImage(filename string) (image.Image, error)","Funname":"loadImage","Returntype":"(image.Image, error)","Args":"filename string"},{"Uniquefunname":"func (err InvalidResolutionError) Error() string","Funname":"main.InvalidResolutionError.Error","Returntype":"string","Args":""},{"Uniquefunname":"func convertSvg(svgFile, outFile string, width, height int) error","Funname":"main.convertSvg","Returntype":"error","Args":"svgFile, outFile string, width, height int"},{"Uniquefunname":"func copyFile(src, dst string) (int64, error)","Funname":"main.copyFile","Returntype":"(int64, error)","Args":"src, dst string"},{"Uniquefunname":"func copyVars(vars map[string]float64) map[string]float64","Funname":"main.copyVars","Returntype":"map[string]float64","Args":"vars map[string]float64"},{"Uniquefunname":"func decodeShellValue(in string) string","Funname":"main.decodeShellValue","Returntype":"string","Args":"in string"},{"Uniquefunname":"func eval(vars map[string]float64, expr string) (float64, error)","Funname":"main.eval","Returntype":"(float64, error)","Args":"vars map[string]float64, expr string"},{"Uniquefunname":"func findFont(pattern string) (fontFile string, faceIndex int, err error)","Funname":"main.findFont","Returntype":"(fontFile string, faceIndex int, err error)","Args":"pattern string"},{"Uniquefunname":"func getCurrentLocale() (locale string)","Funname":"main.getCurrentLocale","Returntype":"(locale string)","Args":""},{"Uniquefunname":"func getDefaultLocale() (locale string)","Funname":"main.getDefaultLocale","Returntype":"(locale string)","Args":""},{"Uniquefunname":"func getGfxMode(params map[string]string) (val string)","Funname":"main.getGfxMode","Returntype":"(val string)","Args":"params map[string]string"},{"Uniquefunname":"func getLocaleFromFile(file string) string","Funname":"main.getLocaleFromFile","Returntype":"string","Args":"file string"},{"Uniquefunname":"func loadGrubParams() (map[string]string, error)","Funname":"main.loadGrubParams","Returntype":"(map[string]string, error)","Args":""},{"Uniquefunname":"func loadImage(filename string) (image.Image, error)","Funname":"main.loadImage","Returntype":"(image.Image, error)","Args":"filename string"},{"Uniquefunname":"func parseResolution(v string) (w, h int, err error)","Funname":"main.parseResolution","Returntype":"(w, h int, err error)","Args":"v string"},{"Uniquefunname":"func round(f float64) int","Funname":"main.round","Returntype":"int","Args":"f float64"},{"Uniquefunname":"func saveJpeg(img image.Image, filename string) error","Funname":"main.saveJpeg","Returntype":"error","Args":"img image.Image, filename string"},{"Uniquefunname":"func savePng(img image.Image, filename string) error","Funname":"main.savePng","Returntype":"error","Args":"img image.Image, filename string"},{"Uniquefunname":"func parseResolution(v string) (w, h int, err error)","Funname":"parseResolution","Returntype":"(w, h int, err error)","Args":"v string"},{"Uniquefunname":"func round(f float64) int","Funname":"round","Returntype":"int","Args":"f float64"},{"Uniquefunname":"func saveJpeg(img image.Image, filename string) error","Funname":"saveJpeg","Returntype":"error","Args":"img image.Image, filename string"},{"Uniquefunname":"func savePng(img image.Image, filename string) error","Funname":"savePng","Returntype":"error","Args":"img image.Image, filename string"}],"Records":[{"Name":"struct:main.InvalidResolutionError","Fields":["main.InvalidResolutionError.Resolution string"]},{"Name":"const:main","Fields":["main.defaultGrubGfxMode","main.defaultLocale","main.grubGfxMode","main.grubParamsFile","main.systemLocaleFile","main.systemdLocaleFile"]},{"Name":"var:main","Fields":["main.findFontCache"]},{"Name":"struct:main.findFontResult","Fields":["main.findFontResult.faceIndex int","main.findFontResult.fontFile string"]}]}
{"Filepath":"adjust-grub-theme/version.go","Functions":null,"Records":[{"Name":"const:main","Fields":["main.VERSION"]}]}
{"Filepath":"blurimage/blurimage.go","Functions":[{"Uniquefunname":"func BlurImage(file string, sigma float64, dest string) error","Funname":"BlurImage","Returntype":"error","Args":"file string, sigma float64, dest string"},{"Uniquefunname":"func BlurImage(file string, sigma float64, dest string) error","Funname":"blurimage.BlurImage","Returntype":"error","Args":"file string, sigma float64, dest string"},{"Uniquefunname":"func isTooBright(img image.Image) bool","Funname":"blurimage.isTooBright","Returntype":"bool","Args":"img image.Image"},{"Uniquefunname":"func isTooBright(img image.Image) bool","Funname":"isTooBright","Returntype":"bool","Args":"img image.Image"}],"Records":null}
{"Filepath":"blurimage/blurimage_test.go","Functions":[{"Uniquefunname":"func BenchmarkIsTooBright(b *testing.B)","Funname":"BenchmarkIsTooBright","Returntype":"","Args":"b *testing.B"},{"Uniquefunname":"func TestIsTooBright(t *testing.T)","Funname":"TestIsTooBright","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func BenchmarkIsTooBright(b *testing.B)","Funname":"blurimage.BenchmarkIsTooBright","Returntype":"","Args":"b *testing.B"},{"Uniquefunname":"func TestIsTooBright(t *testing.T)","Funname":"blurimage.TestIsTooBright","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"cursor-helper/main.go","Functions":[{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) Set(name string) *dbus.Error","Funname":"Set","Returntype":"*dbus.Error","Args":"name string"},{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"main.Manager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) Set(name string) *dbus.Error","Funname":"main.Manager.Set","Returntype":"*dbus.Error","Args":"name string"},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""},{"Uniquefunname":"func setTheme(name string)","Funname":"main.setTheme","Returntype":"","Args":"name string"},{"Uniquefunname":"func setTheme(name string)","Funname":"setTheme","Returntype":"","Args":"name string"}],"Records":[{"Name":"struct:main.Manager","Fields":["main.Manager.methods *struct { Set func() `in:\"name\"`; }","main.Manager.running bool","main.Manager.runningMu sync.Mutex","main.Manager.service *dbusutil.Service","main.Manager.setThemeMu sync.Mutex"]},{"Name":"const:main","Fields":["main.dbusInterface","main.dbusPath","main.dbusServiceName"]},{"Name":"var:main","Fields":["main.logger"]}]}
{"Filepath":"dde-open/main.go","Functions":[{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func launchApp(desktopFile, filename string) error","Funname":"launchApp","Returntype":"error","Args":"desktopFile, filename string"},{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"main.init","Returntype":"","Args":""},{"Uniquefunname":"func launchApp(desktopFile, filename string) error","Funname":"main.launchApp","Returntype":"error","Args":"desktopFile, filename string"},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""},{"Uniquefunname":"func openFile(filename string) error","Funname":"main.openFile","Returntype":"error","Args":"filename string"},{"Uniquefunname":"func openScheme(scheme, url string) error","Funname":"main.openScheme","Returntype":"error","Args":"scheme, url string"},{"Uniquefunname":"func openFile(filename string) error","Funname":"openFile","Returntype":"error","Args":"filename string"},{"Uniquefunname":"func openScheme(scheme, url string) error","Funname":"openScheme","Returntype":"error","Args":"scheme, url string"}],"Records":[{"Name":"var:main","Fields":["main.logger","main.optVersion"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/drandr/crtc.go","Functions":[{"Uniquefunname":"func getReflects(origin uint16) []uint16","Funname":"drandr.getReflects","Returntype":"[]uint16","Args":"origin uint16"},{"Uniquefunname":"func getRotations(origin uint16) []uint16","Funname":"drandr.getRotations","Returntype":"[]uint16","Args":"origin uint16"},{"Uniquefunname":"func parseCrtcRotation(origin uint16) (rotation, reflect uint16)","Funname":"drandr.parseCrtcRotation","Returntype":"(rotation, reflect uint16)","Args":"origin uint16"},{"Uniquefunname":"func toCrtcInfo(conn *x.Conn, crtc randr.Crtc) CrtcInfo","Funname":"drandr.toCrtcInfo","Returntype":"CrtcInfo","Args":"conn *x.Conn, crtc randr.Crtc"},{"Uniquefunname":"func getReflects(origin uint16) []uint16","Funname":"getReflects","Returntype":"[]uint16","Args":"origin uint16"},{"Uniquefunname":"func getRotations(origin uint16) []uint16","Funname":"getRotations","Returntype":"[]uint16","Args":"origin uint16"},{"Uniquefunname":"func parseCrtcRotation(origin uint16) (rotation, reflect uint16)","Funname":"parseCrtcRotation","Returntype":"(rotation, reflect uint16)","Args":"origin uint16"},{"Uniquefunname":"func toCrtcInfo(conn *x.Conn, crtc randr.Crtc) CrtcInfo","Funname":"toCrtcInfo","Returntype":"CrtcInfo","Args":"conn *x.Conn, crtc randr.Crtc"}],"Records":[{"Name":"struct:drandr.CrtcInfo","Fields":["drandr.CrtcInfo.Height uint16","drandr.CrtcInfo.Id uint32","drandr.CrtcInfo.Mode uint32","drandr.CrtcInfo.Reflect uint16","drandr.CrtcInfo.Reflects []uint16","drandr.CrtcInfo.Rotation uint16","drandr.CrtcInfo.Rotations []uint16","drandr.CrtcInfo.Width uint16","drandr.CrtcInfo.X int16","drandr.CrtcInfo.Y int16"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/drandr/drandr.go","Functions":[{"Uniquefunname":"func (info *ScreenInfo) GetPrimary() (*OutputInfo, error)","Funname":"GetPrimary","Returntype":"(*OutputInfo, error)","Args":""},{"Uniquefunname":"func GetScreenInfo(conn *x.Conn) (*ScreenInfo, error)","Funname":"GetScreenInfo","Returntype":"(*ScreenInfo, error)","Args":"conn *x.Conn"},{"Uniquefunname":"func (info *ScreenInfo) GetScreenSize() (uint16, uint16)","Funname":"GetScreenSize","Returntype":"(uint16, uint16)","Args":""},{"Uniquefunname":"func GetScreenInfo(conn *x.Conn) (*ScreenInfo, error)","Funname":"drandr.GetScreenInfo","Returntype":"(*ScreenInfo, error)","Args":"conn *x.Conn"},{"Uniquefunname":"func (info *ScreenInfo) GetPrimary() (*OutputInfo, error)","Funname":"drandr.ScreenInfo.GetPrimary","Returntype":"(*OutputInfo, error)","Args":""},{"Uniquefunname":"func (info *ScreenInfo) GetScreenSize() (uint16, uint16)","Funname":"drandr.ScreenInfo.GetScreenSize","Returntype":"(uint16, uint16)","Args":""}],"Records":[{"Name":"struct:drandr.ScreenInfo","Fields":["drandr.ScreenInfo.Modes ModeInfos","drandr.ScreenInfo.Outputs OutputInfos","drandr.ScreenInfo.conn *x.Conn","drandr.ScreenInfo.window x.Window"]},{"Name":"var:drandr","Fields":["drandr.infoLocker","drandr.lastConfigTimestamp"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/drandr/mode.go","Functions":[{"Uniquefunname":"func (info ModeInfo) Equal(v ModeInfo) bool","Funname":"Equal","Returntype":"bool","Args":"v ModeInfo"},{"Uniquefunname":"func (infos ModeInfos) Equal(list ModeInfos) bool","Funname":"Equal","Returntype":"bool","Args":"list ModeInfos"},{"Uniquefunname":"func (infos ModeInfos) FilterBySize() ModeInfos","Funname":"FilterBySize","Returntype":"ModeInfos","Args":""},{"Uniquefunname":"func FindCommonModes(infosGroup ...ModeInfos) ModeInfos","Funname":"FindCommonModes","Returntype":"ModeInfos","Args":"infosGroup ...ModeInfos"},{"Uniquefunname":"func (infos ModeInfos) HasRefreshRate(rate float64) bool","Funname":"HasRefreshRate","Returntype":"bool","Args":"rate float64"},{"Uniquefunname":"func (infos ModeInfos) Len() int","Funname":"Len","Returntype":"int","Args":""},{"Uniquefunname":"func (infos ModeInfos) Less(i, j int) bool","Funname":"Less","Returntype":"bool","Args":"i, j int"},{"Uniquefunname":"func (infos ModeInfos) Max() ModeInfo","Funname":"Max","Returntype":"ModeInfo","Args":""},{"Uniquefunname":"func (infos ModeInfos) Query(id uint32) ModeInfo","Funname":"Query","Returntype":"ModeInfo","Args":"id uint32"},{"Uniquefunname":"func (infos ModeInfos) QueryBySize(width, height uint16) ModeInfos","Funname":"QueryBySize","Returntype":"ModeInfos","Args":"width, height uint16"},{"Uniquefunname":"func (infos ModeInfos) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (infos ModeInfos) Swap(i, j int)","Funname":"Swap","Returntype":"","Args":"i, j int"},{"Uniquefunname":"func calcModeRate(info randr.ModeInfo) float64","Funname":"calcModeRate","Returntype":"float64","Args":"info randr.ModeInfo"},{"Uniquefunname":"func doFoundCommonModes(modes1, modes2 ModeInfos) ModeInfos","Funname":"doFoundCommonModes","Returntype":"ModeInfos","Args":"modes1, modes2 ModeInfos"},{"Uniquefunname":"func FindCommonModes(infosGroup ...ModeInfos) ModeInfos","Funname":"drandr.FindCommonModes","Returntype":"ModeInfos","Args":"infosGroup ...ModeInfos"},{"Uniquefunname":"func (info ModeInfo) Equal(v ModeInfo) bool","Funname":"drandr.ModeInfo.Equal","Returntype":"bool","Args":"v ModeInfo"},{"Uniquefunname":"func (infos ModeInfos) Equal(list ModeInfos) bool","Funname":"drandr.ModeInfos.Equal","Returntype":"bool","Args":"list ModeInfos"},{"Uniquefunname":"func (infos ModeInfos) FilterBySize() ModeInfos","Funname":"drandr.ModeInfos.FilterBySize","Returntype":"ModeInfos","Args":""},{"Uniquefunname":"func (infos ModeInfos) HasRefreshRate(rate float64) bool","Funname":"drandr.ModeInfos.HasRefreshRate","Returntype":"bool","Args":"rate float64"},{"Uniquefunname":"func (infos ModeInfos) Len() int","Funname":"drandr.ModeInfos.Len","Returntype":"int","Args":""},{"Uniquefunname":"func (infos ModeInfos) Less(i, j int) bool","Funname":"drandr.ModeInfos.Less","Returntype":"bool","Args":"i, j int"},{"Uniquefunname":"func (infos ModeInfos) Max() ModeInfo","Funname":"drandr.ModeInfos.Max","Returntype":"ModeInfo","Args":""},{"Uniquefunname":"func (infos ModeInfos) Query(id uint32) ModeInfo","Funname":"drandr.ModeInfos.Query","Returntype":"ModeInfo","Args":"id uint32"},{"Uniquefunname":"func (infos ModeInfos) QueryBySize(width, height uint16) ModeInfos","Funname":"drandr.ModeInfos.QueryBySize","Returntype":"ModeInfos","Args":"width, height uint16"},{"Uniquefunname":"func (infos ModeInfos) String() string","Funname":"drandr.ModeInfos.String","Returntype":"string","Args":""},{"Uniquefunname":"func (infos ModeInfos) Swap(i, j int)","Funname":"drandr.ModeInfos.Swap","Returntype":"","Args":"i, j int"},{"Uniquefunname":"func calcModeRate(info randr.ModeInfo) float64","Funname":"drandr.calcModeRate","Returntype":"float64","Args":"info randr.ModeInfo"},{"Uniquefunname":"func doFoundCommonModes(modes1, modes2 ModeInfos) ModeInfos","Funname":"drandr.doFoundCommonModes","Returntype":"ModeInfos","Args":"modes1, modes2 ModeInfos"},{"Uniquefunname":"func toModeInfo(info randr.ModeInfo) ModeInfo","Funname":"drandr.toModeInfo","Returntype":"ModeInfo","Args":"info randr.ModeInfo"},{"Uniquefunname":"func toModeInfo(info randr.ModeInfo) ModeInfo","Funname":"toModeInfo","Returntype":"ModeInfo","Args":"info randr.ModeInfo"}],"Records":[{"Name":"struct:drandr.ModeInfo","Fields":["drandr.ModeInfo.Height uint16","drandr.ModeInfo.Id uint32","drandr.ModeInfo.Rate float64","drandr.ModeInfo.Width uint16"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/drandr/mode_test.go","Functions":[{"Uniquefunname":"func TestCommonModes(t *testing.T)","Funname":"TestCommonModes","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestCommonModes(t *testing.T)","Funname":"drandr.TestCommonModes","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/drandr/output.go","Functions":[{"Uniquefunname":"func (infos OutputInfos) ListConnectionOutputs() OutputInfos","Funname":"ListConnectionOutputs","Returntype":"OutputInfos","Args":""},{"Uniquefunname":"func (infos OutputInfos) ListNames() []string","Funname":"ListNames","Returntype":"[]string","Args":""},{"Uniquefunname":"func (infos OutputInfos) Query(id uint32) OutputInfo","Funname":"Query","Returntype":"OutputInfo","Args":"id uint32"},{"Uniquefunname":"func (infos OutputInfos) QueryByName(name string) OutputInfo","Funname":"QueryByName","Returntype":"OutputInfo","Args":"name string"},{"Uniquefunname":"func crtcsToRandrIdList(crtcs []randr.Crtc) randrIdList","Funname":"crtcsToRandrIdList","Returntype":"randrIdList","Args":"crtcs []randr.Crtc"},{"Uniquefunname":"func (infos OutputInfos) ListConnectionOutputs() OutputInfos","Funname":"drandr.OutputInfos.ListConnectionOutputs","Returntype":"OutputInfos","Args":""},{"Uniquefunname":"func (infos OutputInfos) ListNames() []string","Funname":"drandr.OutputInfos.ListNames","Returntype":"[]string","Args":""},{"Uniquefunname":"func (infos OutputInfos) Query(id uint32) OutputInfo","Funname":"drandr.OutputInfos.Query","Returntype":"OutputInfo","Args":"id uint32"},{"Uniquefunname":"func (infos OutputInfos) QueryByName(name string) OutputInfo","Funname":"drandr.OutputInfos.QueryByName","Returntype":"OutputInfo","Args":"name string"},{"Uniquefunname":"func (infos OutputInfos) query(key, value string) OutputInfo","Funname":"drandr.OutputInfos.query","Returntype":"OutputInfo","Args":"key, value string"},{"Uniquefunname":"func crtcsToRandrIdList(crtcs []randr.Crtc) randrIdList","Funname":"drandr.crtcsToRandrIdList","Returntype":"randrIdList","Args":"crtcs []randr.Crtc"},{"Uniquefunname":"func getOutputEDID(conn *x.Conn, output randr.Output) ([]byte, error)","Funname":"drandr.getOutputEDID","Returntype":"([]byte, error)","Args":"conn *x.Conn, output randr.Output"},{"Uniquefunname":"func getOutputPreferredModes(modes randrIdList, nPreferred uint16) randrIdList","Funname":"drandr.getOutputPreferredModes","Returntype":"randrIdList","Args":"modes randrIdList, nPreferred uint16"},{"Uniquefunname":"func modesToRandrIdList(modes []randr.Mode) randrIdList","Funname":"drandr.modesToRandrIdList","Returntype":"randrIdList","Args":"modes []randr.Mode"},{"Uniquefunname":"func outputsToRandrIdList(outputs []randr.Output) randrIdList","Funname":"drandr.outputsToRandrIdList","Returntype":"randrIdList","Args":"outputs []randr.Output"},{"Uniquefunname":"func toOutputInfo(conn *x.Conn, output randr.Output) OutputInfo","Funname":"drandr.toOutputInfo","Returntype":"OutputInfo","Args":"conn *x.Conn, output randr.Output"},{"Uniquefunname":"func getOutputEDID(conn *x.Conn, output randr.Output) ([]byte, error)","Funname":"getOutputEDID","Returntype":"([]byte, error)","Args":"conn *x.Conn, output randr.Output"},{"Uniquefunname":"func getOutputPreferredModes(modes randrIdList, nPreferred uint16) randrIdList","Funname":"getOutputPreferredModes","Returntype":"randrIdList","Args":"modes randrIdList, nPreferred uint16"},{"Uniquefunname":"func modesToRandrIdList(modes []randr.Mode) randrIdList","Funname":"modesToRandrIdList","Returntype":"randrIdList","Args":"modes []randr.Mode"},{"Uniquefunname":"func outputsToRandrIdList(outputs []randr.Output) randrIdList","Funname":"outputsToRandrIdList","Returntype":"randrIdList","Args":"outputs []randr.Output"},{"Uniquefunname":"func (infos OutputInfos) query(key, value string) OutputInfo","Funname":"query","Returntype":"OutputInfo","Args":"key, value string"},{"Uniquefunname":"func toOutputInfo(conn *x.Conn, output randr.Output) OutputInfo","Funname":"toOutputInfo","Returntype":"OutputInfo","Args":"conn *x.Conn, output randr.Output"}],"Records":[{"Name":"struct:drandr.OutputInfo","Fields":["drandr.OutputInfo.Clones randrIdList","drandr.OutputInfo.Connection bool","drandr.OutputInfo.Crtc CrtcInfo","drandr.OutputInfo.Crtcs randrIdList","drandr.OutputInfo.EDID []byte","drandr.OutputInfo.Id uint32","drandr.OutputInfo.MmHeight uint32","drandr.OutputInfo.MmWidth uint32","drandr.OutputInfo.Modes randrIdList","drandr.OutputInfo.Name string","drandr.OutputInfo.PreferredModes randrIdList","drandr.OutputInfo.Timestamp x.Timestamp"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/dxinput/keyboard.go","Functions":[{"Uniquefunname":"func SetKeyboardRepeat(enabled bool, delay, interval uint32) error","Funname":"SetKeyboardRepeat","Returntype":"error","Args":"enabled bool, delay, interval uint32"},{"Uniquefunname":"func SetKeyboardRepeat(enabled bool, delay, interval uint32) error","Funname":"dxinput.SetKeyboardRepeat","Returntype":"error","Args":"enabled bool, delay, interval uint32"}],"Records":null}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/dxinput/libinput.go","Functions":[{"Uniquefunname":"func libinputCanScroll(id int32) (bool, bool, bool)","Funname":"dxinput.libinputCanScroll","Returntype":"(bool, bool, bool)","Args":"id int32"},{"Uniquefunname":"func libinputEnableScrollButton(id int32, enabled bool) error","Funname":"dxinput.libinputEnableScrollButton","Returntype":"error","Args":"id int32, enabled bool"},{"Uniquefunname":"func libinputEnableScrollEdge(id int32, enabled bool) error","Funname":"dxinput.libinputEnableScrollEdge","Returntype":"error","Args":"id int32, enabled bool"},{"Uniquefunname":"func libinputEnableScrollTwoFinger(id int32, enabled bool) error","Funname":"dxinput.libinputEnableScrollTwoFinger","Returntype":"error","Args":"id int32, enabled bool"},{"Uniquefunname":"func libinputGetAccel(id int32) (float32, error)","Funname":"dxinput.libinputGetAccel","Returntype":"(float32, error)","Args":"id int32"},{"Uniquefunname":"func libinputGetAccelProfile(id int32) (bool, bool)","Funname":"dxinput.libinputGetAccelProfile","Returntype":"(bool, bool)","Args":"id int32"},{"Uniquefunname":"func libinputGetScrollButton(id int32) (int32, error)","Funname":"dxinput.libinputGetScrollButton","Returntype":"(int32, error)","Args":"id int32"},{"Uniquefunname":"func libinputInt8PropCan(id int32, prop string) bool","Funname":"dxinput.libinputInt8PropCan","Returntype":"bool","Args":"id int32, prop string"},{"Uniquefunname":"func libinputInt8PropSet(id int32, prop string, enabled bool) error","Funname":"dxinput.libinputInt8PropSet","Returntype":"error","Args":"id int32, prop string, enabled bool"},{"Uniquefunname":"func libinputIsBothAccelProfileAvaliable(id int32) bool","Funname":"dxinput.libinputIsBothAccelProfileAvaliable","Returntype":"bool","Args":"id int32"},{"Uniquefunname":"func libinputSetAccel(id int32, accel float32) error","Funname":"dxinput.libinputSetAccel","Returntype":"error","Args":"id int32, accel float32"},{"Uniquefunname":"func libinputSetAccelProfile(id int32, useAdaptiveProfile bool) error","Funname":"dxinput.libinputSetAccelProfile","Returntype":"error","Args":"id int32, useAdaptiveProfile bool"},{"Uniquefunname":"func libinputSetScrollButton(id, btn int32) error","Funname":"dxinput.libinputSetScrollButton","Returntype":"error","Args":"id, btn int32"},{"Uniquefunname":"func libinputCanScroll(id int32) (bool, bool, bool)","Funname":"libinputCanScroll","Returntype":"(bool, bool, bool)","Args":"id int32"},{"Uniquefunname":"func libinputEnableScrollButton(id int32, enabled bool) error","Funname":"libinputEnableScrollButton","Returntype":"error","Args":"id int32, enabled bool"},{"Uniquefunname":"func libinputEnableScrollEdge(id int32, enabled bool) error","Funname":"libinputEnableScrollEdge","Returntype":"error","Args":"id int32, enabled bool"},{"Uniquefunname":"func libinputEnableScrollTwoFinger(id int32, enabled bool) error","Funname":"libinputEnableScrollTwoFinger","Returntype":"error","Args":"id int32, enabled bool"},{"Uniquefunname":"func libinputGetAccel(id int32) (float32, error)","Funname":"libinputGetAccel","Returntype":"(float32, error)","Args":"id int32"},{"Uniquefunname":"func libinputGetAccelProfile(id int32) (bool, bool)","Funname":"libinputGetAccelProfile","Returntype":"(bool, bool)","Args":"id int32"},{"Uniquefunname":"func libinputGetScrollButton(id int32) (int32, error)","Funname":"libinputGetScrollButton","Returntype":"(int32, error)","Args":"id int32"},{"Uniquefunname":"func libinputInt8PropCan(id int32, prop string) bool","Funname":"libinputInt8PropCan","Returntype":"bool","Args":"id int32, prop string"},{"Uniquefunname":"func libinputInt8PropSet(id int32, prop string, enabled bool) error","Funname":"libinputInt8PropSet","Returntype":"error","Args":"id int32, prop string, enabled bool"},{"Uniquefunname":"func libinputIsBothAccelProfileAvaliable(id int32) bool","Funname":"libinputIsBothAccelProfileAvaliable","Returntype":"bool","Args":"id int32"},{"Uniquefunname":"func libinputSetAccel(id int32, accel float32) error","Funname":"libinputSetAccel","Returntype":"error","Args":"id int32, accel float32"},{"Uniquefunname":"func libinputSetAccelProfile(id int32, useAdaptiveProfile bool) error","Funname":"libinputSetAccelProfile","Returntype":"error","Args":"id int32, useAdaptiveProfile bool"},{"Uniquefunname":"func libinputSetScrollButton(id, btn int32) error","Funname":"libinputSetScrollButton","Returntype":"error","Args":"id, btn int32"}],"Records":[{"Name":"const:dxinput","Fields":["dxinput.libinputPropAccelProfileAvaliable","dxinput.libinputPropAccelProfileEnabled","dxinput.libinputPropAccelSpeed","dxinput.libinputPropButtonScrollingButton","dxinput.libinputPropDisableWhileTyping","dxinput.libinputPropHorizScrollEnabled","dxinput.libinputPropLeftHandedEnabled","dxinput.libinputPropMiddleEmulationEnabled","dxinput.libinputPropNaturalEnabled","dxinput.libinputPropScrollMethodsAvailable","dxinput.libinputPropScrollMethodsEnabled","dxinput.libinputPropTapEnabled"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/dxinput/mouse.go","Functions":[{"Uniquefunname":"func (m *Mouse) CanChangeAccelProfile() bool","Funname":"CanChangeAccelProfile","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanLeftHanded() bool","Funname":"CanLeftHanded","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanMiddleButtonEmulation() bool","Funname":"CanMiddleButtonEmulation","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanNaturalScroll() bool","Funname":"CanNaturalScroll","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanWheelEmulation() bool","Funname":"CanWheelEmulation","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanWheelHorizNaturalScroll() bool","Funname":"CanWheelHorizNaturalScroll","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanWheelHorizScroll() bool","Funname":"CanWheelHorizScroll","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) Enable(enabled bool) error","Funname":"Enable","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableLeftHanded(enabled bool) error","Funname":"EnableLeftHanded","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableMiddleButtonEmulation(enabled bool) error","Funname":"EnableMiddleButtonEmulation","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableNaturalScroll(enabled bool) error","Funname":"EnableNaturalScroll","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableWheelEmulation(enabled bool) error","Funname":"EnableWheelEmulation","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableWheelHorizNaturalScroll(enabled bool) error","Funname":"EnableWheelHorizNaturalScroll","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableWheelHorizScroll(enabled bool) error","Funname":"EnableWheelHorizScroll","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) IsAdaptiveAccelProfileEnabled() bool","Funname":"IsAdaptiveAccelProfileEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) IsEnabled() bool","Funname":"IsEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) MiddleButtonEmulationTimeout() (int16, error)","Funname":"MiddleButtonEmulationTimeout","Returntype":"(int16, error)","Args":""},{"Uniquefunname":"func (m *Mouse) MotionAcceleration() (float32, error)","Funname":"MotionAcceleration","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func (m *Mouse) MotionScaling() (float32, error)","Funname":"MotionScaling","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func (m *Mouse) MotionThreshold() (float32, error)","Funname":"MotionThreshold","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func NewMouse(id int32) (*Mouse, error)","Funname":"NewMouse","Returntype":"(*Mouse, error)","Args":"id int32"},{"Uniquefunname":"func NewMouseFromDeviceInfo(dev *DeviceInfo) (*Mouse, error)","Funname":"NewMouseFromDeviceInfo","Returntype":"(*Mouse, error)","Args":"dev *DeviceInfo"},{"Uniquefunname":"func (m *Mouse) SetMiddleButtonEmulationTimeout(timeout int16) error","Funname":"SetMiddleButtonEmulationTimeout","Returntype":"error","Args":"timeout int16"},{"Uniquefunname":"func (m *Mouse) SetMotionAcceleration(accel float32) error","Funname":"SetMotionAcceleration","Returntype":"error","Args":"accel float32"},{"Uniquefunname":"func (m *Mouse) SetMotionScaling(scaling float32) error","Funname":"SetMotionScaling","Returntype":"error","Args":"scaling float32"},{"Uniquefunname":"func (m *Mouse) SetMotionThreshold(thres float32) error","Funname":"SetMotionThreshold","Returntype":"error","Args":"thres float32"},{"Uniquefunname":"func (m *Mouse) SetRotation(direction uint8) error","Funname":"SetRotation","Returntype":"error","Args":"direction uint8"},{"Uniquefunname":"func (m *Mouse) SetUseAdaptiveAccelProfile(useAdaptiveProfile bool) error","Funname":"SetUseAdaptiveAccelProfile","Returntype":"error","Args":"useAdaptiveProfile bool"},{"Uniquefunname":"func (m *Mouse) SetWheelEmulationButton(btnNum int8) error","Funname":"SetWheelEmulationButton","Returntype":"error","Args":"btnNum int8"},{"Uniquefunname":"func (m *Mouse) SetWheelEmulationTimeout(timeout int16) error","Funname":"SetWheelEmulationTimeout","Returntype":"error","Args":"timeout int16"},{"Uniquefunname":"func (m *Mouse) WheelEmulationButton() (int8, error)","Funname":"WheelEmulationButton","Returntype":"(int8, error)","Args":""},{"Uniquefunname":"func (m *Mouse) WheelEmulationTimeout() (int16, error)","Funname":"WheelEmulationTimeout","Returntype":"(int16, error)","Args":""},{"Uniquefunname":"func (m *Mouse) canWheelHorizScroll(natural bool) bool","Funname":"canWheelHorizScroll","Returntype":"bool","Args":"natural bool"},{"Uniquefunname":"func (m *Mouse) CanChangeAccelProfile() bool","Funname":"dxinput.Mouse.CanChangeAccelProfile","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanLeftHanded() bool","Funname":"dxinput.Mouse.CanLeftHanded","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanMiddleButtonEmulation() bool","Funname":"dxinput.Mouse.CanMiddleButtonEmulation","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanNaturalScroll() bool","Funname":"dxinput.Mouse.CanNaturalScroll","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanWheelEmulation() bool","Funname":"dxinput.Mouse.CanWheelEmulation","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanWheelHorizNaturalScroll() bool","Funname":"dxinput.Mouse.CanWheelHorizNaturalScroll","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanWheelHorizScroll() bool","Funname":"dxinput.Mouse.CanWheelHorizScroll","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) Enable(enabled bool) error","Funname":"dxinput.Mouse.Enable","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableLeftHanded(enabled bool) error","Funname":"dxinput.Mouse.EnableLeftHanded","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableMiddleButtonEmulation(enabled bool) error","Funname":"dxinput.Mouse.EnableMiddleButtonEmulation","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableNaturalScroll(enabled bool) error","Funname":"dxinput.Mouse.EnableNaturalScroll","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableWheelEmulation(enabled bool) error","Funname":"dxinput.Mouse.EnableWheelEmulation","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableWheelHorizNaturalScroll(enabled bool) error","Funname":"dxinput.Mouse.EnableWheelHorizNaturalScroll","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableWheelHorizScroll(enabled bool) error","Funname":"dxinput.Mouse.EnableWheelHorizScroll","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) IsAdaptiveAccelProfileEnabled() bool","Funname":"dxinput.Mouse.IsAdaptiveAccelProfileEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) IsEnabled() bool","Funname":"dxinput.Mouse.IsEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) MiddleButtonEmulationTimeout() (int16, error)","Funname":"dxinput.Mouse.MiddleButtonEmulationTimeout","Returntype":"(int16, error)","Args":""},{"Uniquefunname":"func (m *Mouse) MotionAcceleration() (float32, error)","Funname":"dxinput.Mouse.MotionAcceleration","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func (m *Mouse) MotionScaling() (float32, error)","Funname":"dxinput.Mouse.MotionScaling","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func (m *Mouse) MotionThreshold() (float32, error)","Funname":"dxinput.Mouse.MotionThreshold","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func (m *Mouse) SetMiddleButtonEmulationTimeout(timeout int16) error","Funname":"dxinput.Mouse.SetMiddleButtonEmulationTimeout","Returntype":"error","Args":"timeout int16"},{"Uniquefunname":"func (m *Mouse) SetMotionAcceleration(accel float32) error","Funname":"dxinput.Mouse.SetMotionAcceleration","Returntype":"error","Args":"accel float32"},{"Uniquefunname":"func (m *Mouse) SetMotionScaling(scaling float32) error","Funname":"dxinput.Mouse.SetMotionScaling","Returntype":"error","Args":"scaling float32"},{"Uniquefunname":"func (m *Mouse) SetMotionThreshold(thres float32) error","Funname":"dxinput.Mouse.SetMotionThreshold","Returntype":"error","Args":"thres float32"},{"Uniquefunname":"func (m *Mouse) SetRotation(direction uint8) error","Funname":"dxinput.Mouse.SetRotation","Returntype":"error","Args":"direction uint8"},{"Uniquefunname":"func (m *Mouse) SetUseAdaptiveAccelProfile(useAdaptiveProfile bool) error","Funname":"dxinput.Mouse.SetUseAdaptiveAccelProfile","Returntype":"error","Args":"useAdaptiveProfile bool"},{"Uniquefunname":"func (m *Mouse) SetWheelEmulationButton(btnNum int8) error","Funname":"dxinput.Mouse.SetWheelEmulationButton","Returntype":"error","Args":"btnNum int8"},{"Uniquefunname":"func (m *Mouse) SetWheelEmulationTimeout(timeout int16) error","Funname":"dxinput.Mouse.SetWheelEmulationTimeout","Returntype":"error","Args":"timeout int16"},{"Uniquefunname":"func (m *Mouse) WheelEmulationButton() (int8, error)","Funname":"dxinput.Mouse.WheelEmulationButton","Returntype":"(int8, error)","Args":""},{"Uniquefunname":"func (m *Mouse) WheelEmulationTimeout() (int16, error)","Funname":"dxinput.Mouse.WheelEmulationTimeout","Returntype":"(int16, error)","Args":""},{"Uniquefunname":"func (m *Mouse) canWheelHorizScroll(natural bool) bool","Funname":"dxinput.Mouse.canWheelHorizScroll","Returntype":"bool","Args":"natural bool"},{"Uniquefunname":"func (m *Mouse) enableWheelHorizScroll(enabled, natural bool) error","Funname":"dxinput.Mouse.enableWheelHorizScroll","Returntype":"error","Args":"enabled, natural bool"},{"Uniquefunname":"func (m *Mouse) wheelEmulationAxes() ([]int8, error)","Funname":"dxinput.Mouse.wheelEmulationAxes","Returntype":"([]int8, error)","Args":""},{"Uniquefunname":"func NewMouse(id int32) (*Mouse, error)","Funname":"dxinput.NewMouse","Returntype":"(*Mouse, error)","Args":"id int32"},{"Uniquefunname":"func NewMouseFromDeviceInfo(dev *DeviceInfo) (*Mouse, error)","Funname":"dxinput.NewMouseFromDeviceInfo","Returntype":"(*Mouse, error)","Args":"dev *DeviceInfo"},{"Uniquefunname":"func isInt8ArrayEqual(a1, a2 []int8) bool","Funname":"dxinput.isInt8ArrayEqual","Returntype":"bool","Args":"a1, a2 []int8"},{"Uniquefunname":"func isTrackPoint(info *DeviceInfo) bool","Funname":"dxinput.isTrackPoint","Returntype":"bool","Args":"info *DeviceInfo"},{"Uniquefunname":"func (m *Mouse) enableWheelHorizScroll(enabled, natural bool) error","Funname":"enableWheelHorizScroll","Returntype":"error","Args":"enabled, natural bool"},{"Uniquefunname":"func isInt8ArrayEqual(a1, a2 []int8) bool","Funname":"isInt8ArrayEqual","Returntype":"bool","Args":"a1, a2 []int8"},{"Uniquefunname":"func isTrackPoint(info *DeviceInfo) bool","Funname":"isTrackPoint","Returntype":"bool","Args":"info *DeviceInfo"},{"Uniquefunname":"func (m *Mouse) wheelEmulationAxes() ([]int8, error)","Funname":"wheelEmulationAxes","Returntype":"([]int8, error)","Args":""}],"Records":[{"Name":"struct:dxinput.Mouse","Fields":["dxinput.Mouse.Id int32","dxinput.Mouse.Name string","dxinput.Mouse.TrackPoint bool","dxinput.Mouse.isLibinputUsed bool"]},{"Name":"const:dxinput","Fields":["dxinput.propEvdevScrollDistance","dxinput.propMidBtnEmulation","dxinput.propMidBtnEmulationTimeout","dxinput.propWheelEmulation","dxinput.propWheelEmulationAxes","dxinput.propWheelEmulationButton","dxinput.propWheelEmulationTimeout"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/dxinput/touchpad.go","Functions":[{"Uniquefunname":"func (tpad *Touchpad) CanDisableWhileTyping() bool","Funname":"CanDisableWhileTyping","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanEdgeScroll() bool","Funname":"CanEdgeScroll","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanLeftHanded() bool","Funname":"CanLeftHanded","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanNaturalScroll() bool","Funname":"CanNaturalScroll","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanPalmDetect() bool","Funname":"CanPalmDetect","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanTapToClick() bool","Funname":"CanTapToClick","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanTwoFingerScroll() (bool, bool)","Funname":"CanTwoFingerScroll","Returntype":"(bool, bool)","Args":""},{"Uniquefunname":"func (tpad *Touchpad) Enable(enabled bool) error","Funname":"Enable","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableDisableWhileTyping(enabled bool) error","Funname":"EnableDisableWhileTyping","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableEdgeScroll(enabled bool) error","Funname":"EnableEdgeScroll","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableLeftHanded(enabled bool) error","Funname":"EnableLeftHanded","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableMiddleButtonEmulation(enabled bool) error","Funname":"EnableMiddleButtonEmulation","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableNaturalScroll(enabled bool) error","Funname":"EnableNaturalScroll","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnablePalmDetect(enabled bool) error","Funname":"EnablePalmDetect","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableTapToClick(enabled bool) error","Funname":"EnableTapToClick","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableTwoFingerScroll(vert, horiz bool) error","Funname":"EnableTwoFingerScroll","Returntype":"error","Args":"vert, horiz bool"},{"Uniquefunname":"func (tpad *Touchpad) GetPalmDimensions() (int32, int32, error)","Funname":"GetPalmDimensions","Returntype":"(int32, int32, error)","Args":""},{"Uniquefunname":"func (tpad *Touchpad) IsEnabled() bool","Funname":"IsEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) IsMiddleButtonEnulationEnabled() bool","Funname":"IsMiddleButtonEnulationEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) MotionAcceleration() (float32, error)","Funname":"MotionAcceleration","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func (tpad *Touchpad) MotionScaling() (float32, error)","Funname":"MotionScaling","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func (tpad *Touchpad) MotionThreshold() (float32, error)","Funname":"MotionThreshold","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func NewTouchpad(id int32) (*Touchpad, error)","Funname":"NewTouchpad","Returntype":"(*Touchpad, error)","Args":"id int32"},{"Uniquefunname":"func NewTouchpadFromDevInfo(dev *DeviceInfo) (*Touchpad, error)","Funname":"NewTouchpadFromDevInfo","Returntype":"(*Touchpad, error)","Args":"dev *DeviceInfo"},{"Uniquefunname":"func (tpad *Touchpad) ScrollDistance() (int32, int32)","Funname":"ScrollDistance","Returntype":"(int32, int32)","Args":""},{"Uniquefunname":"func (tpad *Touchpad) SetMotionAcceleration(accel float32) error","Funname":"SetMotionAcceleration","Returntype":"error","Args":"accel float32"},{"Uniquefunname":"func (tpad *Touchpad) SetMotionScaling(scaling float32) error","Funname":"SetMotionScaling","Returntype":"error","Args":"scaling float32"},{"Uniquefunname":"func (tpad *Touchpad) SetMotionThreshold(thres float32) error","Funname":"SetMotionThreshold","Returntype":"error","Args":"thres float32"},{"Uniquefunname":"func (tpad *Touchpad) SetPalmDimensions(width, z int32) error","Funname":"SetPalmDimensions","Returntype":"error","Args":"width, z int32"},{"Uniquefunname":"func (tpad *Touchpad) SetRotation(direction uint8) error","Funname":"SetRotation","Returntype":"error","Args":"direction uint8"},{"Uniquefunname":"func (tpad *Touchpad) SetScrollDistance(vert, horiz int32) error","Funname":"SetScrollDistance","Returntype":"error","Args":"vert, horiz int32"},{"Uniquefunname":"func NewTouchpad(id int32) (*Touchpad, error)","Funname":"dxinput.NewTouchpad","Returntype":"(*Touchpad, error)","Args":"id int32"},{"Uniquefunname":"func NewTouchpadFromDevInfo(dev *DeviceInfo) (*Touchpad, error)","Funname":"dxinput.NewTouchpadFromDevInfo","Returntype":"(*Touchpad, error)","Args":"dev *DeviceInfo"},{"Uniquefunname":"func (tpad *Touchpad) CanDisableWhileTyping() bool","Funname":"dxinput.Touchpad.CanDisableWhileTyping","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanEdgeScroll() bool","Funname":"dxinput.Touchpad.CanEdgeScroll","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanLeftHanded() bool","Funname":"dxinput.Touchpad.CanLeftHanded","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanNaturalScroll() bool","Funname":"dxinput.Touchpad.CanNaturalScroll","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanPalmDetect() bool","Funname":"dxinput.Touchpad.CanPalmDetect","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanTapToClick() bool","Funname":"dxinput.Touchpad.CanTapToClick","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanTwoFingerScroll() (bool, bool)","Funname":"dxinput.Touchpad.CanTwoFingerScroll","Returntype":"(bool, bool)","Args":""},{"Uniquefunname":"func (tpad *Touchpad) Enable(enabled bool) error","Funname":"dxinput.Touchpad.Enable","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableDisableWhileTyping(enabled bool) error","Funname":"dxinput.Touchpad.EnableDisableWhileTyping","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableEdgeScroll(enabled bool) error","Funname":"dxinput.Touchpad.EnableEdgeScroll","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableLeftHanded(enabled bool) error","Funname":"dxinput.Touchpad.EnableLeftHanded","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableMiddleButtonEmulation(enabled bool) error","Funname":"dxinput.Touchpad.EnableMiddleButtonEmulation","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableNaturalScroll(enabled bool) error","Funname":"dxinput.Touchpad.EnableNaturalScroll","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnablePalmDetect(enabled bool) error","Funname":"dxinput.Touchpad.EnablePalmDetect","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableTapToClick(enabled bool) error","Funname":"dxinput.Touchpad.EnableTapToClick","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableTwoFingerScroll(vert, horiz bool) error","Funname":"dxinput.Touchpad.EnableTwoFingerScroll","Returntype":"error","Args":"vert, horiz bool"},{"Uniquefunname":"func (tpad *Touchpad) GetPalmDimensions() (int32, int32, error)","Funname":"dxinput.Touchpad.GetPalmDimensions","Returntype":"(int32, int32, error)","Args":""},{"Uniquefunname":"func (tpad *Touchpad) IsEnabled() bool","Funname":"dxinput.Touchpad.IsEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) IsMiddleButtonEnulationEnabled() bool","Funname":"dxinput.Touchpad.IsMiddleButtonEnulationEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) MotionAcceleration() (float32, error)","Funname":"dxinput.Touchpad.MotionAcceleration","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func (tpad *Touchpad) MotionScaling() (float32, error)","Funname":"dxinput.Touchpad.MotionScaling","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func (tpad *Touchpad) MotionThreshold() (float32, error)","Funname":"dxinput.Touchpad.MotionThreshold","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func (tpad *Touchpad) ScrollDistance() (int32, int32)","Funname":"dxinput.Touchpad.ScrollDistance","Returntype":"(int32, int32)","Args":""},{"Uniquefunname":"func (tpad *Touchpad) SetMotionAcceleration(accel float32) error","Funname":"dxinput.Touchpad.SetMotionAcceleration","Returntype":"error","Args":"accel float32"},{"Uniquefunname":"func (tpad *Touchpad) SetMotionScaling(scaling float32) error","Funname":"dxinput.Touchpad.SetMotionScaling","Returntype":"error","Args":"scaling float32"},{"Uniquefunname":"func (tpad *Touchpad) SetMotionThreshold(thres float32) error","Funname":"dxinput.Touchpad.SetMotionThreshold","Returntype":"error","Args":"thres float32"},{"Uniquefunname":"func (tpad *Touchpad) SetPalmDimensions(width, z int32) error","Funname":"dxinput.Touchpad.SetPalmDimensions","Returntype":"error","Args":"width, z int32"},{"Uniquefunname":"func (tpad *Touchpad) SetRotation(direction uint8) error","Funname":"dxinput.Touchpad.SetRotation","Returntype":"error","Args":"direction uint8"},{"Uniquefunname":"func (tpad *Touchpad) SetScrollDistance(vert, horiz int32) error","Funname":"dxinput.Touchpad.SetScrollDistance","Returntype":"error","Args":"vert, horiz int32"}],"Records":[{"Name":"struct:dxinput.Touchpad","Fields":["dxinput.Touchpad.Id int32","dxinput.Touchpad.Name string","dxinput.Touchpad.isLibinputUsed bool"]},{"Name":"const:dxinput","Fields":["dxinput.propEdgeScroll","dxinput.propOff","dxinput.propPalmDetect","dxinput.propPalmDimensions","dxinput.propScrollDistance","dxinput.propTapAction","dxinput.propTwoFingerScrol"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/dxinput/touchscreen.go","Functions":[{"Uniquefunname":"func (touch *Touchscreen) Enable(enabled bool) error","Funname":"Enable","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (touch *Touchscreen) IsEnabled() bool","Funname":"IsEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func NewTouchscreen(id int32) (*Touchscreen, error)","Funname":"NewTouchscreen","Returntype":"(*Touchscreen, error)","Args":"id int32"},{"Uniquefunname":"func NewTouchscreenFromDevInfo(dev *DeviceInfo) (*Touchscreen, error)","Funname":"NewTouchscreenFromDevInfo","Returntype":"(*Touchscreen, error)","Args":"dev *DeviceInfo"},{"Uniquefunname":"func (touch *Touchscreen) SetRotation(direction uint8) error","Funname":"SetRotation","Returntype":"error","Args":"direction uint8"},{"Uniquefunname":"func NewTouchscreen(id int32) (*Touchscreen, error)","Funname":"dxinput.NewTouchscreen","Returntype":"(*Touchscreen, error)","Args":"id int32"},{"Uniquefunname":"func NewTouchscreenFromDevInfo(dev *DeviceInfo) (*Touchscreen, error)","Funname":"dxinput.NewTouchscreenFromDevInfo","Returntype":"(*Touchscreen, error)","Args":"dev *DeviceInfo"},{"Uniquefunname":"func (touch *Touchscreen) Enable(enabled bool) error","Funname":"dxinput.Touchscreen.Enable","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (touch *Touchscreen) IsEnabled() bool","Funname":"dxinput.Touchscreen.IsEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func (touch *Touchscreen) SetRotation(direction uint8) error","Funname":"dxinput.Touchscreen.SetRotation","Returntype":"error","Args":"direction uint8"}],"Records":[{"Name":"struct:dxinput.Touchscreen","Fields":["dxinput.Touchscreen.Id int32","dxinput.Touchscreen.Name string","dxinput.Touchscreen.isLibinputUsed bool"]},{"Name":"const:dxinput","Fields":["dxinput.libinputPropCalibrationMatrix"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/dxinput/utils.go","Functions":[{"Uniquefunname":"func absInt32(v int32) int32","Funname":"absInt32","Returntype":"int32","Args":"v int32"},{"Uniquefunname":"func absInt32(v int32) int32","Funname":"dxinput.absInt32","Returntype":"int32","Args":"v int32"},{"Uniquefunname":"func enableDevice(id int32, enabled bool) error","Funname":"dxinput.enableDevice","Returntype":"error","Args":"id int32, enabled bool"},{"Uniquefunname":"func getFloat32Prop(id int32, prop string, nitems int32) ([]float32, error)","Funname":"dxinput.getFloat32Prop","Returntype":"([]float32, error)","Args":"id int32, prop string, nitems int32"},{"Uniquefunname":"func getInt16Prop(id int32, prop string, nitems int32) ([]int16, error)","Funname":"dxinput.getInt16Prop","Returntype":"([]int16, error)","Args":"id int32, prop string, nitems int32"},{"Uniquefunname":"func getInt32Prop(id int32, prop string, nitems int32) ([]int32, error)","Funname":"dxinput.getInt32Prop","Returntype":"([]int32, error)","Args":"id int32, prop string, nitems int32"},{"Uniquefunname":"func getInt8Prop(id int32, prop string, nitems int32) ([]int8, error)","Funname":"dxinput.getInt8Prop","Returntype":"([]int8, error)","Args":"id int32, prop string, nitems int32"},{"Uniquefunname":"func getMotionAcceleration(id int32) (float32, error)","Funname":"dxinput.getMotionAcceleration","Returntype":"(float32, error)","Args":"id int32"},{"Uniquefunname":"func getMotionScaling(id int32) (float32, error)","Funname":"dxinput.getMotionScaling","Returntype":"(float32, error)","Args":"id int32"},{"Uniquefunname":"func getMotionThreshold(id int32) (float32, error)","Funname":"dxinput.getMotionThreshold","Returntype":"(float32, error)","Args":"id int32"},{"Uniquefunname":"func init()","Funname":"dxinput.init","Returntype":"","Args":""},{"Uniquefunname":"func isDeviceEnabled(id int32) bool","Funname":"dxinput.isDeviceEnabled","Returntype":"bool","Args":"id int32"},{"Uniquefunname":"func isFloat32ListEqual(l1, l2 []float32) bool","Funname":"dxinput.isFloat32ListEqual","Returntype":"bool","Args":"l1, l2 []float32"},{"Uniquefunname":"func setMotionAcceleration(id int32, accel float32) error","Funname":"dxinput.setMotionAcceleration","Returntype":"error","Args":"id int32, accel float32"},{"Uniquefunname":"func setMotionScaling(id int32, scaling float32) error","Funname":"dxinput.setMotionScaling","Returntype":"error","Args":"id int32, scaling float32"},{"Uniquefunname":"func setMotionThreshold(id int32, thres float32) error","Funname":"dxinput.setMotionThreshold","Returntype":"error","Args":"id int32, thres float32"},{"Uniquefunname":"func setRotation(id int32, rotation uint8) error","Funname":"dxinput.setRotation","Returntype":"error","Args":"id int32, rotation uint8"},{"Uniquefunname":"func enableDevice(id int32, enabled bool) error","Funname":"enableDevice","Returntype":"error","Args":"id int32, enabled bool"},{"Uniquefunname":"func getFloat32Prop(id int32, prop string, nitems int32) ([]float32, error)","Funname":"getFloat32Prop","Returntype":"([]float32, error)","Args":"id int32, prop string, nitems int32"},{"Uniquefunname":"func getInt16Prop(id int32, prop string, nitems int32) ([]int16, error)","Funname":"getInt16Prop","Returntype":"([]int16, error)","Args":"id int32, prop string, nitems int32"},{"Uniquefunname":"func getInt32Prop(id int32, prop string, nitems int32) ([]int32, error)","Funname":"getInt32Prop","Returntype":"([]int32, error)","Args":"id int32, prop string, nitems int32"},{"Uniquefunname":"func getInt8Prop(id int32, prop string, nitems int32) ([]int8, error)","Funname":"getInt8Prop","Returntype":"([]int8, error)","Args":"id int32, prop string, nitems int32"},{"Uniquefunname":"func getMotionAcceleration(id int32) (float32, error)","Funname":"getMotionAcceleration","Returntype":"(float32, error)","Args":"id int32"},{"Uniquefunname":"func getMotionScaling(id int32) (float32, error)","Funname":"getMotionScaling","Returntype":"(float32, error)","Args":"id int32"},{"Uniquefunname":"func getMotionThreshold(id int32) (float32, error)","Funname":"getMotionThreshold","Returntype":"(float32, error)","Args":"id int32"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func isDeviceEnabled(id int32) bool","Funname":"isDeviceEnabled","Returntype":"bool","Args":"id int32"},{"Uniquefunname":"func isFloat32ListEqual(l1, l2 []float32) bool","Funname":"isFloat32ListEqual","Returntype":"bool","Args":"l1, l2 []float32"},{"Uniquefunname":"func setMotionAcceleration(id int32, accel float32) error","Funname":"setMotionAcceleration","Returntype":"error","Args":"id int32, accel float32"},{"Uniquefunname":"func setMotionScaling(id int32, scaling float32) error","Funname":"setMotionScaling","Returntype":"error","Args":"id int32, scaling float32"},{"Uniquefunname":"func setMotionThreshold(id int32, thres float32) error","Funname":"setMotionThreshold","Returntype":"error","Args":"id int32, thres float32"},{"Uniquefunname":"func setRotation(id int32, rotation uint8) error","Funname":"setRotation","Returntype":"error","Args":"id int32, rotation uint8"}],"Records":[{"Name":"const:dxinput","Fields":["dxinput.RotationDirectionInverted","dxinput.RotationDirectionLeft","dxinput.RotationDirectionNormal","dxinput.RotationDirectionRight","dxinput.propAdaptiveDeceleration","dxinput.propConstantDeceleration","dxinput.propCoordTransMatrix","dxinput.propDeviceEnabled","dxinput.propVelocityScaling"]},{"Name":"var:dxinput","Fields":["dxinput.globalWayland","dxinput.rotationInverted","dxinput.rotationLeft","dxinput.rotationNormal","dxinput.rotationRight"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/dxinput/wacom.go","Functions":[{"Uniquefunname":"func (w *Wacom) GetArea() (x1, y1, x2, y2 int, err error)","Funname":"GetArea","Returntype":"(x1, y1, x2, y2 int, err error)","Args":""},{"Uniquefunname":"func (w *Wacom) MapToOutput(output string) error","Funname":"MapToOutput","Returntype":"error","Args":"output string"},{"Uniquefunname":"func NewWacom(id int32) (*Wacom, error)","Funname":"NewWacom","Returntype":"(*Wacom, error)","Args":"id int32"},{"Uniquefunname":"func NewWacomFromDevInfo(dev *DeviceInfo) (*Wacom, error)","Funname":"NewWacomFromDevInfo","Returntype":"(*Wacom, error)","Args":"dev *DeviceInfo"},{"Uniquefunname":"func (w *Wacom) QueryType() int","Funname":"QueryType","Returntype":"int","Args":""},{"Uniquefunname":"func (w *Wacom) ResetArea() error","Funname":"ResetArea","Returntype":"error","Args":""},{"Uniquefunname":"func (w *Wacom) SetArea(x1, y1, x2, y2 int) error","Funname":"SetArea","Returntype":"error","Args":"x1, y1, x2, y2 int"},{"Uniquefunname":"func (w *Wacom) SetButton(btn int, value string) error","Funname":"SetButton","Returntype":"error","Args":"btn int, value string"},{"Uniquefunname":"func (w *Wacom) SetMode(mode string) error","Funname":"SetMode","Returntype":"error","Args":"mode string"},{"Uniquefunname":"func (w *Wacom) SetPressureCurve(x1, y1, x2, y2 int) error","Funname":"SetPressureCurve","Returntype":"error","Args":"x1, y1, x2, y2 int"},{"Uniquefunname":"func (w *Wacom) SetRawSample(sample uint32) error","Funname":"SetRawSample","Returntype":"error","Args":"sample uint32"},{"Uniquefunname":"func (w *Wacom) SetRotate(value string) error","Funname":"SetRotate","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (w *Wacom) SetSuppress(value int) error","Funname":"SetSuppress","Returntype":"error","Args":"value int"},{"Uniquefunname":"func (w *Wacom) SetThreshold(thres int) error","Funname":"SetThreshold","Returntype":"error","Args":"thres int"},{"Uniquefunname":"func doAction(cmd string) error","Funname":"doAction","Returntype":"error","Args":"cmd string"},{"Uniquefunname":"func NewWacom(id int32) (*Wacom, error)","Funname":"dxinput.NewWacom","Returntype":"(*Wacom, error)","Args":"id int32"},{"Uniquefunname":"func NewWacomFromDevInfo(dev *DeviceInfo) (*Wacom, error)","Funname":"dxinput.NewWacomFromDevInfo","Returntype":"(*Wacom, error)","Args":"dev *DeviceInfo"},{"Uniquefunname":"func (w *Wacom) GetArea() (x1, y1, x2, y2 int, err error)","Funname":"dxinput.Wacom.GetArea","Returntype":"(x1, y1, x2, y2 int, err error)","Args":""},{"Uniquefunname":"func (w *Wacom) MapToOutput(output string) error","Funname":"dxinput.Wacom.MapToOutput","Returntype":"error","Args":"output string"},{"Uniquefunname":"func (w *Wacom) QueryType() int","Funname":"dxinput.Wacom.QueryType","Returntype":"int","Args":""},{"Uniquefunname":"func (w *Wacom) ResetArea() error","Funname":"dxinput.Wacom.ResetArea","Returntype":"error","Args":""},{"Uniquefunname":"func (w *Wacom) SetArea(x1, y1, x2, y2 int) error","Funname":"dxinput.Wacom.SetArea","Returntype":"error","Args":"x1, y1, x2, y2 int"},{"Uniquefunname":"func (w *Wacom) SetButton(btn int, value string) error","Funname":"dxinput.Wacom.SetButton","Returntype":"error","Args":"btn int, value string"},{"Uniquefunname":"func (w *Wacom) SetMode(mode string) error","Funname":"dxinput.Wacom.SetMode","Returntype":"error","Args":"mode string"},{"Uniquefunname":"func (w *Wacom) SetPressureCurve(x1, y1, x2, y2 int) error","Funname":"dxinput.Wacom.SetPressureCurve","Returntype":"error","Args":"x1, y1, x2, y2 int"},{"Uniquefunname":"func (w *Wacom) SetRawSample(sample uint32) error","Funname":"dxinput.Wacom.SetRawSample","Returntype":"error","Args":"sample uint32"},{"Uniquefunname":"func (w *Wacom) SetRotate(value string) error","Funname":"dxinput.Wacom.SetRotate","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (w *Wacom) SetSuppress(value int) error","Funname":"dxinput.Wacom.SetSuppress","Returntype":"error","Args":"value int"},{"Uniquefunname":"func (w *Wacom) SetThreshold(thres int) error","Funname":"dxinput.Wacom.SetThreshold","Returntype":"error","Args":"thres int"},{"Uniquefunname":"func (w *Wacom) getIdAsStr() string","Funname":"dxinput.Wacom.getIdAsStr","Returntype":"string","Args":""},{"Uniquefunname":"func doAction(cmd string) error","Funname":"dxinput.doAction","Returntype":"error","Args":"cmd string"},{"Uniquefunname":"func (w *Wacom) getIdAsStr() string","Funname":"getIdAsStr","Returntype":"string","Args":""}],"Records":[{"Name":"struct:dxinput.Wacom","Fields":["dxinput.Wacom.Id int32","dxinput.Wacom.Name string"]},{"Name":"const:dxinput","Fields":["dxinput.WacomTypeEraser","dxinput.WacomTypePad","dxinput.WacomTypeStylus","dxinput.WacomTypeUnknown","dxinput.cmdKeyArea","dxinput.cmdKeyButton","dxinput.cmdKeyMapToOutput","dxinput.cmdKeyMode","dxinput.cmdKeyPressureCurve","dxinput.cmdKeyRawSample","dxinput.cmdKeyResetArea","dxinput.cmdKeyRotate","dxinput.cmdKeySuppress","dxinput.cmdKeyThreshold","dxinput.cmdXSetWacom"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/dxinput/common/common.go","Functions":[{"Uniquefunname":"func (infos DeviceInfos) Get(id int32) *DeviceInfo","Funname":"Get","Returntype":"*DeviceInfo","Args":"id int32"},{"Uniquefunname":"func (infos DeviceInfos) Get(id int32) *DeviceInfo","Funname":"common.DeviceInfos.Get","Returntype":"*DeviceInfo","Args":"id int32"}],"Records":[{"Name":"const:common","Fields":["common.DevTypeKeyboard","common.DevTypeMouse","common.DevTypeTouchpad","common.DevTypeTouchscreen","common.DevTypeUnknown","common.DevTypeWacom"]},{"Name":"struct:common.DeviceInfo","Fields":["common.DeviceInfo.Enabled bool","common.DeviceInfo.Id int32","common.DeviceInfo.Name string","common.DeviceInfo.Type int32"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/dxinput/kwayland/inputdevice.go","Functions":[{"Uniquefunname":"func CanAdaptiveAccelProfile(sysName string) bool","Funname":"CanAdaptiveAccelProfile","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanDisableWhileTyping(sysName string) bool","Funname":"CanDisableWhileTyping","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanEnabled(sysName string) bool","Funname":"CanEnabled","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanLeftHanded(sysName string) bool","Funname":"CanLeftHanded","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanLmrTapButtonMap(sysName string) bool","Funname":"CanLmrTapButtonMap","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanMiddleButtonEmulation(sysName string) bool","Funname":"CanMiddleButtonEmulation","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanNaturalScroll(sysName string) bool","Funname":"CanNaturalScroll","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanScrollEdge(sysName string) bool","Funname":"CanScrollEdge","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanScrollTwoFinger(sysName string) bool","Funname":"CanScrollTwoFinger","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanTapToClick(sysName string) bool","Funname":"CanTapToClick","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func Enable(sysName string, enabled bool) error","Funname":"Enable","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableAdaptiveAccelProfile(sysName string, enabled bool) error","Funname":"EnableAdaptiveAccelProfile","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableDisableWhileTyping(sysName string, enabled bool) error","Funname":"EnableDisableWhileTyping","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableLeftHanded(sysName string, enabled bool) error","Funname":"EnableLeftHanded","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableLmrTapButtonMap(sysName string, enabled bool) error","Funname":"EnableLmrTapButtonMap","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableMiddleEmulation(sysName string, enabled bool) error","Funname":"EnableMiddleEmulation","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableNaturalScroll(sysName string, enabled bool) error","Funname":"EnableNaturalScroll","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableScrollEdge(sysName string, enabled bool) error","Funname":"EnableScrollEdge","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableScrollTwoFinger(sysName string, enabled bool) error","Funname":"EnableScrollTwoFinger","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableTapToClick(sysName string, enabled bool) error","Funname":"EnableTapToClick","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func GetPointerAccel(sysName string) (float64, error)","Funname":"GetPointerAccel","Returntype":"(float64, error)","Args":"sysName string"},{"Uniquefunname":"func GetScrollButton(sysName string) (uint32, error)","Funname":"GetScrollButton","Returntype":"(uint32, error)","Args":"sysName string"},{"Uniquefunname":"func ListDevice() (DeviceInfos, error)","Funname":"ListDevice","Returntype":"(DeviceInfos, error)","Args":""},{"Uniquefunname":"func NewDeviceInfo(sysName string) (*DeviceInfo, error)","Funname":"NewDeviceInfo","Returntype":"(*DeviceInfo, error)","Args":"sysName string"},{"Uniquefunname":"func SetPointerAccel(sysName string, v float64) error","Funname":"SetPointerAccel","Returntype":"error","Args":"sysName string, v float64"},{"Uniquefunname":"func SetScrollButton(sysName string, v uint32) error","Funname":"SetScrollButton","Returntype":"error","Args":"sysName string, v uint32"},{"Uniquefunname":"func getSessionBus() *dbus.Conn","Funname":"getSessionBus","Returntype":"*dbus.Conn","Args":""},{"Uniquefunname":"func isMouseDevice(dev *kwin.InputDevice) bool","Funname":"isMouseDevice","Returntype":"bool","Args":"dev *kwin.InputDevice"},{"Uniquefunname":"func CanAdaptiveAccelProfile(sysName string) bool","Funname":"kwayland.CanAdaptiveAccelProfile","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanDisableWhileTyping(sysName string) bool","Funname":"kwayland.CanDisableWhileTyping","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanEnabled(sysName string) bool","Funname":"kwayland.CanEnabled","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanLeftHanded(sysName string) bool","Funname":"kwayland.CanLeftHanded","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanLmrTapButtonMap(sysName string) bool","Funname":"kwayland.CanLmrTapButtonMap","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanMiddleButtonEmulation(sysName string) bool","Funname":"kwayland.CanMiddleButtonEmulation","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanNaturalScroll(sysName string) bool","Funname":"kwayland.CanNaturalScroll","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanScrollEdge(sysName string) bool","Funname":"kwayland.CanScrollEdge","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanScrollTwoFinger(sysName string) bool","Funname":"kwayland.CanScrollTwoFinger","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanTapToClick(sysName string) bool","Funname":"kwayland.CanTapToClick","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func Enable(sysName string, enabled bool) error","Funname":"kwayland.Enable","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableAdaptiveAccelProfile(sysName string, enabled bool) error","Funname":"kwayland.EnableAdaptiveAccelProfile","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableDisableWhileTyping(sysName string, enabled bool) error","Funname":"kwayland.EnableDisableWhileTyping","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableLeftHanded(sysName string, enabled bool) error","Funname":"kwayland.EnableLeftHanded","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableLmrTapButtonMap(sysName string, enabled bool) error","Funname":"kwayland.EnableLmrTapButtonMap","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableMiddleEmulation(sysName string, enabled bool) error","Funname":"kwayland.EnableMiddleEmulation","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableNaturalScroll(sysName string, enabled bool) error","Funname":"kwayland.EnableNaturalScroll","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableScrollEdge(sysName string, enabled bool) error","Funname":"kwayland.EnableScrollEdge","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableScrollTwoFinger(sysName string, enabled bool) error","Funname":"kwayland.EnableScrollTwoFinger","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableTapToClick(sysName string, enabled bool) error","Funname":"kwayland.EnableTapToClick","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func GetPointerAccel(sysName string) (float64, error)","Funname":"kwayland.GetPointerAccel","Returntype":"(float64, error)","Args":"sysName string"},{"Uniquefunname":"func GetScrollButton(sysName string) (uint32, error)","Funname":"kwayland.GetScrollButton","Returntype":"(uint32, error)","Args":"sysName string"},{"Uniquefunname":"func ListDevice() (DeviceInfos, error)","Funname":"kwayland.ListDevice","Returntype":"(DeviceInfos, error)","Args":""},{"Uniquefunname":"func NewDeviceInfo(sysName string) (*DeviceInfo, error)","Funname":"kwayland.NewDeviceInfo","Returntype":"(*DeviceInfo, error)","Args":"sysName string"},{"Uniquefunname":"func SetPointerAccel(sysName string, v float64) error","Funname":"kwayland.SetPointerAccel","Returntype":"error","Args":"sysName string, v float64"},{"Uniquefunname":"func SetScrollButton(sysName string, v uint32) error","Funname":"kwayland.SetScrollButton","Returntype":"error","Args":"sysName string, v uint32"},{"Uniquefunname":"func getSessionBus() *dbus.Conn","Funname":"kwayland.getSessionBus","Returntype":"*dbus.Conn","Args":""},{"Uniquefunname":"func isMouseDevice(dev *kwin.InputDevice) bool","Funname":"kwayland.isMouseDevice","Returntype":"bool","Args":"dev *kwin.InputDevice"},{"Uniquefunname":"func newInputDeviceObj(sysName string) (*kwin.InputDevice, error)","Funname":"kwayland.newInputDeviceObj","Returntype":"(*kwin.InputDevice, error)","Args":"sysName string"},{"Uniquefunname":"func newInputDeviceObj(sysName string) (*kwin.InputDevice, error)","Funname":"newInputDeviceObj","Returntype":"(*kwin.InputDevice, error)","Args":"sysName string"}],"Records":[{"Name":"const:kwayland","Fields":["kwayland.SysNamePrefix","kwayland.eventPathPrefix"]},{"Name":"var:kwayland","Fields":["kwayland._conn","kwayland.errUnsupported"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/dxinput/utils/button_map.go","Functions":[{"Uniquefunname":"func CanLeftHanded(xid uint32, devName string) bool","Funname":"CanLeftHanded","Returntype":"bool","Args":"xid uint32, devName string"},{"Uniquefunname":"func GetButtonMap(xid uint32, devName string) ([]byte, error)","Funname":"GetButtonMap","Returntype":"([]byte, error)","Args":"xid uint32, devName string"},{"Uniquefunname":"func SetButtonMap(xid uint32, devName string, btnMap []byte) error","Funname":"SetButtonMap","Returntype":"error","Args":"xid uint32, devName string, btnMap []byte"},{"Uniquefunname":"func SetLeftHanded(xid uint32, devName string, useLeft bool) error","Funname":"SetLeftHanded","Returntype":"error","Args":"xid uint32, devName string, useLeft bool"},{"Uniquefunname":"func CanLeftHanded(xid uint32, devName string) bool","Funname":"utils.CanLeftHanded","Returntype":"bool","Args":"xid uint32, devName string"},{"Uniquefunname":"func GetButtonMap(xid uint32, devName string) ([]byte, error)","Funname":"utils.GetButtonMap","Returntype":"([]byte, error)","Args":"xid uint32, devName string"},{"Uniquefunname":"func SetButtonMap(xid uint32, devName string, btnMap []byte) error","Funname":"utils.SetButtonMap","Returntype":"error","Args":"xid uint32, devName string, btnMap []byte"},{"Uniquefunname":"func SetLeftHanded(xid uint32, devName string, useLeft bool) error","Funname":"utils.SetLeftHanded","Returntype":"error","Args":"xid uint32, devName string, useLeft bool"}],"Records":null}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/dxinput/utils/byte_op.go","Functions":[{"Uniquefunname":"func ReadFloat32(datas []byte, nitems int32) []float32","Funname":"ReadFloat32","Returntype":"[]float32","Args":"datas []byte, nitems int32"},{"Uniquefunname":"func ReadInt16(datas []byte, nitems int32) []int16","Funname":"ReadInt16","Returntype":"[]int16","Args":"datas []byte, nitems int32"},{"Uniquefunname":"func ReadInt32(datas []byte, nitems int32) []int32","Funname":"ReadInt32","Returntype":"[]int32","Args":"datas []byte, nitems int32"},{"Uniquefunname":"func ReadInt8(datas []byte, nitems int32) []int8","Funname":"ReadInt8","Returntype":"[]int8","Args":"datas []byte, nitems int32"},{"Uniquefunname":"func WriteFloat32(values []float32) []byte","Funname":"WriteFloat32","Returntype":"[]byte","Args":"values []float32"},{"Uniquefunname":"func WriteInt16(values []int16) []byte","Funname":"WriteInt16","Returntype":"[]byte","Args":"values []int16"},{"Uniquefunname":"func WriteInt32(values []int32) []byte","Funname":"WriteInt32","Returntype":"[]byte","Args":"values []int32"},{"Uniquefunname":"func WriteInt8(values []int8) []byte","Funname":"WriteInt8","Returntype":"[]byte","Args":"values []int8"},{"Uniquefunname":"func machineEndian() binary.ByteOrder","Funname":"machineEndian","Returntype":"binary.ByteOrder","Args":""},{"Uniquefunname":"func ReadFloat32(datas []byte, nitems int32) []float32","Funname":"utils.ReadFloat32","Returntype":"[]float32","Args":"datas []byte, nitems int32"},{"Uniquefunname":"func ReadInt16(datas []byte, nitems int32) []int16","Funname":"utils.ReadInt16","Returntype":"[]int16","Args":"datas []byte, nitems int32"},{"Uniquefunname":"func ReadInt32(datas []byte, nitems int32) []int32","Funname":"utils.ReadInt32","Returntype":"[]int32","Args":"datas []byte, nitems int32"},{"Uniquefunname":"func ReadInt8(datas []byte, nitems int32) []int8","Funname":"utils.ReadInt8","Returntype":"[]int8","Args":"datas []byte, nitems int32"},{"Uniquefunname":"func WriteFloat32(values []float32) []byte","Funname":"utils.WriteFloat32","Returntype":"[]byte","Args":"values []float32"},{"Uniquefunname":"func WriteInt16(values []int16) []byte","Funname":"utils.WriteInt16","Returntype":"[]byte","Args":"values []int16"},{"Uniquefunname":"func WriteInt32(values []int32) []byte","Funname":"utils.WriteInt32","Returntype":"[]byte","Args":"values []int32"},{"Uniquefunname":"func WriteInt8(values []int8) []byte","Funname":"utils.WriteInt8","Returntype":"[]byte","Args":"values []int8"},{"Uniquefunname":"func machineEndian() binary.ByteOrder","Funname":"utils.machineEndian","Returntype":"binary.ByteOrder","Args":""}],"Records":null}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/dxinput/utils/wrapper.go","Functions":[{"Uniquefunname":"func GetProperty(id int32, prop string) ([]byte, int32)","Funname":"GetProperty","Returntype":"([]byte, int32)","Args":"id int32, prop string"},{"Uniquefunname":"func IsPropertyExist(id int32, prop string) bool","Funname":"IsPropertyExist","Returntype":"bool","Args":"id int32, prop string"},{"Uniquefunname":"func ListDevice() DeviceInfos","Funname":"ListDevice","Returntype":"DeviceInfos","Args":""},{"Uniquefunname":"func QueryDeviceType(id int32) int32","Funname":"QueryDeviceType","Returntype":"int32","Args":"id int32"},{"Uniquefunname":"func SetFloat32Prop(id int32, prop string, values []float32) error","Funname":"SetFloat32Prop","Returntype":"error","Args":"id int32, prop string, values []float32"},{"Uniquefunname":"func SetInt16Prop(id int32, prop string, values []int16) error","Funname":"SetInt16Prop","Returntype":"error","Args":"id int32, prop string, values []int16"},{"Uniquefunname":"func SetInt32Prop(id int32, prop string, values []int32) error","Funname":"SetInt32Prop","Returntype":"error","Args":"id int32, prop string, values []int32"},{"Uniquefunname":"func SetInt8Prop(id int32, prop string, values []int8) error","Funname":"SetInt8Prop","Returntype":"error","Args":"id int32, prop string, values []int8"},{"Uniquefunname":"func SetKeyboardRepeat(enabled bool, delay, interval uint32) error","Funname":"SetKeyboardRepeat","Returntype":"error","Args":"enabled bool, delay, interval uint32"},{"Uniquefunname":"func byteArrayToUChar(datas []byte) []C.uchar","Funname":"byteArrayToUChar","Returntype":"[]C.uchar","Args":"datas []byte"},{"Uniquefunname":"func ucharArrayToByte(cData *C.uchar, length int) []byte","Funname":"ucharArrayToByte","Returntype":"[]byte","Args":"cData *C.uchar, length int"},{"Uniquefunname":"func GetProperty(id int32, prop string) ([]byte, int32)","Funname":"utils.GetProperty","Returntype":"([]byte, int32)","Args":"id int32, prop string"},{"Uniquefunname":"func IsPropertyExist(id int32, prop string) bool","Funname":"utils.IsPropertyExist","Returntype":"bool","Args":"id int32, prop string"},{"Uniquefunname":"func ListDevice() DeviceInfos","Funname":"utils.ListDevice","Returntype":"DeviceInfos","Args":""},{"Uniquefunname":"func QueryDeviceType(id int32) int32","Funname":"utils.QueryDeviceType","Returntype":"int32","Args":"id int32"},{"Uniquefunname":"func SetFloat32Prop(id int32, prop string, values []float32) error","Funname":"utils.SetFloat32Prop","Returntype":"error","Args":"id int32, prop string, values []float32"},{"Uniquefunname":"func SetInt16Prop(id int32, prop string, values []int16) error","Funname":"utils.SetInt16Prop","Returntype":"error","Args":"id int32, prop string, values []int16"},{"Uniquefunname":"func SetInt32Prop(id int32, prop string, values []int32) error","Funname":"utils.SetInt32Prop","Returntype":"error","Args":"id int32, prop string, values []int32"},{"Uniquefunname":"func SetInt8Prop(id int32, prop string, values []int8) error","Funname":"utils.SetInt8Prop","Returntype":"error","Args":"id int32, prop string, values []int8"},{"Uniquefunname":"func SetKeyboardRepeat(enabled bool, delay, interval uint32) error","Funname":"utils.SetKeyboardRepeat","Returntype":"error","Args":"enabled bool, delay, interval uint32"},{"Uniquefunname":"func byteArrayToUChar(datas []byte) []C.uchar","Funname":"utils.byteArrayToUChar","Returntype":"[]C.uchar","Args":"datas []byte"},{"Uniquefunname":"func ucharArrayToByte(cData *C.uchar, length int) []byte","Funname":"utils.ucharArrayToByte","Returntype":"[]byte","Args":"cData *C.uchar, length int"}],"Records":[{"Name":"const:utils","Fields":["utils.maxBufferLen"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/i18n_dependent/i18n_dependent.go","Functions":[{"Uniquefunname":"func GetByLocale(locale string) (DependentInfos, DependentInfos, error)","Funname":"GetByLocale","Returntype":"(DependentInfos, DependentInfos, error)","Args":"locale string"},{"Uniquefunname":"func GetByPackage(locale, pkg string) ([]string, []string, error)","Funname":"GetByPackage","Returntype":"([]string, []string, error)","Args":"locale, pkg string"},{"Uniquefunname":"func (infos DependentInfos) GetConflictPackages() DependentInfos","Funname":"GetConflictPackages","Returntype":"DependentInfos","Args":""},{"Uniquefunname":"func (infos DependentInfos) GetPackagesByDependent(dependent string) []string","Funname":"GetPackagesByDependent","Returntype":"[]string","Args":"dependent string"},{"Uniquefunname":"func getConflictPackages(pkgs []string) []string","Funname":"getConflictPackages","Returntype":"[]string","Args":"pkgs []string"},{"Uniquefunname":"func (infos DependentInfos) GetConflictPackages() DependentInfos","Funname":"i18n_dependent.DependentInfos.GetConflictPackages","Returntype":"DependentInfos","Args":""},{"Uniquefunname":"func (infos DependentInfos) GetPackagesByDependent(dependent string) []string","Funname":"i18n_dependent.DependentInfos.GetPackagesByDependent","Returntype":"[]string","Args":"dependent string"},{"Uniquefunname":"func GetByLocale(locale string) (DependentInfos, DependentInfos, error)","Funname":"i18n_dependent.GetByLocale","Returntype":"(DependentInfos, DependentInfos, error)","Args":"locale string"},{"Uniquefunname":"func GetByPackage(locale, pkg string) ([]string, []string, error)","Funname":"i18n_dependent.GetByPackage","Returntype":"([]string, []string, error)","Args":"locale, pkg string"},{"Uniquefunname":"func getConflictPackages(pkgs []string) []string","Funname":"i18n_dependent.getConflictPackages","Returntype":"[]string","Args":"pkgs []string"}],"Records":[{"Name":"struct:i18n_dependent.DependentInfo","Fields":["i18n_dependent.DependentInfo.Dependent string","i18n_dependent.DependentInfo.Packages []string"]},{"Name":"const:i18n_dependent","Fields":["i18n_dependent.pkgDependsFile"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/i18n_dependent/parse_file.go","Functions":[{"Uniquefunname":"func (categories jsonDependentCategories) GetAllDependentInfos(locale string) DependentInfos","Funname":"GetAllDependentInfos","Returntype":"DependentInfos","Args":"locale string"},{"Uniquefunname":"func (categories jsonDependentCategories) GetDependentInfos(key, locale string) DependentInfos","Funname":"GetDependentInfos","Returntype":"DependentInfos","Args":"key, locale string"},{"Uniquefunname":"func (infos jsonDependentInfos) GetDependentInfos(locale string) DependentInfos","Funname":"GetDependentInfos","Returntype":"DependentInfos","Args":"locale string"},{"Uniquefunname":"func (categories jsonDependentCategories) GetInfos(key string) jsonDependentInfos","Funname":"GetInfos","Returntype":"jsonDependentInfos","Args":"key string"},{"Uniquefunname":"func (info *jsonDependentInfo) GetPackages(locale string) []string","Funname":"GetPackages","Returntype":"[]string","Args":"locale string"},{"Uniquefunname":"func getDependentCategories(config string) (jsonDependentCategories, error)","Funname":"getDependentCategories","Returntype":"(jsonDependentCategories, error)","Args":"config string"},{"Uniquefunname":"func getPackagesByLangInfo(locale, langCode, countryCode, variant string)[]string","Funname":"getPackagesByLangInfo","Returntype":"[]string","Args":"locale, langCode, countryCode, variant string"},{"Uniquefunname":"func getDependentCategories(config string) (jsonDependentCategories, error)","Funname":"i18n_dependent.getDependentCategories","Returntype":"(jsonDependentCategories, error)","Args":"config string"},{"Uniquefunname":"func (categories jsonDependentCategories) GetAllDependentInfos(locale string) DependentInfos","Funname":"i18n_dependent.jsonDependentCategories.GetAllDependentInfos","Returntype":"DependentInfos","Args":"locale string"},{"Uniquefunname":"func (categories jsonDependentCategories) GetDependentInfos(key, locale string) DependentInfos","Funname":"i18n_dependent.jsonDependentCategories.GetDependentInfos","Returntype":"DependentInfos","Args":"key, locale string"},{"Uniquefunname":"func (categories jsonDependentCategories) GetInfos(key string) jsonDependentInfos","Funname":"i18n_dependent.jsonDependentCategories.GetInfos","Returntype":"jsonDependentInfos","Args":"key string"},{"Uniquefunname":"func (info *jsonDependentInfo) GetPackages(locale string) []string","Funname":"i18n_dependent.jsonDependentInfo.GetPackages","Returntype":"[]string","Args":"locale string"},{"Uniquefunname":"func i18n_dependent.jsonDependentInfo.getPackagesByLangInfo(locale, langCode, countryCode, variant string)[]string","Funname":"i18n_dependent.jsonDependentInfo.getPackagesByLangInfo","Returntype":"[]string","Args":"locale, langCode, countryCode, variant string"},{"Uniquefunname":"func (infos jsonDependentInfos) GetDependentInfos(locale string) DependentInfos","Funname":"i18n_dependent.jsonDependentInfos.GetDependentInfos","Returntype":"DependentInfos","Args":"locale string"}],"Records":[{"Name":"const:i18n_dependent","Fields":["i18n_dependent.formatTypeLC","i18n_dependent.formatTypeLCCC","i18n_dependent.formatTypeLCVA","i18n_dependent.formatTypeNone"]},{"Name":"struct:i18n_dependent.jsonDependentCategory","Fields":["i18n_dependent.jsonDependentCategory.Category string","i18n_dependent.jsonDependentCategory.Infos jsonDependentInfos"]},{"Name":"struct:i18n_dependent.jsonDependentGroup","Fields":["i18n_dependent.jsonDependentGroup.Categories jsonDependentCategories"]},{"Name":"struct:i18n_dependent.jsonDependentInfo","Fields":["i18n_dependent.jsonDependentInfo.Dependent string","i18n_dependent.jsonDependentInfo.FormatType int32","i18n_dependent.jsonDependentInfo.LangCode string","i18n_dependent.jsonDependentInfo.PkgPull string"]},{"Name":"var:i18n_dependent","Fields":["i18n_dependent.regUnderLine"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/i18n_dependent/sourcehansans.go","Functions":null,"Records":[{"Name":"var:i18n_dependent","Fields":["i18n_dependent.conflictPkgMap"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/inhibit_hint/inhibit_hint.go","Functions":[{"Uniquefunname":"func (o *Object) Export(service *dbusutil.Service) error","Funname":"Export","Returntype":"error","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (o *Object) Get(locale string, why string) (*HintInfo, *dbus.Error)","Funname":"Get","Returntype":"(*HintInfo, *dbus.Error)","Args":"locale string, why string"},{"Uniquefunname":"func (o *Object) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func New(domain string) *Object","Funname":"New","Returntype":"*Object","Args":"domain string"},{"Uniquefunname":"func (o *Object) SetIcon(icon string)","Funname":"SetIcon","Returntype":"","Args":"icon string"},{"Uniquefunname":"func (o *Object) SetIconFunc(fn GetFunc)","Funname":"SetIconFunc","Returntype":"","Args":"fn GetFunc"},{"Uniquefunname":"func (o *Object) SetName(name string)","Funname":"SetName","Returntype":"","Args":"name string"},{"Uniquefunname":"func (o *Object) SetNameFunc(fn GetFunc)","Funname":"SetNameFunc","Returntype":"","Args":"fn GetFunc"},{"Uniquefunname":"func (o *Object) StopExport(service *dbusutil.Service) error","Funname":"StopExport","Returntype":"error","Args":"service *dbusutil.Service"},{"Uniquefunname":"func get(v interface","Funname":"get","Returntype":"string","Args":"v interface{}, why string"},{"Uniquefunname":"func (o *Object) getIcon(why string) string","Funname":"getIcon","Returntype":"string","Args":"why string"},{"Uniquefunname":"func (o *Object) getName(why string) string","Funname":"getName","Returntype":"string","Args":"why string"},{"Uniquefunname":"func New(domain string) *Object","Funname":"inhibit_hint.New","Returntype":"*Object","Args":"domain string"},{"Uniquefunname":"func (o *Object) Export(service *dbusutil.Service) error","Funname":"inhibit_hint.Object.Export","Returntype":"error","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (o *Object) Get(locale string, why string) (*HintInfo, *dbus.Error)","Funname":"inhibit_hint.Object.Get","Returntype":"(*HintInfo, *dbus.Error)","Args":"locale string, why string"},{"Uniquefunname":"func (o *Object) GetInterfaceName() string","Funname":"inhibit_hint.Object.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (o *Object) SetIcon(icon string)","Funname":"inhibit_hint.Object.SetIcon","Returntype":"","Args":"icon string"},{"Uniquefunname":"func (o *Object) SetIconFunc(fn GetFunc)","Funname":"inhibit_hint.Object.SetIconFunc","Returntype":"","Args":"fn GetFunc"},{"Uniquefunname":"func (o *Object) SetName(name string)","Funname":"inhibit_hint.Object.SetName","Returntype":"","Args":"name string"},{"Uniquefunname":"func (o *Object) SetNameFunc(fn GetFunc)","Funname":"inhibit_hint.Object.SetNameFunc","Returntype":"","Args":"fn GetFunc"},{"Uniquefunname":"func (o *Object) StopExport(service *dbusutil.Service) error","Funname":"inhibit_hint.Object.StopExport","Returntype":"error","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (o *Object) getIcon(why string) string","Funname":"inhibit_hint.Object.getIcon","Returntype":"string","Args":"why string"},{"Uniquefunname":"func (o *Object) getName(why string) string","Funname":"inhibit_hint.Object.getName","Returntype":"string","Args":"why string"},{"Uniquefunname":"func get(v interface","Funname":"inhibit_hint.get","Returntype":"string","Args":"v interface{}, why string"}],"Records":[{"Name":"struct:inhibit_hint.HintInfo","Fields":["inhibit_hint.HintInfo.Icon string","inhibit_hint.HintInfo.Name string","inhibit_hint.HintInfo.Why string"]},{"Name":"struct:inhibit_hint.Object","Fields":["inhibit_hint.Object.domain string","inhibit_hint.Object.getMu sync.Mutex","inhibit_hint.Object.icon interface{}","inhibit_hint.Object.methods *struct { Get func() `in:\"locale,why\" out:\"hint\"`; }","inhibit_hint.Object.name interface{}"]},{"Name":"const:inhibit_hint","Fields":["inhibit_hint.dbusInterface","inhibit_hint.dbusPath"]},{"Name":"var:inhibit_hint","Fields":["inhibit_hint.errInvalidUTF8"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/inhibit_hint/t1_test.go","Functions":[{"Uniquefunname":"func TestGetSetIcon(t *testing.T)","Funname":"TestGetSetIcon","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetSetName(t *testing.T)","Funname":"TestGetSetName","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetSetIcon(t *testing.T)","Funname":"inhibit_hint.TestGetSetIcon","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetSetName(t *testing.T)","Funname":"inhibit_hint.TestGetSetName","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/lang_info/lang_info.go","Functions":[{"Uniquefunname":"func (infos LangInfos) Get(locale string) (*LangInfo, error)","Funname":"Get","Returntype":"(*LangInfo, error)","Args":"locale string"},{"Uniquefunname":"func GetLangCodeInfo(locale string) (*LangCodeInfo, error)","Funname":"GetLangCodeInfo","Returntype":"(*LangCodeInfo, error)","Args":"locale string"},{"Uniquefunname":"func GetSupportedLangInfos() (LangInfos, error)","Funname":"GetSupportedLangInfos","Returntype":"(LangInfos, error)","Args":""},{"Uniquefunname":"func IsSupportedLocale(locale string) bool","Funname":"IsSupportedLocale","Returntype":"bool","Args":"locale string"},{"Uniquefunname":"func (info *LangInfo) ToLangCode() *LangCodeInfo","Funname":"ToLangCode","Returntype":"*LangCodeInfo","Args":""},{"Uniquefunname":"func getLangInfoByLocale(locale, config string) (*LangInfo, error)","Funname":"getLangInfoByLocale","Returntype":"(*LangInfo, error)","Args":"locale, config string"},{"Uniquefunname":"func getLangInfosFromFile(config string) (LangInfos, error)","Funname":"getLangInfosFromFile","Returntype":"(LangInfos, error)","Args":"config string"},{"Uniquefunname":"func getSupportedLocaleList(config string) ([]string, error)","Funname":"getSupportedLocaleList","Returntype":"([]string, error)","Args":"config string"},{"Uniquefunname":"func isItemInList(item string, list []string) bool","Funname":"isItemInList","Returntype":"bool","Args":"item string, list []string"},{"Uniquefunname":"func GetLangCodeInfo(locale string) (*LangCodeInfo, error)","Funname":"lang_info.GetLangCodeInfo","Returntype":"(*LangCodeInfo, error)","Args":"locale string"},{"Uniquefunname":"func GetSupportedLangInfos() (LangInfos, error)","Funname":"lang_info.GetSupportedLangInfos","Returntype":"(LangInfos, error)","Args":""},{"Uniquefunname":"func IsSupportedLocale(locale string) bool","Funname":"lang_info.IsSupportedLocale","Returntype":"bool","Args":"locale string"},{"Uniquefunname":"func (info *LangInfo) ToLangCode() *LangCodeInfo","Funname":"lang_info.LangInfo.ToLangCode","Returntype":"*LangCodeInfo","Args":""},{"Uniquefunname":"func (infos LangInfos) Get(locale string) (*LangInfo, error)","Funname":"lang_info.LangInfos.Get","Returntype":"(*LangInfo, error)","Args":"locale string"},{"Uniquefunname":"func getLangInfoByLocale(locale, config string) (*LangInfo, error)","Funname":"lang_info.getLangInfoByLocale","Returntype":"(*LangInfo, error)","Args":"locale, config string"},{"Uniquefunname":"func getLangInfosFromFile(config string) (LangInfos, error)","Funname":"lang_info.getLangInfosFromFile","Returntype":"(LangInfos, error)","Args":"config string"},{"Uniquefunname":"func getSupportedLocaleList(config string) ([]string, error)","Funname":"lang_info.getSupportedLocaleList","Returntype":"([]string, error)","Args":"config string"},{"Uniquefunname":"func isItemInList(item string, list []string) bool","Funname":"lang_info.isItemInList","Returntype":"bool","Args":"item string, list []string"}],"Records":[{"Name":"struct:lang_info.LangCodeInfo","Fields":["lang_info.LangCodeInfo.CountryCode string","lang_info.LangCodeInfo.LangCode string","lang_info.LangCodeInfo.Variant string"]},{"Name":"struct:lang_info.LangInfo","Fields":["lang_info.LangInfo.CountryCode string","lang_info.LangInfo.Description string","lang_info.LangInfo.LangCode string","lang_info.LangInfo.Locale string"]},{"Name":"const:lang_info","Fields":["lang_info.langInfoFile","lang_info.langSupportedFile"]},{"Name":"struct:lang_info.langInfoGroup","Fields":["lang_info.langInfoGroup.Infos LangInfos"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/lang_info/lang_info_test.go","Functions":[{"Uniquefunname":"func TestLangInfo(t *testing.T)","Funname":"TestLangInfo","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSupportedLocale(t *testing.T)","Funname":"TestSupportedLocale","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestLangInfo(t *testing.T)","Funname":"lang_info.TestLangInfo","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSupportedLocale(t *testing.T)","Funname":"lang_info.TestSupportedLocale","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/language_support/lang_support.go","Functions":[{"Uniquefunname":"func (ls *LanguageSupport) ByLocale(locale string, includeInstalled bool) []string","Funname":"ByLocale","Returntype":"[]string","Args":"locale string, includeInstalled bool"},{"Uniquefunname":"func ByPackageAndLocale(package0 string, locale string, includeInstalled bool)(packages []string)","Funname":"ByPackageAndLocale","Returntype":"(packages []string)","Args":"package0 string, locale string, includeInstalled bool"},{"Uniquefunname":"func (ls *LanguageSupport) Destroy()","Funname":"Destroy","Returntype":"","Args":""},{"Uniquefunname":"func NewLanguageSupport() (ls *LanguageSupport, err error)","Funname":"NewLanguageSupport","Returntype":"(ls *LanguageSupport, err error)","Args":""},{"Uniquefunname":"func expendPkgPattern(pattern, locale string) (pkgs []string)","Funname":"expendPkgPattern","Returntype":"(pkgs []string)","Args":"pattern, locale string"},{"Uniquefunname":"func (ls *LanguageSupport) isPkgInstallable(name string) (bool, error)","Funname":"isPkgInstallable","Returntype":"(bool, error)","Args":"name string"},{"Uniquefunname":"func (ls *LanguageSupport) isPkgInstalled(name string) (bool, error)","Funname":"isPkgInstalled","Returntype":"(bool, error)","Args":"name string"},{"Uniquefunname":"func langCodeFromLocale(locale string) string","Funname":"langCodeFromLocale","Returntype":"string","Args":"locale string"},{"Uniquefunname":"func (ls *LanguageSupport) ByLocale(locale string, includeInstalled bool) []string","Funname":"language_support.LanguageSupport.ByLocale","Returntype":"[]string","Args":"locale string, includeInstalled bool"},{"Uniquefunname":"func language_support.LanguageSupport.ByPackageAndLocale(package0 string, locale string, includeInstalled bool)(packages []string)","Funname":"language_support.LanguageSupport.ByPackageAndLocale","Returntype":"(packages []string)","Args":"package0 string, locale string, includeInstalled bool"},{"Uniquefunname":"func (ls *LanguageSupport) Destroy()","Funname":"language_support.LanguageSupport.Destroy","Returntype":"","Args":""},{"Uniquefunname":"func (ls *LanguageSupport) isPkgInstallable(name string) (bool, error)","Funname":"language_support.LanguageSupport.isPkgInstallable","Returntype":"(bool, error)","Args":"name string"},{"Uniquefunname":"func (ls *LanguageSupport) isPkgInstalled(name string) (bool, error)","Funname":"language_support.LanguageSupport.isPkgInstalled","Returntype":"(bool, error)","Args":"name string"},{"Uniquefunname":"func NewLanguageSupport() (ls *LanguageSupport, err error)","Funname":"language_support.NewLanguageSupport","Returntype":"(ls *LanguageSupport, err error)","Args":""},{"Uniquefunname":"func expendPkgPattern(pattern, locale string) (pkgs []string)","Funname":"language_support.expendPkgPattern","Returntype":"(pkgs []string)","Args":"pattern, locale string"},{"Uniquefunname":"func langCodeFromLocale(locale string) string","Funname":"language_support.langCodeFromLocale","Returntype":"string","Args":"locale string"},{"Uniquefunname":"func language_support.parsePkgDepends(filename string)(ret map[string]map[string]map[string][]string, err error)","Funname":"language_support.parsePkgDepends","Returntype":"(ret map[string]map[string]map[string][]string, err error)","Args":"filename string"},{"Uniquefunname":"func parsePkgDepends(filename string)(ret map[string]map[string]map[string][]string, err error)","Funname":"parsePkgDepends","Returntype":"(ret map[string]map[string]map[string][]string, err error)","Args":"filename string"}],"Records":[{"Name":"struct:language_support.LanguageSupport","Fields":["language_support.LanguageSupport.langCountryMap int","language_support.LanguageSupport.pkgDepends map[string]map[string]map[string][]string"]},{"Name":"const:language_support","Fields":["language_support.defaultDependsFile"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/language_support/lang_support_test.go","Functions":[{"Uniquefunname":"func TestExpendPkgPattern(t *testing.T)","Funname":"TestExpendPkgPattern","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestLangCodeFromLocale(t *testing.T)","Funname":"TestLangCodeFromLocale","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestParsePkgDepends(t *testing.T)","Funname":"TestParsePkgDepends","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestExpendPkgPattern(t *testing.T)","Funname":"language_support.TestExpendPkgPattern","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestLangCodeFromLocale(t *testing.T)","Funname":"language_support.TestLangCodeFromLocale","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestParsePkgDepends(t *testing.T)","Funname":"language_support.TestParsePkgDepends","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/powersupply/powersupply.go","Functions":[{"Uniquefunname":"func ACOnline() (bool, bool, error)","Funname":"ACOnline","Returntype":"(bool, bool, error)","Args":""},{"Uniquefunname":"func GetDevices(client *gudev.Client) []*gudev.Device","Funname":"GetDevices","Returntype":"[]*gudev.Device","Args":"client *gudev.Client"},{"Uniquefunname":"func GetSystemBatteryInfos() ([]*battery.BatteryInfo, error)","Funname":"GetSystemBatteryInfos","Returntype":"([]*battery.BatteryInfo, error)","Args":""},{"Uniquefunname":"func IsBattery(dev *gudev.Device) bool","Funname":"IsBattery","Returntype":"bool","Args":"dev *gudev.Device"},{"Uniquefunname":"func IsMains(dev *gudev.Device) bool","Funname":"IsMains","Returntype":"bool","Args":"dev *gudev.Device"},{"Uniquefunname":"func IsSystemBattery(dev *gudev.Device) bool","Funname":"IsSystemBattery","Returntype":"bool","Args":"dev *gudev.Device"},{"Uniquefunname":"func getClient() *gudev.Client","Funname":"getClient","Returntype":"*gudev.Client","Args":""},{"Uniquefunname":"func isSystemPowerSupply(dev *gudev.Device) bool","Funname":"isSystemPowerSupply","Returntype":"bool","Args":"dev *gudev.Device"},{"Uniquefunname":"func ACOnline() (bool, bool, error)","Funname":"powersupply.ACOnline","Returntype":"(bool, bool, error)","Args":""},{"Uniquefunname":"func GetDevices(client *gudev.Client) []*gudev.Device","Funname":"powersupply.GetDevices","Returntype":"[]*gudev.Device","Args":"client *gudev.Client"},{"Uniquefunname":"func GetSystemBatteryInfos() ([]*battery.BatteryInfo, error)","Funname":"powersupply.GetSystemBatteryInfos","Returntype":"([]*battery.BatteryInfo, error)","Args":""},{"Uniquefunname":"func IsBattery(dev *gudev.Device) bool","Funname":"powersupply.IsBattery","Returntype":"bool","Args":"dev *gudev.Device"},{"Uniquefunname":"func IsMains(dev *gudev.Device) bool","Funname":"powersupply.IsMains","Returntype":"bool","Args":"dev *gudev.Device"},{"Uniquefunname":"func IsSystemBattery(dev *gudev.Device) bool","Funname":"powersupply.IsSystemBattery","Returntype":"bool","Args":"dev *gudev.Device"},{"Uniquefunname":"func getClient() *gudev.Client","Funname":"powersupply.getClient","Returntype":"*gudev.Client","Args":""},{"Uniquefunname":"func isSystemPowerSupply(dev *gudev.Device) bool","Funname":"powersupply.isSystemPowerSupply","Returntype":"bool","Args":"dev *gudev.Device"}],"Records":[{"Name":"var:powersupply","Fields":["powersupply.errClientIsNil"]},{"Name":"const:powersupply","Fields":["powersupply.propPsyOnline","powersupply.subsystemPowerSupply"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/powersupply/powersupply_test.go","Functions":[{"Uniquefunname":"func TestACOnline(t *testing.T)","Funname":"TestACOnline","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetSystemBatteryInfos(t *testing.T)","Funname":"TestGetSystemBatteryInfos","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestACOnline(t *testing.T)","Funname":"powersupply.TestACOnline","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetSystemBatteryInfos(t *testing.T)","Funname":"powersupply.TestGetSystemBatteryInfos","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/powersupply/battery/battery.go","Functions":[{"Uniquefunname":"func GetBatteryInfo(bat *gudev.Device) *BatteryInfo","Funname":"GetBatteryInfo","Returntype":"*BatteryInfo","Args":"bat *gudev.Device"},{"Uniquefunname":"func GetBatteryInfo(bat *gudev.Device) *BatteryInfo","Funname":"battery.GetBatteryInfo","Returntype":"*BatteryInfo","Args":"bat *gudev.Device"},{"Uniquefunname":"func clamp(val, min, max float64) float64","Funname":"battery.clamp","Returntype":"float64","Args":"val, min, max float64"},{"Uniquefunname":"func getVoltageDesign(bat *gudev.Device) (voltage float64)","Funname":"battery.getVoltageDesign","Returntype":"(voltage float64)","Args":"bat *gudev.Device"},{"Uniquefunname":"func clamp(val, min, max float64) float64","Funname":"clamp","Returntype":"float64","Args":"val, min, max float64"},{"Uniquefunname":"func getVoltageDesign(bat *gudev.Device) (voltage float64)","Funname":"getVoltageDesign","Returntype":"(voltage float64)","Args":"bat *gudev.Device"}],"Records":[{"Name":"struct:battery.BatteryInfo","Fields":["battery.BatteryInfo.Capacity float64","battery.BatteryInfo.Energy float64","battery.BatteryInfo.EnergyFull float64","battery.BatteryInfo.EnergyFullDesign float64","battery.BatteryInfo.EnergyRate float64","battery.BatteryInfo.Manufacturer string","battery.BatteryInfo.ModelName string","battery.BatteryInfo.Name string","battery.BatteryInfo.Percentage float64","battery.BatteryInfo.SerialNumber string","battery.BatteryInfo.Status Status","battery.BatteryInfo.Technology string","battery.BatteryInfo.TimeToEmpty uint64","battery.BatteryInfo.TimeToFull uint64","battery.BatteryInfo.Voltage float64"]},{"Name":"const:battery","Fields":["battery.pCapacity","battery.pChargeAvg","battery.pChargeFull","battery.pChargeFullDesign","battery.pChargeNow","battery.pCurrentNow","battery.pEnergyAvg","battery.pEnergyFull","battery.pEnergyFullDesign","battery.pEnergyNow","battery.pManufacturer","battery.pModelName","battery.pName","battery.pPowerNow","battery.pPresent","battery.pSerialNumber","battery.pStatus","battery.pTechnology","battery.pVoltageAvg","battery.pVoltageMaxDesign","battery.pVoltageMinDesign","battery.pVoltageNow","battery.pVoltagePresent","battery.prefixPS"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/powersupply/battery/battery_test.go","Functions":[{"Uniquefunname":"func Test_GetDisplayStatus(t *testing.T)","Funname":"Test_GetDisplayStatus","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_parseStatus(t *testing.T)","Funname":"Test_parseStatus","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_GetDisplayStatus(t *testing.T)","Funname":"battery.Test_GetDisplayStatus","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_parseStatus(t *testing.T)","Funname":"battery.Test_parseStatus","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/powersupply/battery/status.go","Functions":[{"Uniquefunname":"func (slice batteryStatusSlice) AllSame() bool","Funname":"AllSame","Returntype":"bool","Args":""},{"Uniquefunname":"func (slice batteryStatusSlice) AnyEqual(val Status) bool","Funname":"AnyEqual","Returntype":"bool","Args":"val Status"},{"Uniquefunname":"func GetDisplayStatus(slice []Status) Status","Funname":"GetDisplayStatus","Returntype":"Status","Args":"slice []Status"},{"Uniquefunname":"func (state Status) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func GetDisplayStatus(slice []Status) Status","Funname":"battery.GetDisplayStatus","Returntype":"Status","Args":"slice []Status"},{"Uniquefunname":"func (state Status) String() string","Funname":"battery.Status.String","Returntype":"string","Args":""},{"Uniquefunname":"func (slice batteryStatusSlice) AllSame() bool","Funname":"battery.batteryStatusSlice.AllSame","Returntype":"bool","Args":""},{"Uniquefunname":"func (slice batteryStatusSlice) AnyEqual(val Status) bool","Funname":"battery.batteryStatusSlice.AnyEqual","Returntype":"bool","Args":"val Status"},{"Uniquefunname":"func parseStatus(val string) Status","Funname":"battery.parseStatus","Returntype":"Status","Args":"val string"},{"Uniquefunname":"func parseStatus(val string) Status","Funname":"parseStatus","Returntype":"Status","Args":"val string"}],"Records":[{"Name":"const:battery","Fields":["battery.StatusCharging","battery.StatusDischarging","battery.StatusFull","battery.StatusNotCharging","battery.StatusUnknown"]},{"Name":"var:battery","Fields":["battery.StatusMap"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/session/session_register.go","Functions":[{"Uniquefunname":"func Register()","Funname":"Register","Returntype":"","Args":""},{"Uniquefunname":"func Register()","Funname":"session.Register","Returntype":"","Args":""}],"Records":null}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/soundutils/shutdown.go","Functions":[{"Uniquefunname":"func GetShutdownSoundConfig() (*ShutdownSoundConfig, error)","Funname":"GetShutdownSoundConfig","Returntype":"(*ShutdownSoundConfig, error)","Args":""},{"Uniquefunname":"func SetShutdownSoundConfig(v *ShutdownSoundConfig) error","Funname":"SetShutdownSoundConfig","Returntype":"error","Args":"v *ShutdownSoundConfig"},{"Uniquefunname":"func GetShutdownSoundConfig() (*ShutdownSoundConfig, error)","Funname":"soundutils.GetShutdownSoundConfig","Returntype":"(*ShutdownSoundConfig, error)","Args":""},{"Uniquefunname":"func SetShutdownSoundConfig(v *ShutdownSoundConfig) error","Funname":"soundutils.SetShutdownSoundConfig","Returntype":"error","Args":"v *ShutdownSoundConfig"}],"Records":[{"Name":"struct:soundutils.ShutdownSoundConfig","Fields":["soundutils.ShutdownSoundConfig.CanPlay bool","soundutils.ShutdownSoundConfig.Device string","soundutils.ShutdownSoundConfig.Event string","soundutils.ShutdownSoundConfig.Theme string"]},{"Name":"const:soundutils","Fields":["soundutils.shutdownSoundFile"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/soundutils/soundplayer.go","Functions":[{"Uniquefunname":"func CanPlayEvent(event string) bool","Funname":"CanPlayEvent","Returntype":"bool","Args":"event string"},{"Uniquefunname":"func GetSoundTheme() string","Funname":"GetSoundTheme","Returntype":"string","Args":""},{"Uniquefunname":"func GetSystemSoundFile(event string) string","Funname":"GetSystemSoundFile","Returntype":"string","Args":"event string"},{"Uniquefunname":"func GetThemeSoundFile(theme, event string) string","Funname":"GetThemeSoundFile","Returntype":"string","Args":"theme, event string"},{"Uniquefunname":"func PlaySystemSound(event, device string) error","Funname":"PlaySystemSound","Returntype":"error","Args":"event, device string"},{"Uniquefunname":"func PlayThemeSound(theme, event, device string) error","Funname":"PlayThemeSound","Returntype":"error","Args":"theme, event, device string"},{"Uniquefunname":"func initPlayer()","Funname":"initPlayer","Returntype":"","Args":""},{"Uniquefunname":"func CanPlayEvent(event string) bool","Funname":"soundutils.CanPlayEvent","Returntype":"bool","Args":"event string"},{"Uniquefunname":"func GetSoundTheme() string","Funname":"soundutils.GetSoundTheme","Returntype":"string","Args":""},{"Uniquefunname":"func GetSystemSoundFile(event string) string","Funname":"soundutils.GetSystemSoundFile","Returntype":"string","Args":"event string"},{"Uniquefunname":"func GetThemeSoundFile(theme, event string) string","Funname":"soundutils.GetThemeSoundFile","Returntype":"string","Args":"theme, event string"},{"Uniquefunname":"func PlaySystemSound(event, device string) error","Funname":"soundutils.PlaySystemSound","Returntype":"error","Args":"event, device string"},{"Uniquefunname":"func PlayThemeSound(theme, event, device string) error","Funname":"soundutils.PlayThemeSound","Returntype":"error","Args":"theme, event, device string"},{"Uniquefunname":"func initPlayer()","Funname":"soundutils.initPlayer","Returntype":"","Args":""}],"Records":[{"Name":"const:soundutils","Fields":["soundutils.EventAudioVolumeChanged","soundutils.EventBatteryLow","soundutils.EventDesktopLogin","soundutils.EventDesktopLogout","soundutils.EventDeviceAdded","soundutils.EventDeviceRemoved","soundutils.EventIconToDesktop","soundutils.EventLogin","soundutils.EventLogout","soundutils.EventPowerPlug","soundutils.EventPowerUnplug","soundutils.EventPowerUnplugBatteryLow","soundutils.EventShutdown","soundutils.EventSuspendResume","soundutils.EventSystemShutdown","soundutils.EventVolumeChanged","soundutils.EventWakeup","soundutils.EventXDeepinAppSentToDesktop","soundutils.appearanceSchema","soundutils.defaultSoundTheme","soundutils.keyEnabled","soundutils.keyPlayer","soundutils.keySoundTheme","soundutils.soundEffectSchema"]},{"Name":"var:soundutils","Fields":["soundutils.UseCache","soundutils.player","soundutils.playerOnce"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/theme_thumb/thumb.go","Functions":[{"Uniquefunname":"func GetCursor(id, descFile string) (string, error)","Funname":"GetCursor","Returntype":"(string, error)","Args":"id, descFile string"},{"Uniquefunname":"func GetGtk(id, descFile string) (string, error)","Funname":"GetGtk","Returntype":"(string, error)","Args":"id, descFile string"},{"Uniquefunname":"func GetIcon(id, descFile string) (string, error)","Funname":"GetIcon","Returntype":"(string, error)","Args":"id, descFile string"},{"Uniquefunname":"func Init(scaleFactor0 float64)","Funname":"Init","Returntype":"","Args":"scaleFactor0 float64"},{"Uniquefunname":"func checkScaleFactor() error","Funname":"checkScaleFactor","Returntype":"error","Args":""},{"Uniquefunname":"func getChangeTime(fileInfo os.FileInfo) time.Time","Funname":"getChangeTime","Returntype":"time.Time","Args":"fileInfo os.FileInfo"},{"Uniquefunname":"func getScaleDir() string","Funname":"getScaleDir","Returntype":"string","Args":""},{"Uniquefunname":"func getTypeDir(type0 string, version int) string","Funname":"getTypeDir","Returntype":"string","Args":"type0 string, version int"},{"Uniquefunname":"func prepareOutputPath(type0, id string, version int) string","Funname":"prepareOutputPath","Returntype":"string","Args":"type0, id string, version int"},{"Uniquefunname":"func removeAllTypesOldVersionDirs()","Funname":"removeAllTypesOldVersionDirs","Returntype":"","Args":""},{"Uniquefunname":"func removeOldVersionDirs(scaleDir, type0 string, version int)","Funname":"removeOldVersionDirs","Returntype":"","Args":"scaleDir, type0 string, version int"},{"Uniquefunname":"func removeUnusedDirs(pattern string, usedDir string)","Funname":"removeUnusedDirs","Returntype":"","Args":"pattern string, usedDir string"},{"Uniquefunname":"func removeUnusedScaleDirs()","Funname":"removeUnusedScaleDirs","Returntype":"","Args":""},{"Uniquefunname":"func shouldGenerateNew(descFile, out string) (bool, error)","Funname":"shouldGenerateNew","Returntype":"(bool, error)","Args":"descFile, out string"},{"Uniquefunname":"func shouldGenerateNewCursor(descFile, out string) (bool, error)","Funname":"shouldGenerateNewCursor","Returntype":"(bool, error)","Args":"descFile, out string"},{"Uniquefunname":"func GetCursor(id, descFile string) (string, error)","Funname":"theme_thumb.GetCursor","Returntype":"(string, error)","Args":"id, descFile string"},{"Uniquefunname":"func GetGtk(id, descFile string) (string, error)","Funname":"theme_thumb.GetGtk","Returntype":"(string, error)","Args":"id, descFile string"},{"Uniquefunname":"func GetIcon(id, descFile string) (string, error)","Funname":"theme_thumb.GetIcon","Returntype":"(string, error)","Args":"id, descFile string"},{"Uniquefunname":"func Init(scaleFactor0 float64)","Funname":"theme_thumb.Init","Returntype":"","Args":"scaleFactor0 float64"},{"Uniquefunname":"func checkScaleFactor() error","Funname":"theme_thumb.checkScaleFactor","Returntype":"error","Args":""},{"Uniquefunname":"func getChangeTime(fileInfo os.FileInfo) time.Time","Funname":"theme_thumb.getChangeTime","Returntype":"time.Time","Args":"fileInfo os.FileInfo"},{"Uniquefunname":"func getScaleDir() string","Funname":"theme_thumb.getScaleDir","Returntype":"string","Args":""},{"Uniquefunname":"func getTypeDir(type0 string, version int) string","Funname":"theme_thumb.getTypeDir","Returntype":"string","Args":"type0 string, version int"},{"Uniquefunname":"func prepareOutputPath(type0, id string, version int) string","Funname":"theme_thumb.prepareOutputPath","Returntype":"string","Args":"type0, id string, version int"},{"Uniquefunname":"func removeAllTypesOldVersionDirs()","Funname":"theme_thumb.removeAllTypesOldVersionDirs","Returntype":"","Args":""},{"Uniquefunname":"func removeOldVersionDirs(scaleDir, type0 string, version int)","Funname":"theme_thumb.removeOldVersionDirs","Returntype":"","Args":"scaleDir, type0 string, version int"},{"Uniquefunname":"func removeUnusedDirs(pattern string, usedDir string)","Funname":"theme_thumb.removeUnusedDirs","Returntype":"","Args":"pattern string, usedDir string"},{"Uniquefunname":"func removeUnusedScaleDirs()","Funname":"theme_thumb.removeUnusedScaleDirs","Returntype":"","Args":""},{"Uniquefunname":"func shouldGenerateNew(descFile, out string) (bool, error)","Funname":"theme_thumb.shouldGenerateNew","Returntype":"(bool, error)","Args":"descFile, out string"},{"Uniquefunname":"func shouldGenerateNewCursor(descFile, out string) (bool, error)","Funname":"theme_thumb.shouldGenerateNewCursor","Returntype":"(bool, error)","Args":"descFile, out string"}],"Records":[{"Name":"var:theme_thumb","Fields":["theme_thumb.cacheDir","theme_thumb.scaleFactor"]},{"Name":"const:theme_thumb","Fields":["theme_thumb.height","theme_thumb.width"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/theme_thumb/common/common.go","Functions":[{"Uniquefunname":"func CompositeIcons(images []image.Image, width, height, iconSize, padding int) image.Image","Funname":"CompositeIcons","Returntype":"image.Image","Args":"images []image.Image, width, height, iconSize, padding int"},{"Uniquefunname":"func SavePngFile(m image.Image, filename string) error","Funname":"SavePngFile","Returntype":"error","Args":"m image.Image, filename string"},{"Uniquefunname":"func CompositeIcons(images []image.Image, width, height, iconSize, padding int) image.Image","Funname":"common.CompositeIcons","Returntype":"image.Image","Args":"images []image.Image, width, height, iconSize, padding int"},{"Uniquefunname":"func SavePngFile(m image.Image, filename string) error","Funname":"common.SavePngFile","Returntype":"error","Args":"m image.Image, filename string"}],"Records":null}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/theme_thumb/cursor/cursor.go","Functions":[{"Uniquefunname":"func Gen(descFile string, width, height int, scaleFactor float64, out string) error","Funname":"Gen","Returntype":"error","Args":"descFile string, width, height int, scaleFactor float64, out string"},{"Uniquefunname":"func Gen(descFile string, width, height int, scaleFactor float64, out string) error","Funname":"cursor.Gen","Returntype":"error","Args":"descFile string, width, height int, scaleFactor float64, out string"},{"Uniquefunname":"func getCursorIcons(dir string, size int) (images []image.Image)","Funname":"cursor.getCursorIcons","Returntype":"(images []image.Image)","Args":"dir string, size int"},{"Uniquefunname":"func getCursorIcons(dir string, size int) (images []image.Image)","Funname":"getCursorIcons","Returntype":"(images []image.Image)","Args":"dir string, size int"}],"Records":[{"Name":"const:cursor","Fields":["cursor.Version","cursor.baseIconSize","cursor.basePadding"]},{"Name":"var:cursor","Fields":["cursor.presentCursors"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/theme_thumb/cursor/load.go","Functions":[{"Uniquefunname":"func destroyXCursorImage(img *C.XcursorImage)","Funname":"cursor.destroyXCursorImage","Returntype":"","Args":"img *C.XcursorImage"},{"Uniquefunname":"func loadXCursor(filename string, size int) (image.Image, error)","Funname":"cursor.loadXCursor","Returntype":"(image.Image, error)","Args":"filename string, size int"},{"Uniquefunname":"func loadXCursorImage(filename string, size int) *C.XcursorImage","Funname":"cursor.loadXCursorImage","Returntype":"*C.XcursorImage","Args":"filename string, size int"},{"Uniquefunname":"func newImageFromXCurorImage(img *C.XcursorImage) image.Image","Funname":"cursor.newImageFromXCurorImage","Returntype":"image.Image","Args":"img *C.XcursorImage"},{"Uniquefunname":"func destroyXCursorImage(img *C.XcursorImage)","Funname":"destroyXCursorImage","Returntype":"","Args":"img *C.XcursorImage"},{"Uniquefunname":"func loadXCursor(filename string, size int) (image.Image, error)","Funname":"loadXCursor","Returntype":"(image.Image, error)","Args":"filename string, size int"},{"Uniquefunname":"func loadXCursorImage(filename string, size int) *C.XcursorImage","Funname":"loadXCursorImage","Returntype":"*C.XcursorImage","Args":"filename string, size int"},{"Uniquefunname":"func newImageFromXCurorImage(img *C.XcursorImage) image.Image","Funname":"newImageFromXCurorImage","Returntype":"image.Image","Args":"img *C.XcursorImage"}],"Records":null}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/theme_thumb/gtk/gtk.go","Functions":[{"Uniquefunname":"func Gen(name string, width, height int, scaleFactor float64, dest string) error","Funname":"Gen","Returntype":"error","Args":"name string, width, height int, scaleFactor float64, dest string"},{"Uniquefunname":"func Gen(name string, width, height int, scaleFactor float64, dest string) error","Funname":"gtk.Gen","Returntype":"error","Args":"name string, width, height int, scaleFactor float64, dest string"}],"Records":[{"Name":"const:gtk","Fields":["gtk.Version","gtk.cmd"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/theme_thumb/icon/icon.go","Functions":[{"Uniquefunname":"func ChooseIcon(theme string, iconNames []string, size int) string","Funname":"ChooseIcon","Returntype":"string","Args":"theme string, iconNames []string, size int"},{"Uniquefunname":"func Gen(theme string, width, height int, scaleFactor float64, out string) error","Funname":"Gen","Returntype":"error","Args":"theme string, width, height int, scaleFactor float64, out string"},{"Uniquefunname":"func cStrv(strv []string) []*C.char","Funname":"cStrv","Returntype":"[]*C.char","Args":"strv []string"},{"Uniquefunname":"func chooseIcon(theme string, iconNames []string, size int) string","Funname":"chooseIcon","Returntype":"string","Args":"theme string, iconNames []string, size int"},{"Uniquefunname":"func getIcons(theme string, size int) (images []image.Image)","Funname":"getIcons","Returntype":"(images []image.Image)","Args":"theme string, size int"},{"Uniquefunname":"func ChooseIcon(theme string, iconNames []string, size int) string","Funname":"icon.ChooseIcon","Returntype":"string","Args":"theme string, iconNames []string, size int"},{"Uniquefunname":"func Gen(theme string, width, height int, scaleFactor float64, out string) error","Funname":"icon.Gen","Returntype":"error","Args":"theme string, width, height int, scaleFactor float64, out string"},{"Uniquefunname":"func cStrv(strv []string) []*C.char","Funname":"icon.cStrv","Returntype":"[]*C.char","Args":"strv []string"},{"Uniquefunname":"func chooseIcon(theme string, iconNames []string, size int) string","Funname":"icon.chooseIcon","Returntype":"string","Args":"theme string, iconNames []string, size int"},{"Uniquefunname":"func getIcons(theme string, size int) (images []image.Image)","Funname":"icon.getIcons","Returntype":"(images []image.Image)","Args":"theme string, size int"},{"Uniquefunname":"func loadIcon(theme string, iconNames []string, size int) (img image.Image, err error)","Funname":"icon.loadIcon","Returntype":"(img image.Image, err error)","Args":"theme string, iconNames []string, size int"},{"Uniquefunname":"func loadOther(filename string) (image.Image, error)","Funname":"icon.loadOther","Returntype":"(image.Image, error)","Args":"filename string"},{"Uniquefunname":"func loadSvg(filename string, size int) (img image.Image, err error)","Funname":"icon.loadSvg","Returntype":"(img image.Image, err error)","Args":"filename string, size int"},{"Uniquefunname":"func loadIcon(theme string, iconNames []string, size int) (img image.Image, err error)","Funname":"loadIcon","Returntype":"(img image.Image, err error)","Args":"theme string, iconNames []string, size int"},{"Uniquefunname":"func loadOther(filename string) (image.Image, error)","Funname":"loadOther","Returntype":"(image.Image, error)","Args":"filename string"},{"Uniquefunname":"func loadSvg(filename string, size int) (img image.Image, err error)","Funname":"loadSvg","Returntype":"(img image.Image, err error)","Args":"filename string, size int"}],"Records":[{"Name":"const:icon","Fields":["icon.Version","icon.baseIconSize","icon.basePadding"]},{"Name":"var:icon","Fields":["icon.presentIcons"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/themes/cursor.go","Functions":[{"Uniquefunname":"func setGtkCursor(name string)","Funname":"setGtkCursor","Returntype":"","Args":"name string"},{"Uniquefunname":"func setQtCursor(name string)","Funname":"setQtCursor","Returntype":"","Args":"name string"},{"Uniquefunname":"func setGtkCursor(name string)","Funname":"themes.setGtkCursor","Returntype":"","Args":"name string"},{"Uniquefunname":"func setQtCursor(name string)","Funname":"themes.setQtCursor","Returntype":"","Args":"name string"}],"Records":null}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/themes/gtk2.go","Functions":[{"Uniquefunname":"func (infos gtk2ConfInfos) Add(key, value string) gtk2ConfInfos","Funname":"Add","Returntype":"gtk2ConfInfos","Args":"key, value string"},{"Uniquefunname":"func (infos gtk2ConfInfos) Get(key string) *gtk2ConfInfo","Funname":"Get","Returntype":"*gtk2ConfInfo","Args":"key string"},{"Uniquefunname":"func gtk2FileReader(file string) gtk2ConfInfos","Funname":"gtk2FileReader","Returntype":"gtk2ConfInfos","Args":"file string"},{"Uniquefunname":"func gtk2FileWriter(infos gtk2ConfInfos, file string) error","Funname":"gtk2FileWriter","Returntype":"error","Args":"infos gtk2ConfInfos, file string"},{"Uniquefunname":"func setGtk2Cursor(name string) error","Funname":"setGtk2Cursor","Returntype":"error","Args":"name string"},{"Uniquefunname":"func setGtk2Icon(name string) error","Funname":"setGtk2Icon","Returntype":"error","Args":"name string"},{"Uniquefunname":"func setGtk2Prop(key, value, file string) error","Funname":"setGtk2Prop","Returntype":"error","Args":"key, value, file string"},{"Uniquefunname":"func setGtk2Theme(name string) error","Funname":"setGtk2Theme","Returntype":"error","Args":"name string"},{"Uniquefunname":"func (infos gtk2ConfInfos) Add(key, value string) gtk2ConfInfos","Funname":"themes.gtk2ConfInfos.Add","Returntype":"gtk2ConfInfos","Args":"key, value string"},{"Uniquefunname":"func (infos gtk2ConfInfos) Get(key string) *gtk2ConfInfo","Funname":"themes.gtk2ConfInfos.Get","Returntype":"*gtk2ConfInfo","Args":"key string"},{"Uniquefunname":"func gtk2FileReader(file string) gtk2ConfInfos","Funname":"themes.gtk2FileReader","Returntype":"gtk2ConfInfos","Args":"file string"},{"Uniquefunname":"func gtk2FileWriter(infos gtk2ConfInfos, file string) error","Funname":"themes.gtk2FileWriter","Returntype":"error","Args":"infos gtk2ConfInfos, file string"},{"Uniquefunname":"func setGtk2Cursor(name string) error","Funname":"themes.setGtk2Cursor","Returntype":"error","Args":"name string"},{"Uniquefunname":"func setGtk2Icon(name string) error","Funname":"themes.setGtk2Icon","Returntype":"error","Args":"name string"},{"Uniquefunname":"func setGtk2Prop(key, value, file string) error","Funname":"themes.setGtk2Prop","Returntype":"error","Args":"key, value, file string"},{"Uniquefunname":"func setGtk2Theme(name string) error","Funname":"themes.setGtk2Theme","Returntype":"error","Args":"name string"}],"Records":[{"Name":"const:themes","Fields":["themes.gtk2ConfDelim"]},{"Name":"var:themes","Fields":["themes.gtk2ConfFile","themes.gtk2Locker"]},{"Name":"struct:themes.gtk2ConfInfo","Fields":["themes.gtk2ConfInfo.key string","themes.gtk2ConfInfo.value string"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/themes/gtk2_test.go","Functions":[{"Uniquefunname":"func TestGtk2Infos(t *testing.T)","Funname":"TestGtk2Infos","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGtk2Infos(t *testing.T)","Funname":"themes.TestGtk2Infos","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/themes/gtk3.go","Functions":[{"Uniquefunname":"func doSetGtk3Prop(key, value, file string, kfile *glib.KeyFile) error","Funname":"doSetGtk3Prop","Returntype":"error","Args":"key, value, file string, kfile *glib.KeyFile"},{"Uniquefunname":"func isGtk3PropEqual(key, value string, kfile *glib.KeyFile) bool","Funname":"isGtk3PropEqual","Returntype":"bool","Args":"key, value string, kfile *glib.KeyFile"},{"Uniquefunname":"func setGtk3Cursor(name string) error","Funname":"setGtk3Cursor","Returntype":"error","Args":"name string"},{"Uniquefunname":"func setGtk3Icon(name string) error","Funname":"setGtk3Icon","Returntype":"error","Args":"name string"},{"Uniquefunname":"func setGtk3Prop(key, value, file string) error","Funname":"setGtk3Prop","Returntype":"error","Args":"key, value, file string"},{"Uniquefunname":"func setGtk3Theme(name string) error","Funname":"setGtk3Theme","Returntype":"error","Args":"name string"},{"Uniquefunname":"func doSetGtk3Prop(key, value, file string, kfile *glib.KeyFile) error","Funname":"themes.doSetGtk3Prop","Returntype":"error","Args":"key, value, file string, kfile *glib.KeyFile"},{"Uniquefunname":"func isGtk3PropEqual(key, value string, kfile *glib.KeyFile) bool","Funname":"themes.isGtk3PropEqual","Returntype":"bool","Args":"key, value string, kfile *glib.KeyFile"},{"Uniquefunname":"func setGtk3Cursor(name string) error","Funname":"themes.setGtk3Cursor","Returntype":"error","Args":"name string"},{"Uniquefunname":"func setGtk3Icon(name string) error","Funname":"themes.setGtk3Icon","Returntype":"error","Args":"name string"},{"Uniquefunname":"func setGtk3Prop(key, value, file string) error","Funname":"themes.setGtk3Prop","Returntype":"error","Args":"key, value, file string"},{"Uniquefunname":"func setGtk3Theme(name string) error","Funname":"themes.setGtk3Theme","Returntype":"error","Args":"name string"}],"Records":[{"Name":"var:themes","Fields":["themes.gtk3ConfFile","themes.gtk3Locker"]},{"Name":"const:themes","Fields":["themes.gtk3GroupSettings","themes.gtk3KeyCursor","themes.gtk3KeyIcon","themes.gtk3KeyTheme"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/themes/gtk3_test.go","Functions":[{"Uniquefunname":"func TestGtk3Prop(t *testing.T)","Funname":"TestGtk3Prop","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGtk3Prop(t *testing.T)","Funname":"themes.TestGtk3Prop","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/themes/settings.go","Functions":[{"Uniquefunname":"func GetCursorTheme() string","Funname":"GetCursorTheme","Returntype":"string","Args":""},{"Uniquefunname":"func SetCursorTheme(name string) error","Funname":"SetCursorTheme","Returntype":"error","Args":"name string"},{"Uniquefunname":"func SetGtkTheme(name string) error","Funname":"SetGtkTheme","Returntype":"error","Args":"name string"},{"Uniquefunname":"func SetIconTheme(name string) error","Funname":"SetIconTheme","Returntype":"error","Args":"name string"},{"Uniquefunname":"func getThemePath(name, ty, key string) string","Funname":"getThemePath","Returntype":"string","Args":"name, ty, key string"},{"Uniquefunname":"func getXSettingsValue(key string) string","Funname":"getXSettingsValue","Returntype":"string","Args":"key string"},{"Uniquefunname":"func setDefaultCursor(name string) bool","Funname":"setDefaultCursor","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func setQTTheme(name string) bool","Funname":"setQTTheme","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func setQt4Theme(config string) bool","Funname":"setQt4Theme","Returntype":"bool","Args":"config string"},{"Uniquefunname":"func setWMCursor(name string)","Funname":"setWMCursor","Returntype":"","Args":"name string"},{"Uniquefunname":"func setWMTheme(name string) bool","Funname":"setWMTheme","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func setXSettingsKey(key, value string) bool","Funname":"setXSettingsKey","Returntype":"bool","Args":"key, value string"},{"Uniquefunname":"func GetCursorTheme() string","Funname":"themes.GetCursorTheme","Returntype":"string","Args":""},{"Uniquefunname":"func SetCursorTheme(name string) error","Funname":"themes.SetCursorTheme","Returntype":"error","Args":"name string"},{"Uniquefunname":"func SetGtkTheme(name string) error","Funname":"themes.SetGtkTheme","Returntype":"error","Args":"name string"},{"Uniquefunname":"func SetIconTheme(name string) error","Funname":"themes.SetIconTheme","Returntype":"error","Args":"name string"},{"Uniquefunname":"func getThemePath(name, ty, key string) string","Funname":"themes.getThemePath","Returntype":"string","Args":"name, ty, key string"},{"Uniquefunname":"func getXSettingsValue(key string) string","Funname":"themes.getXSettingsValue","Returntype":"string","Args":"key string"},{"Uniquefunname":"func setDefaultCursor(name string) bool","Funname":"themes.setDefaultCursor","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func setQTTheme(name string) bool","Funname":"themes.setQTTheme","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func setQt4Theme(config string) bool","Funname":"themes.setQt4Theme","Returntype":"bool","Args":"config string"},{"Uniquefunname":"func setWMCursor(name string)","Funname":"themes.setWMCursor","Returntype":"","Args":"name string"},{"Uniquefunname":"func setWMTheme(name string) bool","Funname":"themes.setWMTheme","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func setXSettingsKey(key, value string) bool","Funname":"themes.setXSettingsKey","Returntype":"bool","Args":"key, value string"}],"Records":[{"Name":"const:themes","Fields":["themes.interfaceSchema","themes.metacitySchema","themes.wmSchema","themes.xsKeyCursorName","themes.xsKeyIconTheme","themes.xsKeyTheme","themes.xsettingsSchema"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/themes/theme.go","Functions":[{"Uniquefunname":"func IsThemeInList(theme string, list []string) bool","Funname":"IsThemeInList","Returntype":"bool","Args":"theme string, list []string"},{"Uniquefunname":"func ListCursorTheme() []string","Funname":"ListCursorTheme","Returntype":"[]string","Args":""},{"Uniquefunname":"func ListGtkTheme() []string","Funname":"ListGtkTheme","Returntype":"[]string","Args":""},{"Uniquefunname":"func ListIconTheme() []string","Funname":"ListIconTheme","Returntype":"[]string","Args":""},{"Uniquefunname":"func doListTheme(local, sys []string, scanner func(string) ([]string, error)) []string","Funname":"doListTheme","Returntype":"[]string","Args":"local, sys []string, scanner func(string) ([]string, error)"},{"Uniquefunname":"func mergeThemeList(src, target []string) []string","Funname":"mergeThemeList","Returntype":"[]string","Args":"src, target []string"},{"Uniquefunname":"func scanThemeDirs(dirs []string, scanner func(string) ([]string, error)) []string","Funname":"scanThemeDirs","Returntype":"[]string","Args":"dirs []string, scanner func(string) ([]string, error)"},{"Uniquefunname":"func IsThemeInList(theme string, list []string) bool","Funname":"themes.IsThemeInList","Returntype":"bool","Args":"theme string, list []string"},{"Uniquefunname":"func ListCursorTheme() []string","Funname":"themes.ListCursorTheme","Returntype":"[]string","Args":""},{"Uniquefunname":"func ListGtkTheme() []string","Funname":"themes.ListGtkTheme","Returntype":"[]string","Args":""},{"Uniquefunname":"func ListIconTheme() []string","Funname":"themes.ListIconTheme","Returntype":"[]string","Args":""},{"Uniquefunname":"func doListTheme(local, sys []string, scanner func(string) ([]string, error)) []string","Funname":"themes.doListTheme","Returntype":"[]string","Args":"local, sys []string, scanner func(string) ([]string, error)"},{"Uniquefunname":"func mergeThemeList(src, target []string) []string","Funname":"themes.mergeThemeList","Returntype":"[]string","Args":"src, target []string"},{"Uniquefunname":"func scanThemeDirs(dirs []string, scanner func(string) ([]string, error)) []string","Funname":"themes.scanThemeDirs","Returntype":"[]string","Args":"dirs []string, scanner func(string) ([]string, error)"}],"Records":null}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/themes/theme_test.go","Functions":[{"Uniquefunname":"func TestMergeThemeList(t *testing.T)","Funname":"TestMergeThemeList","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSetQt4Theme(t *testing.T)","Funname":"TestSetQt4Theme","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestMergeThemeList(t *testing.T)","Funname":"themes.TestMergeThemeList","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSetQt4Theme(t *testing.T)","Funname":"themes.TestSetQt4Theme","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/themes/scanner/scanner.go","Functions":[{"Uniquefunname":"func IsCursorTheme(uri string) bool","Funname":"IsCursorTheme","Returntype":"bool","Args":"uri string"},{"Uniquefunname":"func IsGtkTheme(uri string) bool","Funname":"IsGtkTheme","Returntype":"bool","Args":"uri string"},{"Uniquefunname":"func IsIconTheme(uri string) bool","Funname":"IsIconTheme","Returntype":"bool","Args":"uri string"},{"Uniquefunname":"func ListCursorTheme(uri string) ([]string, error)","Funname":"ListCursorTheme","Returntype":"([]string, error)","Args":"uri string"},{"Uniquefunname":"func ListGtkTheme(uri string) ([]string, error)","Funname":"ListGtkTheme","Returntype":"([]string, error)","Args":"uri string"},{"Uniquefunname":"func ListIconTheme(uri string) ([]string, error)","Funname":"ListIconTheme","Returntype":"([]string, error)","Args":"uri string"},{"Uniquefunname":"func doListTheme(uri string, ty string, filter func(string) bool) ([]string, error)","Funname":"doListTheme","Returntype":"([]string, error)","Args":"uri string, ty string, filter func(string) bool"},{"Uniquefunname":"func isHidden(file, ty string) bool","Funname":"isHidden","Returntype":"bool","Args":"file, ty string"},{"Uniquefunname":"func listSubDir(dir string) ([]string, error)","Funname":"listSubDir","Returntype":"([]string, error)","Args":"dir string"},{"Uniquefunname":"func IsCursorTheme(uri string) bool","Funname":"scanner.IsCursorTheme","Returntype":"bool","Args":"uri string"},{"Uniquefunname":"func IsGtkTheme(uri string) bool","Funname":"scanner.IsGtkTheme","Returntype":"bool","Args":"uri string"},{"Uniquefunname":"func IsIconTheme(uri string) bool","Funname":"scanner.IsIconTheme","Returntype":"bool","Args":"uri string"},{"Uniquefunname":"func ListCursorTheme(uri string) ([]string, error)","Funname":"scanner.ListCursorTheme","Returntype":"([]string, error)","Args":"uri string"},{"Uniquefunname":"func ListGtkTheme(uri string) ([]string, error)","Funname":"scanner.ListGtkTheme","Returntype":"([]string, error)","Args":"uri string"},{"Uniquefunname":"func ListIconTheme(uri string) ([]string, error)","Funname":"scanner.ListIconTheme","Returntype":"([]string, error)","Args":"uri string"},{"Uniquefunname":"func doListTheme(uri string, ty string, filter func(string) bool) ([]string, error)","Funname":"scanner.doListTheme","Returntype":"([]string, error)","Args":"uri string, ty string, filter func(string) bool"},{"Uniquefunname":"func isHidden(file, ty string) bool","Funname":"scanner.isHidden","Returntype":"bool","Args":"file, ty string"},{"Uniquefunname":"func listSubDir(dir string) ([]string, error)","Funname":"scanner.listSubDir","Returntype":"([]string, error)","Args":"dir string"}],"Records":[{"Name":"const:scanner","Fields":["scanner.ThemeTypeCursor","scanner.ThemeTypeGtk","scanner.ThemeTypeIcon"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/themes/scanner/scanner_test.go","Functions":[{"Uniquefunname":"func TestListCursorTheme(t *testing.T)","Funname":"TestListCursorTheme","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestListGtkTheme(t *testing.T)","Funname":"TestListGtkTheme","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestListIconTheme(t *testing.T)","Funname":"TestListIconTheme","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestThemeHidden(t *testing.T)","Funname":"TestThemeHidden","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestListCursorTheme(t *testing.T)","Funname":"scanner.TestListCursorTheme","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestListGtkTheme(t *testing.T)","Funname":"scanner.TestListGtkTheme","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestListIconTheme(t *testing.T)","Funname":"scanner.TestListIconTheme","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestThemeHidden(t *testing.T)","Funname":"scanner.TestThemeHidden","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/thumbnails.go","Functions":[{"Uniquefunname":"func GenThumbnail(uri string, size int) (string, error)","Funname":"GenThumbnail","Returntype":"(string, error)","Args":"uri string, size int"},{"Uniquefunname":"func GenThumbnailWithMime(uri, ty string, size int) (string, error)","Funname":"GenThumbnailWithMime","Returntype":"(string, error)","Args":"uri, ty string, size int"},{"Uniquefunname":"func correctSize(size int) int","Funname":"correctSize","Returntype":"int","Args":"size int"},{"Uniquefunname":"func GenThumbnail(uri string, size int) (string, error)","Funname":"thumbnails.GenThumbnail","Returntype":"(string, error)","Args":"uri string, size int"},{"Uniquefunname":"func GenThumbnailWithMime(uri, ty string, size int) (string, error)","Funname":"thumbnails.GenThumbnailWithMime","Returntype":"(string, error)","Args":"uri, ty string, size int"},{"Uniquefunname":"func correctSize(size int) int","Funname":"thumbnails.correctSize","Returntype":"int","Args":"size int"}],"Records":null}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/thumbnails_test.go","Functions":[{"Uniquefunname":"func TestCorrectSize(t *testing.T)","Funname":"TestCorrectSize","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestCorrectSize(t *testing.T)","Funname":"thumbnails.TestCorrectSize","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/cursor/cursor.go","Functions":[{"Uniquefunname":"func GenThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"GenThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func ThumbnailForTheme(src, bg string, width, height int, force bool) (string, error)","Funname":"ThumbnailForTheme","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func GenThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"cursor.GenThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"cursor.SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func ThumbnailForTheme(src, bg string, width, height int, force bool) (string, error)","Funname":"cursor.ThumbnailForTheme","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func genCursorThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"cursor.genCursorThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func getThumbDest(src string, width, height int, theme bool) (string, error)","Funname":"cursor.getThumbDest","Returntype":"(string, error)","Args":"src string, width, height int, theme bool"},{"Uniquefunname":"func init()","Funname":"cursor.init","Returntype":"","Args":""},{"Uniquefunname":"func genCursorThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"genCursorThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func getThumbDest(src string, width, height int, theme bool) (string, error)","Funname":"getThumbDest","Returntype":"(string, error)","Args":"src string, width, height int, theme bool"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""}],"Records":[{"Name":"const:cursor","Fields":["cursor.sysThemeThumbDir"]},{"Name":"var:cursor","Fields":["cursor.themeThumbDir"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/cursor/thumbnail.go","Functions":[{"Uniquefunname":"func cursor.doGenThumbnail(src, bg, dest string, width, height int, force, theme bool)(string, error)","Funname":"cursor.doGenThumbnail","Returntype":"(string, error)","Args":"src, bg, dest string, width, height int, force, theme bool"},{"Uniquefunname":"func getCursorIcons(dir, cacheDir string) []string","Funname":"cursor.getCursorIcons","Returntype":"[]string","Args":"dir, cacheDir string"},{"Uniquefunname":"func doGenThumbnail(src, bg, dest string, width, height int, force, theme bool)(string, error)","Funname":"doGenThumbnail","Returntype":"(string, error)","Args":"src, bg, dest string, width, height int, force, theme bool"},{"Uniquefunname":"func getCursorIcons(dir, cacheDir string) []string","Funname":"getCursorIcons","Returntype":"[]string","Args":"dir, cacheDir string"}],"Records":[{"Name":"const:cursor","Fields":["cursor.defaultHeight","cursor.defaultIconSize","cursor.defaultPadding","cursor.defaultWidth"]},{"Name":"var:cursor","Fields":["cursor.presentCursors"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/cursor/xcur2png.go","Functions":[{"Uniquefunname":"func XCursorToPng(filename, destDir string) (string, error)","Funname":"XCursorToPng","Returntype":"(string, error)","Args":"filename, destDir string"},{"Uniquefunname":"func XCursorToPng(filename, destDir string) (string, error)","Funname":"cursor.XCursorToPng","Returntype":"(string, error)","Args":"filename, destDir string"},{"Uniquefunname":"func destroyXCursorImage(img *C.XcursorImage)","Funname":"cursor.destroyXCursorImage","Returntype":"","Args":"img *C.XcursorImage"},{"Uniquefunname":"func loadXCursorImage(filename string, size int) *C.XcursorImage","Funname":"cursor.loadXCursorImage","Returntype":"*C.XcursorImage","Args":"filename string, size int"},{"Uniquefunname":"func newImageFromXCurorImage(img *C.XcursorImage) image.Image","Funname":"cursor.newImageFromXCurorImage","Returntype":"image.Image","Args":"img *C.XcursorImage"},{"Uniquefunname":"func savePngFile(m image.Image, filename string) error","Funname":"cursor.savePngFile","Returntype":"error","Args":"m image.Image, filename string"},{"Uniquefunname":"func destroyXCursorImage(img *C.XcursorImage)","Funname":"destroyXCursorImage","Returntype":"","Args":"img *C.XcursorImage"},{"Uniquefunname":"func loadXCursorImage(filename string, size int) *C.XcursorImage","Funname":"loadXCursorImage","Returntype":"*C.XcursorImage","Args":"filename string, size int"},{"Uniquefunname":"func newImageFromXCurorImage(img *C.XcursorImage) image.Image","Funname":"newImageFromXCurorImage","Returntype":"image.Image","Args":"img *C.XcursorImage"},{"Uniquefunname":"func savePngFile(m image.Image, filename string) error","Funname":"savePngFile","Returntype":"error","Args":"m image.Image, filename string"}],"Records":null}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/font/font.go","Functions":[{"Uniquefunname":"func GenThumbnail(src string, width, height int, force bool) (string, error)","Funname":"GenThumbnail","Returntype":"(string, error)","Args":"src string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func GenThumbnail(src string, width, height int, force bool) (string, error)","Funname":"font.GenThumbnail","Returntype":"(string, error)","Args":"src string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"font.SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func genFontThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"font.genFontThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func init()","Funname":"font.init","Returntype":"","Args":""},{"Uniquefunname":"func genFontThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"genFontThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""}],"Records":[{"Name":"const:font","Fields":["font.FontTypeOTF","font.FontTypeTTF"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/font/wrapper.go","Functions":[{"Uniquefunname":"func doGenThumbnail(file, dest string, width, height int) (string, error)","Funname":"doGenThumbnail","Returntype":"(string, error)","Args":"file, dest string, width, height int"},{"Uniquefunname":"func doGenThumbnail(file, dest string, width, height int) (string, error)","Funname":"font.doGenThumbnail","Returntype":"(string, error)","Args":"file, dest string, width, height int"},{"Uniquefunname":"func getThumbSize(width, height int) int","Funname":"font.getThumbSize","Returntype":"int","Args":"width, height int"},{"Uniquefunname":"func getThumbSize(width, height int) int","Funname":"getThumbSize","Returntype":"int","Args":"width, height int"}],"Records":null}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/gtk/gtk.go","Functions":[{"Uniquefunname":"func GenThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"GenThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func ThumbnailForTheme(src, bg string, width, height int, force bool) (string, error)","Funname":"ThumbnailForTheme","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func doGenThumbnail(name, bg, dest string, width, height int, force bool) (string, error)","Funname":"doGenThumbnail","Returntype":"(string, error)","Args":"name, bg, dest string, width, height int, force bool"},{"Uniquefunname":"func genGtkThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"genGtkThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func getThumbDest(src string, width, height int, theme bool) (string, error)","Funname":"getThumbDest","Returntype":"(string, error)","Args":"src string, width, height int, theme bool"},{"Uniquefunname":"func GenThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"gtk.GenThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"gtk.SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func ThumbnailForTheme(src, bg string, width, height int, force bool) (string, error)","Funname":"gtk.ThumbnailForTheme","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func doGenThumbnail(name, bg, dest string, width, height int, force bool) (string, error)","Funname":"gtk.doGenThumbnail","Returntype":"(string, error)","Args":"name, bg, dest string, width, height int, force bool"},{"Uniquefunname":"func genGtkThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"gtk.genGtkThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func getThumbDest(src string, width, height int, theme bool) (string, error)","Funname":"gtk.getThumbDest","Returntype":"(string, error)","Args":"src string, width, height int, theme bool"},{"Uniquefunname":"func init()","Funname":"gtk.init","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""}],"Records":[{"Name":"const:gtk","Fields":["gtk.cmdGtkThumbnailer","gtk.sysThemeThumbDir"]},{"Name":"var:gtk","Fields":["gtk.themeThumbDir"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/icon/icon.go","Functions":[{"Uniquefunname":"func GenThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"GenThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func ThumbnailForTheme(src, bg string, width, height int, force bool) (string, error)","Funname":"ThumbnailForTheme","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func genIconThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"genIconThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func getThumbDest(src string, width, height int, theme bool) (string, error)","Funname":"getThumbDest","Returntype":"(string, error)","Args":"src string, width, height int, theme bool"},{"Uniquefunname":"func GenThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"icon.GenThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"icon.SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func ThumbnailForTheme(src, bg string, width, height int, force bool) (string, error)","Funname":"icon.ThumbnailForTheme","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func genIconThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"icon.genIconThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func getThumbDest(src string, width, height int, theme bool) (string, error)","Funname":"icon.getThumbDest","Returntype":"(string, error)","Args":"src string, width, height int, theme bool"},{"Uniquefunname":"func init()","Funname":"icon.init","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""}],"Records":[{"Name":"const:icon","Fields":["icon.sysThemeThumbDir"]},{"Name":"var:icon","Fields":["icon.themeThumbDir"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/icon/thumbnail.go","Functions":[{"Uniquefunname":"func doGenThumbnail(src, bg, dest string, width, height int, force, theme bool)(string, error)","Funname":"doGenThumbnail","Returntype":"(string, error)","Args":"src, bg, dest string, width, height int, force, theme bool"},{"Uniquefunname":"func fixIconFiles(files []string) []string","Funname":"fixIconFiles","Returntype":"[]string","Args":"files []string"},{"Uniquefunname":"func getIconFiles(theme string) []string","Funname":"getIconFiles","Returntype":"[]string","Args":"theme string"},{"Uniquefunname":"func icon.doGenThumbnail(src, bg, dest string, width, height int, force, theme bool)(string, error)","Funname":"icon.doGenThumbnail","Returntype":"(string, error)","Args":"src, bg, dest string, width, height int, force, theme bool"},{"Uniquefunname":"func fixIconFiles(files []string) []string","Funname":"icon.fixIconFiles","Returntype":"[]string","Args":"files []string"},{"Uniquefunname":"func getIconFiles(theme string) []string","Funname":"icon.getIconFiles","Returntype":"[]string","Args":"theme string"}],"Records":[{"Name":"const:icon","Fields":["icon.defaultHeight","icon.defaultIconSize","icon.defaultPadding","icon.defaultWidth"]},{"Name":"var:icon","Fields":["icon.presentIcons"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/icon/wrapper.go","Functions":[{"Uniquefunname":"func ChooseIcon(theme string, names []string) string","Funname":"ChooseIcon","Returntype":"string","Args":"theme string, names []string"},{"Uniquefunname":"func StrvInC(strv []string) []*C.char","Funname":"StrvInC","Returntype":"[]*C.char","Args":"strv []string"},{"Uniquefunname":"func ChooseIcon(theme string, names []string) string","Funname":"icon.ChooseIcon","Returntype":"string","Args":"theme string, names []string"},{"Uniquefunname":"func StrvInC(strv []string) []*C.char","Funname":"icon.StrvInC","Returntype":"[]*C.char","Args":"strv []string"}],"Records":null}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/images/images.go","Functions":[{"Uniquefunname":"func GenThumbnail(src string, width, height int, force bool) (string, error)","Funname":"GenThumbnail","Returntype":"(string, error)","Args":"src string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func ThumbnailForTheme(src string, width, height int, force bool) (string, error)","Funname":"ThumbnailForTheme","Returntype":"(string, error)","Args":"src string, width, height int, force bool"},{"Uniquefunname":"func doGenThumbnail(src, bg, dest string, width, height int, force, theme bool)(string, error)","Funname":"doGenThumbnail","Returntype":"(string, error)","Args":"src, bg, dest string, width, height int, force, theme bool"},{"Uniquefunname":"func genImageThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"genImageThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func genSvgThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"genSvgThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func getThumbDest(src string, width, height int, theme bool) (string, error)","Funname":"getThumbDest","Returntype":"(string, error)","Args":"src string, width, height int, theme bool"},{"Uniquefunname":"func GenThumbnail(src string, width, height int, force bool) (string, error)","Funname":"images.GenThumbnail","Returntype":"(string, error)","Args":"src string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"images.SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func ThumbnailForTheme(src string, width, height int, force bool) (string, error)","Funname":"images.ThumbnailForTheme","Returntype":"(string, error)","Args":"src string, width, height int, force bool"},{"Uniquefunname":"func images.doGenThumbnail(src, bg, dest string, width, height int, force, theme bool)(string, error)","Funname":"images.doGenThumbnail","Returntype":"(string, error)","Args":"src, bg, dest string, width, height int, force, theme bool"},{"Uniquefunname":"func genImageThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"images.genImageThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func genSvgThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"images.genSvgThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func getThumbDest(src string, width, height int, theme bool) (string, error)","Funname":"images.getThumbDest","Returntype":"(string, error)","Args":"src string, width, height int, theme bool"},{"Uniquefunname":"func init()","Funname":"images.init","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""}],"Records":[{"Name":"const:images","Fields":["images.ImageTypeBmp","images.ImageTypeGif","images.ImageTypeJpeg","images.ImageTypePng","images.ImageTypeSvg","images.ImageTypeTiff","images.sysThemeThumbDir"]},{"Name":"var:images","Fields":["images.themeThumbDir"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/images/wrapper.go","Functions":[{"Uniquefunname":"func svgToPng(src, dest string) error","Funname":"images.svgToPng","Returntype":"error","Args":"src, dest string"},{"Uniquefunname":"func svgToPng(src, dest string) error","Funname":"svgToPng","Returntype":"error","Args":"src, dest string"}],"Records":null}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/loader/loader.go","Functions":[{"Uniquefunname":"func (m *Manager) Add(ty string, handler HandleType) error","Funname":"Add","Returntype":"error","Args":"ty string, handler HandleType"},{"Uniquefunname":"func CompositeIcons(icons []string, bg, dest string, iconSize, width, height, padding int)error","Funname":"CompositeIcons","Returntype":"error","Args":"icons []string, bg, dest string, iconSize, width, height, padding int"},{"Uniquefunname":"func (m *Manager) Delete(ty string)","Funname":"Delete","Returntype":"","Args":"ty string"},{"Uniquefunname":"func (m *Manager) Get(ty string) HandleType","Funname":"Get","Returntype":"HandleType","Args":"ty string"},{"Uniquefunname":"func GetBackground(width, height int) (string, error)","Funname":"GetBackground","Returntype":"(string, error)","Args":"width, height int"},{"Uniquefunname":"func GetHandler(ty string) (HandleType, error)","Funname":"GetHandler","Returntype":"(HandleType, error)","Args":"ty string"},{"Uniquefunname":"func GetThumbnailDest(uri string, width, height int) (string, error)","Funname":"GetThumbnailDest","Returntype":"(string, error)","Args":"uri string, width, height int"},{"Uniquefunname":"func GetTmpImage() string","Funname":"GetTmpImage","Returntype":"string","Args":""},{"Uniquefunname":"func IsStrInList(item string, items []string) bool","Funname":"IsStrInList","Returntype":"bool","Args":"item string, items []string"},{"Uniquefunname":"func Register(ty string, handler HandleType)","Funname":"Register","Returntype":"","Args":"ty string, handler HandleType"},{"Uniquefunname":"func ScaleImage(src, dest string, width, height int) error","Funname":"ScaleImage","Returntype":"error","Args":"src, dest string, width, height int"},{"Uniquefunname":"func ThumbnailImage(src, dest string, width, height int) error","Funname":"ThumbnailImage","Returntype":"error","Args":"src, dest string, width, height int"},{"Uniquefunname":"func getFileModTime(file string) string","Funname":"getFileModTime","Returntype":"string","Args":"file string"},{"Uniquefunname":"func loader.CompositeIcons(icons []string, bg, dest string, iconSize, width, height, padding int)error","Funname":"loader.CompositeIcons","Returntype":"error","Args":"icons []string, bg, dest string, iconSize, width, height, padding int"},{"Uniquefunname":"func GetBackground(width, height int) (string, error)","Funname":"loader.GetBackground","Returntype":"(string, error)","Args":"width, height int"},{"Uniquefunname":"func GetHandler(ty string) (HandleType, error)","Funname":"loader.GetHandler","Returntype":"(HandleType, error)","Args":"ty string"},{"Uniquefunname":"func GetThumbnailDest(uri string, width, height int) (string, error)","Funname":"loader.GetThumbnailDest","Returntype":"(string, error)","Args":"uri string, width, height int"},{"Uniquefunname":"func GetTmpImage() string","Funname":"loader.GetTmpImage","Returntype":"string","Args":""},{"Uniquefunname":"func IsStrInList(item string, items []string) bool","Funname":"loader.IsStrInList","Returntype":"bool","Args":"item string, items []string"},{"Uniquefunname":"func (m *Manager) Add(ty string, handler HandleType) error","Funname":"loader.Manager.Add","Returntype":"error","Args":"ty string, handler HandleType"},{"Uniquefunname":"func (m *Manager) Delete(ty string)","Funname":"loader.Manager.Delete","Returntype":"","Args":"ty string"},{"Uniquefunname":"func (m *Manager) Get(ty string) HandleType","Funname":"loader.Manager.Get","Returntype":"HandleType","Args":"ty string"},{"Uniquefunname":"func Register(ty string, handler HandleType)","Funname":"loader.Register","Returntype":"","Args":"ty string, handler HandleType"},{"Uniquefunname":"func ScaleImage(src, dest string, width, height int) error","Funname":"loader.ScaleImage","Returntype":"error","Args":"src, dest string, width, height int"},{"Uniquefunname":"func ThumbnailImage(src, dest string, width, height int) error","Funname":"loader.ThumbnailImage","Returntype":"error","Args":"src, dest string, width, height int"},{"Uniquefunname":"func getFileModTime(file string) string","Funname":"loader.getFileModTime","Returntype":"string","Args":"file string"}],"Records":[{"Name":"struct:loader.Manager","Fields":["loader.Manager.handlers map[string]HandleType","loader.Manager.locker *sync.RWMutex"]},{"Name":"const:loader","Fields":["loader.SizeFlagLarge","loader.SizeFlagNormal","loader.SizeFlagSmall","loader.thumbVersion"]},{"Name":"var:loader","Fields":["loader.getManager","loader.mInitializer"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/pdf/pdf.go","Functions":[{"Uniquefunname":"func GenThumbnail(uri string, width, height int, force bool) (string, error)","Funname":"GenThumbnail","Returntype":"(string, error)","Args":"uri string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func genPDFThumbnail(uri, bg string, width, height int, force bool) (string, error)","Funname":"genPDFThumbnail","Returntype":"(string, error)","Args":"uri, bg string, width, height int, force bool"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func GenThumbnail(uri string, width, height int, force bool) (string, error)","Funname":"pdf.GenThumbnail","Returntype":"(string, error)","Args":"uri string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"pdf.SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func genPDFThumbnail(uri, bg string, width, height int, force bool) (string, error)","Funname":"pdf.genPDFThumbnail","Returntype":"(string, error)","Args":"uri, bg string, width, height int, force bool"},{"Uniquefunname":"func init()","Funname":"pdf.init","Returntype":"","Args":""}],"Records":[{"Name":"const:pdf","Fields":["pdf.PDFTypePDF"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/pdf/wrapper.go","Functions":[{"Uniquefunname":"func doGenThumbnail(uri, dest string, width, height int) (string, error)","Funname":"doGenThumbnail","Returntype":"(string, error)","Args":"uri, dest string, width, height int"},{"Uniquefunname":"func doGenThumbnail(uri, dest string, width, height int) (string, error)","Funname":"pdf.doGenThumbnail","Returntype":"(string, error)","Args":"uri, dest string, width, height int"}],"Records":null}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/text/text.go","Functions":[{"Uniquefunname":"func GenThumbnail(src string, width, height int, force bool) (string, error)","Funname":"GenThumbnail","Returntype":"(string, error)","Args":"src string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func genTextThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"genTextThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func GenThumbnail(src string, width, height int, force bool) (string, error)","Funname":"text.GenThumbnail","Returntype":"(string, error)","Args":"src string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"text.SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func genTextThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"text.genTextThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func init()","Funname":"text.init","Returntype":"","Args":""}],"Records":[{"Name":"const:text","Fields":["text.TextTypeC","text.TextTypeCpp","text.TextTypeGo","text.TextTypeText"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/text/wrapper.go","Functions":[{"Uniquefunname":"func doGenThumbnail(src, dest string, width, height int) (string, error)","Funname":"doGenThumbnail","Returntype":"(string, error)","Args":"src, dest string, width, height int"},{"Uniquefunname":"func freeCStrv(strv []*C.char)","Funname":"freeCStrv","Returntype":"","Args":"strv []*C.char"},{"Uniquefunname":"func getThumbInfo(width, height int) *thumbInfo","Funname":"getThumbInfo","Returntype":"*thumbInfo","Args":"width, height int"},{"Uniquefunname":"func readFile(file string, info *thumbInfo) ([]*C.char, error)","Funname":"readFile","Returntype":"([]*C.char, error)","Args":"file string, info *thumbInfo"},{"Uniquefunname":"func strvToCStrv(strv []string, bytesPerLine int) []*C.char","Funname":"strvToCStrv","Returntype":"[]*C.char","Args":"strv []string, bytesPerLine int"},{"Uniquefunname":"func doGenThumbnail(src, dest string, width, height int) (string, error)","Funname":"text.doGenThumbnail","Returntype":"(string, error)","Args":"src, dest string, width, height int"},{"Uniquefunname":"func freeCStrv(strv []*C.char)","Funname":"text.freeCStrv","Returntype":"","Args":"strv []*C.char"},{"Uniquefunname":"func getThumbInfo(width, height int) *thumbInfo","Funname":"text.getThumbInfo","Returntype":"*thumbInfo","Args":"width, height int"},{"Uniquefunname":"func readFile(file string, info *thumbInfo) ([]*C.char, error)","Funname":"text.readFile","Returntype":"([]*C.char, error)","Args":"file string, info *thumbInfo"},{"Uniquefunname":"func strvToCStrv(strv []string, bytesPerLine int) []*C.char","Funname":"text.strvToCStrv","Returntype":"[]*C.char","Args":"strv []string, bytesPerLine int"}],"Records":[{"Name":"const:text","Fields":["text.defaultDPI","text.defaultScale"]},{"Name":"struct:text.thumbInfo","Fields":["text.thumbInfo.canvasHeight int","text.thumbInfo.canvasWidth int","text.thumbInfo.fontsize int","text.thumbInfo.height int","text.thumbInfo.pixelsize int","text.thumbInfo.width int","text.thumbInfo.xborder int","text.thumbInfo.yborder int"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/userenv/userenv.go","Functions":[{"Uniquefunname":"func DefaultFile() string","Funname":"DefaultFile","Returntype":"string","Args":""},{"Uniquefunname":"func Delete(key string) error","Funname":"Delete","Returntype":"error","Args":"key string"},{"Uniquefunname":"func DeleteFromFile(filename, key string) error","Funname":"DeleteFromFile","Returntype":"error","Args":"filename, key string"},{"Uniquefunname":"func Get(key string) (string, error)","Funname":"Get","Returntype":"(string, error)","Args":"key string"},{"Uniquefunname":"func GetFromFile(filename, key string) (string, error)","Funname":"GetFromFile","Returntype":"(string, error)","Args":"filename, key string"},{"Uniquefunname":"func Load() (map[string]string, error)","Funname":"Load","Returntype":"(map[string]string, error)","Args":""},{"Uniquefunname":"func LoadFromFile(filename string) (map[string]string, error)","Funname":"LoadFromFile","Returntype":"(map[string]string, error)","Args":"filename string"},{"Uniquefunname":"func Modify(fn func(map[string]string)) error","Funname":"Modify","Returntype":"error","Args":"fn func(map[string]string)"},{"Uniquefunname":"func ModifyAndSaveToFile(filename string, fn func(map[string]string)) error","Funname":"ModifyAndSaveToFile","Returntype":"error","Args":"filename string, fn func(map[string]string)"},{"Uniquefunname":"func Save(m map[string]string) error","Funname":"Save","Returntype":"error","Args":"m map[string]string"},{"Uniquefunname":"func SaveToFile(filename string, m map[string]string) error","Funname":"SaveToFile","Returntype":"error","Args":"filename string, m map[string]string"},{"Uniquefunname":"func Set(key, value string) error","Funname":"Set","Returntype":"error","Args":"key, value string"},{"Uniquefunname":"func SetAndSaveToFile(filename, key, value string) error","Funname":"SetAndSaveToFile","Returntype":"error","Args":"filename, key, value string"},{"Uniquefunname":"func bashQuote(str string) (string, error)","Funname":"bashQuote","Returntype":"(string, error)","Args":"str string"},{"Uniquefunname":"func bashUnquote(str string) (string, error)","Funname":"bashUnquote","Returntype":"(string, error)","Args":"str string"},{"Uniquefunname":"func isSpecialChar(char byte) bool","Funname":"isSpecialChar","Returntype":"bool","Args":"char byte"},{"Uniquefunname":"func DefaultFile() string","Funname":"userenv.DefaultFile","Returntype":"string","Args":""},{"Uniquefunname":"func Delete(key string) error","Funname":"userenv.Delete","Returntype":"error","Args":"key string"},{"Uniquefunname":"func DeleteFromFile(filename, key string) error","Funname":"userenv.DeleteFromFile","Returntype":"error","Args":"filename, key string"},{"Uniquefunname":"func Get(key string) (string, error)","Funname":"userenv.Get","Returntype":"(string, error)","Args":"key string"},{"Uniquefunname":"func GetFromFile(filename, key string) (string, error)","Funname":"userenv.GetFromFile","Returntype":"(string, error)","Args":"filename, key string"},{"Uniquefunname":"func Load() (map[string]string, error)","Funname":"userenv.Load","Returntype":"(map[string]string, error)","Args":""},{"Uniquefunname":"func LoadFromFile(filename string) (map[string]string, error)","Funname":"userenv.LoadFromFile","Returntype":"(map[string]string, error)","Args":"filename string"},{"Uniquefunname":"func Modify(fn func(map[string]string)) error","Funname":"userenv.Modify","Returntype":"error","Args":"fn func(map[string]string)"},{"Uniquefunname":"func ModifyAndSaveToFile(filename string, fn func(map[string]string)) error","Funname":"userenv.ModifyAndSaveToFile","Returntype":"error","Args":"filename string, fn func(map[string]string)"},{"Uniquefunname":"func Save(m map[string]string) error","Funname":"userenv.Save","Returntype":"error","Args":"m map[string]string"},{"Uniquefunname":"func SaveToFile(filename string, m map[string]string) error","Funname":"userenv.SaveToFile","Returntype":"error","Args":"filename string, m map[string]string"},{"Uniquefunname":"func Set(key, value string) error","Funname":"userenv.Set","Returntype":"error","Args":"key, value string"},{"Uniquefunname":"func SetAndSaveToFile(filename, key, value string) error","Funname":"userenv.SetAndSaveToFile","Returntype":"error","Args":"filename, key, value string"},{"Uniquefunname":"func bashQuote(str string) (string, error)","Funname":"userenv.bashQuote","Returntype":"(string, error)","Args":"str string"},{"Uniquefunname":"func bashUnquote(str string) (string, error)","Funname":"userenv.bashUnquote","Returntype":"(string, error)","Args":"str string"},{"Uniquefunname":"func isSpecialChar(char byte) bool","Funname":"userenv.isSpecialChar","Returntype":"bool","Args":"char byte"},{"Uniquefunname":"func writeTo(w io.Writer, m map[string]string) error","Funname":"userenv.writeTo","Returntype":"error","Args":"w io.Writer, m map[string]string"},{"Uniquefunname":"func writeTo(w io.Writer, m map[string]string) error","Funname":"writeTo","Returntype":"error","Args":"w io.Writer, m map[string]string"}],"Records":[{"Name":"var:userenv","Fields":["userenv.defaultFile","userenv.regLine"]}]}
{"Filepath":"debian/dde-api-dev/usr/share/gocode/src/pkg.deepin.io/dde/api/userenv/userenv_test.go","Functions":[{"Uniquefunname":"func TestBashQuote(t *testing.T)","Funname":"TestBashQuote","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestBashUnquote(t *testing.T)","Funname":"TestBashUnquote","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestLoadFromFile(t *testing.T)","Funname":"TestLoadFromFile","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestBashQuote(t *testing.T)","Funname":"userenv.TestBashQuote","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestBashUnquote(t *testing.T)","Funname":"userenv.TestBashUnquote","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestLoadFromFile(t *testing.T)","Funname":"userenv.TestLoadFromFile","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/drandr/crtc.go","Functions":[{"Uniquefunname":"func getReflects(origin uint16) []uint16","Funname":"drandr.getReflects","Returntype":"[]uint16","Args":"origin uint16"},{"Uniquefunname":"func getRotations(origin uint16) []uint16","Funname":"drandr.getRotations","Returntype":"[]uint16","Args":"origin uint16"},{"Uniquefunname":"func parseCrtcRotation(origin uint16) (rotation, reflect uint16)","Funname":"drandr.parseCrtcRotation","Returntype":"(rotation, reflect uint16)","Args":"origin uint16"},{"Uniquefunname":"func toCrtcInfo(conn *x.Conn, crtc randr.Crtc) CrtcInfo","Funname":"drandr.toCrtcInfo","Returntype":"CrtcInfo","Args":"conn *x.Conn, crtc randr.Crtc"},{"Uniquefunname":"func getReflects(origin uint16) []uint16","Funname":"getReflects","Returntype":"[]uint16","Args":"origin uint16"},{"Uniquefunname":"func getRotations(origin uint16) []uint16","Funname":"getRotations","Returntype":"[]uint16","Args":"origin uint16"},{"Uniquefunname":"func parseCrtcRotation(origin uint16) (rotation, reflect uint16)","Funname":"parseCrtcRotation","Returntype":"(rotation, reflect uint16)","Args":"origin uint16"},{"Uniquefunname":"func toCrtcInfo(conn *x.Conn, crtc randr.Crtc) CrtcInfo","Funname":"toCrtcInfo","Returntype":"CrtcInfo","Args":"conn *x.Conn, crtc randr.Crtc"}],"Records":[{"Name":"struct:drandr.CrtcInfo","Fields":["drandr.CrtcInfo.Height uint16","drandr.CrtcInfo.Id uint32","drandr.CrtcInfo.Mode uint32","drandr.CrtcInfo.Reflect uint16","drandr.CrtcInfo.Reflects []uint16","drandr.CrtcInfo.Rotation uint16","drandr.CrtcInfo.Rotations []uint16","drandr.CrtcInfo.Width uint16","drandr.CrtcInfo.X int16","drandr.CrtcInfo.Y int16"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/drandr/drandr.go","Functions":[{"Uniquefunname":"func (info *ScreenInfo) GetPrimary() (*OutputInfo, error)","Funname":"GetPrimary","Returntype":"(*OutputInfo, error)","Args":""},{"Uniquefunname":"func GetScreenInfo(conn *x.Conn) (*ScreenInfo, error)","Funname":"GetScreenInfo","Returntype":"(*ScreenInfo, error)","Args":"conn *x.Conn"},{"Uniquefunname":"func (info *ScreenInfo) GetScreenSize() (uint16, uint16)","Funname":"GetScreenSize","Returntype":"(uint16, uint16)","Args":""},{"Uniquefunname":"func GetScreenInfo(conn *x.Conn) (*ScreenInfo, error)","Funname":"drandr.GetScreenInfo","Returntype":"(*ScreenInfo, error)","Args":"conn *x.Conn"},{"Uniquefunname":"func (info *ScreenInfo) GetPrimary() (*OutputInfo, error)","Funname":"drandr.ScreenInfo.GetPrimary","Returntype":"(*OutputInfo, error)","Args":""},{"Uniquefunname":"func (info *ScreenInfo) GetScreenSize() (uint16, uint16)","Funname":"drandr.ScreenInfo.GetScreenSize","Returntype":"(uint16, uint16)","Args":""}],"Records":[{"Name":"struct:drandr.ScreenInfo","Fields":["drandr.ScreenInfo.Modes ModeInfos","drandr.ScreenInfo.Outputs OutputInfos","drandr.ScreenInfo.conn *x.Conn","drandr.ScreenInfo.window x.Window"]},{"Name":"var:drandr","Fields":["drandr.infoLocker","drandr.lastConfigTimestamp"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/drandr/mode.go","Functions":[{"Uniquefunname":"func (info ModeInfo) Equal(v ModeInfo) bool","Funname":"Equal","Returntype":"bool","Args":"v ModeInfo"},{"Uniquefunname":"func (infos ModeInfos) Equal(list ModeInfos) bool","Funname":"Equal","Returntype":"bool","Args":"list ModeInfos"},{"Uniquefunname":"func (infos ModeInfos) FilterBySize() ModeInfos","Funname":"FilterBySize","Returntype":"ModeInfos","Args":""},{"Uniquefunname":"func FindCommonModes(infosGroup ...ModeInfos) ModeInfos","Funname":"FindCommonModes","Returntype":"ModeInfos","Args":"infosGroup ...ModeInfos"},{"Uniquefunname":"func (infos ModeInfos) HasRefreshRate(rate float64) bool","Funname":"HasRefreshRate","Returntype":"bool","Args":"rate float64"},{"Uniquefunname":"func (infos ModeInfos) Len() int","Funname":"Len","Returntype":"int","Args":""},{"Uniquefunname":"func (infos ModeInfos) Less(i, j int) bool","Funname":"Less","Returntype":"bool","Args":"i, j int"},{"Uniquefunname":"func (infos ModeInfos) Max() ModeInfo","Funname":"Max","Returntype":"ModeInfo","Args":""},{"Uniquefunname":"func (infos ModeInfos) Query(id uint32) ModeInfo","Funname":"Query","Returntype":"ModeInfo","Args":"id uint32"},{"Uniquefunname":"func (infos ModeInfos) QueryBySize(width, height uint16) ModeInfos","Funname":"QueryBySize","Returntype":"ModeInfos","Args":"width, height uint16"},{"Uniquefunname":"func (infos ModeInfos) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (infos ModeInfos) Swap(i, j int)","Funname":"Swap","Returntype":"","Args":"i, j int"},{"Uniquefunname":"func calcModeRate(info randr.ModeInfo) float64","Funname":"calcModeRate","Returntype":"float64","Args":"info randr.ModeInfo"},{"Uniquefunname":"func doFoundCommonModes(modes1, modes2 ModeInfos) ModeInfos","Funname":"doFoundCommonModes","Returntype":"ModeInfos","Args":"modes1, modes2 ModeInfos"},{"Uniquefunname":"func FindCommonModes(infosGroup ...ModeInfos) ModeInfos","Funname":"drandr.FindCommonModes","Returntype":"ModeInfos","Args":"infosGroup ...ModeInfos"},{"Uniquefunname":"func (info ModeInfo) Equal(v ModeInfo) bool","Funname":"drandr.ModeInfo.Equal","Returntype":"bool","Args":"v ModeInfo"},{"Uniquefunname":"func (infos ModeInfos) Equal(list ModeInfos) bool","Funname":"drandr.ModeInfos.Equal","Returntype":"bool","Args":"list ModeInfos"},{"Uniquefunname":"func (infos ModeInfos) FilterBySize() ModeInfos","Funname":"drandr.ModeInfos.FilterBySize","Returntype":"ModeInfos","Args":""},{"Uniquefunname":"func (infos ModeInfos) HasRefreshRate(rate float64) bool","Funname":"drandr.ModeInfos.HasRefreshRate","Returntype":"bool","Args":"rate float64"},{"Uniquefunname":"func (infos ModeInfos) Len() int","Funname":"drandr.ModeInfos.Len","Returntype":"int","Args":""},{"Uniquefunname":"func (infos ModeInfos) Less(i, j int) bool","Funname":"drandr.ModeInfos.Less","Returntype":"bool","Args":"i, j int"},{"Uniquefunname":"func (infos ModeInfos) Max() ModeInfo","Funname":"drandr.ModeInfos.Max","Returntype":"ModeInfo","Args":""},{"Uniquefunname":"func (infos ModeInfos) Query(id uint32) ModeInfo","Funname":"drandr.ModeInfos.Query","Returntype":"ModeInfo","Args":"id uint32"},{"Uniquefunname":"func (infos ModeInfos) QueryBySize(width, height uint16) ModeInfos","Funname":"drandr.ModeInfos.QueryBySize","Returntype":"ModeInfos","Args":"width, height uint16"},{"Uniquefunname":"func (infos ModeInfos) String() string","Funname":"drandr.ModeInfos.String","Returntype":"string","Args":""},{"Uniquefunname":"func (infos ModeInfos) Swap(i, j int)","Funname":"drandr.ModeInfos.Swap","Returntype":"","Args":"i, j int"},{"Uniquefunname":"func calcModeRate(info randr.ModeInfo) float64","Funname":"drandr.calcModeRate","Returntype":"float64","Args":"info randr.ModeInfo"},{"Uniquefunname":"func doFoundCommonModes(modes1, modes2 ModeInfos) ModeInfos","Funname":"drandr.doFoundCommonModes","Returntype":"ModeInfos","Args":"modes1, modes2 ModeInfos"},{"Uniquefunname":"func toModeInfo(info randr.ModeInfo) ModeInfo","Funname":"drandr.toModeInfo","Returntype":"ModeInfo","Args":"info randr.ModeInfo"},{"Uniquefunname":"func toModeInfo(info randr.ModeInfo) ModeInfo","Funname":"toModeInfo","Returntype":"ModeInfo","Args":"info randr.ModeInfo"}],"Records":[{"Name":"struct:drandr.ModeInfo","Fields":["drandr.ModeInfo.Height uint16","drandr.ModeInfo.Id uint32","drandr.ModeInfo.Rate float64","drandr.ModeInfo.Width uint16"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/drandr/mode_test.go","Functions":[{"Uniquefunname":"func TestCommonModes(t *testing.T)","Funname":"TestCommonModes","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestCommonModes(t *testing.T)","Funname":"drandr.TestCommonModes","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/drandr/output.go","Functions":[{"Uniquefunname":"func (infos OutputInfos) ListConnectionOutputs() OutputInfos","Funname":"ListConnectionOutputs","Returntype":"OutputInfos","Args":""},{"Uniquefunname":"func (infos OutputInfos) ListNames() []string","Funname":"ListNames","Returntype":"[]string","Args":""},{"Uniquefunname":"func (infos OutputInfos) Query(id uint32) OutputInfo","Funname":"Query","Returntype":"OutputInfo","Args":"id uint32"},{"Uniquefunname":"func (infos OutputInfos) QueryByName(name string) OutputInfo","Funname":"QueryByName","Returntype":"OutputInfo","Args":"name string"},{"Uniquefunname":"func crtcsToRandrIdList(crtcs []randr.Crtc) randrIdList","Funname":"crtcsToRandrIdList","Returntype":"randrIdList","Args":"crtcs []randr.Crtc"},{"Uniquefunname":"func (infos OutputInfos) ListConnectionOutputs() OutputInfos","Funname":"drandr.OutputInfos.ListConnectionOutputs","Returntype":"OutputInfos","Args":""},{"Uniquefunname":"func (infos OutputInfos) ListNames() []string","Funname":"drandr.OutputInfos.ListNames","Returntype":"[]string","Args":""},{"Uniquefunname":"func (infos OutputInfos) Query(id uint32) OutputInfo","Funname":"drandr.OutputInfos.Query","Returntype":"OutputInfo","Args":"id uint32"},{"Uniquefunname":"func (infos OutputInfos) QueryByName(name string) OutputInfo","Funname":"drandr.OutputInfos.QueryByName","Returntype":"OutputInfo","Args":"name string"},{"Uniquefunname":"func (infos OutputInfos) query(key, value string) OutputInfo","Funname":"drandr.OutputInfos.query","Returntype":"OutputInfo","Args":"key, value string"},{"Uniquefunname":"func crtcsToRandrIdList(crtcs []randr.Crtc) randrIdList","Funname":"drandr.crtcsToRandrIdList","Returntype":"randrIdList","Args":"crtcs []randr.Crtc"},{"Uniquefunname":"func getOutputEDID(conn *x.Conn, output randr.Output) ([]byte, error)","Funname":"drandr.getOutputEDID","Returntype":"([]byte, error)","Args":"conn *x.Conn, output randr.Output"},{"Uniquefunname":"func getOutputPreferredModes(modes randrIdList, nPreferred uint16) randrIdList","Funname":"drandr.getOutputPreferredModes","Returntype":"randrIdList","Args":"modes randrIdList, nPreferred uint16"},{"Uniquefunname":"func modesToRandrIdList(modes []randr.Mode) randrIdList","Funname":"drandr.modesToRandrIdList","Returntype":"randrIdList","Args":"modes []randr.Mode"},{"Uniquefunname":"func outputsToRandrIdList(outputs []randr.Output) randrIdList","Funname":"drandr.outputsToRandrIdList","Returntype":"randrIdList","Args":"outputs []randr.Output"},{"Uniquefunname":"func toOutputInfo(conn *x.Conn, output randr.Output) OutputInfo","Funname":"drandr.toOutputInfo","Returntype":"OutputInfo","Args":"conn *x.Conn, output randr.Output"},{"Uniquefunname":"func getOutputEDID(conn *x.Conn, output randr.Output) ([]byte, error)","Funname":"getOutputEDID","Returntype":"([]byte, error)","Args":"conn *x.Conn, output randr.Output"},{"Uniquefunname":"func getOutputPreferredModes(modes randrIdList, nPreferred uint16) randrIdList","Funname":"getOutputPreferredModes","Returntype":"randrIdList","Args":"modes randrIdList, nPreferred uint16"},{"Uniquefunname":"func modesToRandrIdList(modes []randr.Mode) randrIdList","Funname":"modesToRandrIdList","Returntype":"randrIdList","Args":"modes []randr.Mode"},{"Uniquefunname":"func outputsToRandrIdList(outputs []randr.Output) randrIdList","Funname":"outputsToRandrIdList","Returntype":"randrIdList","Args":"outputs []randr.Output"},{"Uniquefunname":"func (infos OutputInfos) query(key, value string) OutputInfo","Funname":"query","Returntype":"OutputInfo","Args":"key, value string"},{"Uniquefunname":"func toOutputInfo(conn *x.Conn, output randr.Output) OutputInfo","Funname":"toOutputInfo","Returntype":"OutputInfo","Args":"conn *x.Conn, output randr.Output"}],"Records":[{"Name":"struct:drandr.OutputInfo","Fields":["drandr.OutputInfo.Clones randrIdList","drandr.OutputInfo.Connection bool","drandr.OutputInfo.Crtc CrtcInfo","drandr.OutputInfo.Crtcs randrIdList","drandr.OutputInfo.EDID []byte","drandr.OutputInfo.Id uint32","drandr.OutputInfo.MmHeight uint32","drandr.OutputInfo.MmWidth uint32","drandr.OutputInfo.Modes randrIdList","drandr.OutputInfo.Name string","drandr.OutputInfo.PreferredModes randrIdList","drandr.OutputInfo.Timestamp x.Timestamp"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/dxinput/keyboard.go","Functions":[{"Uniquefunname":"func SetKeyboardRepeat(enabled bool, delay, interval uint32) error","Funname":"SetKeyboardRepeat","Returntype":"error","Args":"enabled bool, delay, interval uint32"},{"Uniquefunname":"func SetKeyboardRepeat(enabled bool, delay, interval uint32) error","Funname":"dxinput.SetKeyboardRepeat","Returntype":"error","Args":"enabled bool, delay, interval uint32"}],"Records":null}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/dxinput/libinput.go","Functions":[{"Uniquefunname":"func libinputCanScroll(id int32) (bool, bool, bool)","Funname":"dxinput.libinputCanScroll","Returntype":"(bool, bool, bool)","Args":"id int32"},{"Uniquefunname":"func libinputEnableScrollButton(id int32, enabled bool) error","Funname":"dxinput.libinputEnableScrollButton","Returntype":"error","Args":"id int32, enabled bool"},{"Uniquefunname":"func libinputEnableScrollEdge(id int32, enabled bool) error","Funname":"dxinput.libinputEnableScrollEdge","Returntype":"error","Args":"id int32, enabled bool"},{"Uniquefunname":"func libinputEnableScrollTwoFinger(id int32, enabled bool) error","Funname":"dxinput.libinputEnableScrollTwoFinger","Returntype":"error","Args":"id int32, enabled bool"},{"Uniquefunname":"func libinputGetAccel(id int32) (float32, error)","Funname":"dxinput.libinputGetAccel","Returntype":"(float32, error)","Args":"id int32"},{"Uniquefunname":"func libinputGetAccelProfile(id int32) (bool, bool)","Funname":"dxinput.libinputGetAccelProfile","Returntype":"(bool, bool)","Args":"id int32"},{"Uniquefunname":"func libinputGetScrollButton(id int32) (int32, error)","Funname":"dxinput.libinputGetScrollButton","Returntype":"(int32, error)","Args":"id int32"},{"Uniquefunname":"func libinputInt8PropCan(id int32, prop string) bool","Funname":"dxinput.libinputInt8PropCan","Returntype":"bool","Args":"id int32, prop string"},{"Uniquefunname":"func libinputInt8PropSet(id int32, prop string, enabled bool) error","Funname":"dxinput.libinputInt8PropSet","Returntype":"error","Args":"id int32, prop string, enabled bool"},{"Uniquefunname":"func libinputIsBothAccelProfileAvaliable(id int32) bool","Funname":"dxinput.libinputIsBothAccelProfileAvaliable","Returntype":"bool","Args":"id int32"},{"Uniquefunname":"func libinputSetAccel(id int32, accel float32) error","Funname":"dxinput.libinputSetAccel","Returntype":"error","Args":"id int32, accel float32"},{"Uniquefunname":"func libinputSetAccelProfile(id int32, useAdaptiveProfile bool) error","Funname":"dxinput.libinputSetAccelProfile","Returntype":"error","Args":"id int32, useAdaptiveProfile bool"},{"Uniquefunname":"func libinputSetScrollButton(id, btn int32) error","Funname":"dxinput.libinputSetScrollButton","Returntype":"error","Args":"id, btn int32"},{"Uniquefunname":"func libinputCanScroll(id int32) (bool, bool, bool)","Funname":"libinputCanScroll","Returntype":"(bool, bool, bool)","Args":"id int32"},{"Uniquefunname":"func libinputEnableScrollButton(id int32, enabled bool) error","Funname":"libinputEnableScrollButton","Returntype":"error","Args":"id int32, enabled bool"},{"Uniquefunname":"func libinputEnableScrollEdge(id int32, enabled bool) error","Funname":"libinputEnableScrollEdge","Returntype":"error","Args":"id int32, enabled bool"},{"Uniquefunname":"func libinputEnableScrollTwoFinger(id int32, enabled bool) error","Funname":"libinputEnableScrollTwoFinger","Returntype":"error","Args":"id int32, enabled bool"},{"Uniquefunname":"func libinputGetAccel(id int32) (float32, error)","Funname":"libinputGetAccel","Returntype":"(float32, error)","Args":"id int32"},{"Uniquefunname":"func libinputGetAccelProfile(id int32) (bool, bool)","Funname":"libinputGetAccelProfile","Returntype":"(bool, bool)","Args":"id int32"},{"Uniquefunname":"func libinputGetScrollButton(id int32) (int32, error)","Funname":"libinputGetScrollButton","Returntype":"(int32, error)","Args":"id int32"},{"Uniquefunname":"func libinputInt8PropCan(id int32, prop string) bool","Funname":"libinputInt8PropCan","Returntype":"bool","Args":"id int32, prop string"},{"Uniquefunname":"func libinputInt8PropSet(id int32, prop string, enabled bool) error","Funname":"libinputInt8PropSet","Returntype":"error","Args":"id int32, prop string, enabled bool"},{"Uniquefunname":"func libinputIsBothAccelProfileAvaliable(id int32) bool","Funname":"libinputIsBothAccelProfileAvaliable","Returntype":"bool","Args":"id int32"},{"Uniquefunname":"func libinputSetAccel(id int32, accel float32) error","Funname":"libinputSetAccel","Returntype":"error","Args":"id int32, accel float32"},{"Uniquefunname":"func libinputSetAccelProfile(id int32, useAdaptiveProfile bool) error","Funname":"libinputSetAccelProfile","Returntype":"error","Args":"id int32, useAdaptiveProfile bool"},{"Uniquefunname":"func libinputSetScrollButton(id, btn int32) error","Funname":"libinputSetScrollButton","Returntype":"error","Args":"id, btn int32"}],"Records":[{"Name":"const:dxinput","Fields":["dxinput.libinputPropAccelProfileAvaliable","dxinput.libinputPropAccelProfileEnabled","dxinput.libinputPropAccelSpeed","dxinput.libinputPropButtonScrollingButton","dxinput.libinputPropDisableWhileTyping","dxinput.libinputPropHorizScrollEnabled","dxinput.libinputPropLeftHandedEnabled","dxinput.libinputPropMiddleEmulationEnabled","dxinput.libinputPropNaturalEnabled","dxinput.libinputPropScrollMethodsAvailable","dxinput.libinputPropScrollMethodsEnabled","dxinput.libinputPropTapEnabled"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/dxinput/mouse.go","Functions":[{"Uniquefunname":"func (m *Mouse) CanChangeAccelProfile() bool","Funname":"CanChangeAccelProfile","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanLeftHanded() bool","Funname":"CanLeftHanded","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanMiddleButtonEmulation() bool","Funname":"CanMiddleButtonEmulation","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanNaturalScroll() bool","Funname":"CanNaturalScroll","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanWheelEmulation() bool","Funname":"CanWheelEmulation","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanWheelHorizNaturalScroll() bool","Funname":"CanWheelHorizNaturalScroll","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanWheelHorizScroll() bool","Funname":"CanWheelHorizScroll","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) Enable(enabled bool) error","Funname":"Enable","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableLeftHanded(enabled bool) error","Funname":"EnableLeftHanded","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableMiddleButtonEmulation(enabled bool) error","Funname":"EnableMiddleButtonEmulation","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableNaturalScroll(enabled bool) error","Funname":"EnableNaturalScroll","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableWheelEmulation(enabled bool) error","Funname":"EnableWheelEmulation","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableWheelHorizNaturalScroll(enabled bool) error","Funname":"EnableWheelHorizNaturalScroll","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableWheelHorizScroll(enabled bool) error","Funname":"EnableWheelHorizScroll","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) IsAdaptiveAccelProfileEnabled() bool","Funname":"IsAdaptiveAccelProfileEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) IsEnabled() bool","Funname":"IsEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) MiddleButtonEmulationTimeout() (int16, error)","Funname":"MiddleButtonEmulationTimeout","Returntype":"(int16, error)","Args":""},{"Uniquefunname":"func (m *Mouse) MotionAcceleration() (float32, error)","Funname":"MotionAcceleration","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func (m *Mouse) MotionScaling() (float32, error)","Funname":"MotionScaling","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func (m *Mouse) MotionThreshold() (float32, error)","Funname":"MotionThreshold","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func NewMouse(id int32) (*Mouse, error)","Funname":"NewMouse","Returntype":"(*Mouse, error)","Args":"id int32"},{"Uniquefunname":"func NewMouseFromDeviceInfo(dev *DeviceInfo) (*Mouse, error)","Funname":"NewMouseFromDeviceInfo","Returntype":"(*Mouse, error)","Args":"dev *DeviceInfo"},{"Uniquefunname":"func (m *Mouse) SetMiddleButtonEmulationTimeout(timeout int16) error","Funname":"SetMiddleButtonEmulationTimeout","Returntype":"error","Args":"timeout int16"},{"Uniquefunname":"func (m *Mouse) SetMotionAcceleration(accel float32) error","Funname":"SetMotionAcceleration","Returntype":"error","Args":"accel float32"},{"Uniquefunname":"func (m *Mouse) SetMotionScaling(scaling float32) error","Funname":"SetMotionScaling","Returntype":"error","Args":"scaling float32"},{"Uniquefunname":"func (m *Mouse) SetMotionThreshold(thres float32) error","Funname":"SetMotionThreshold","Returntype":"error","Args":"thres float32"},{"Uniquefunname":"func (m *Mouse) SetRotation(direction uint8) error","Funname":"SetRotation","Returntype":"error","Args":"direction uint8"},{"Uniquefunname":"func (m *Mouse) SetUseAdaptiveAccelProfile(useAdaptiveProfile bool) error","Funname":"SetUseAdaptiveAccelProfile","Returntype":"error","Args":"useAdaptiveProfile bool"},{"Uniquefunname":"func (m *Mouse) SetWheelEmulationButton(btnNum int8) error","Funname":"SetWheelEmulationButton","Returntype":"error","Args":"btnNum int8"},{"Uniquefunname":"func (m *Mouse) SetWheelEmulationTimeout(timeout int16) error","Funname":"SetWheelEmulationTimeout","Returntype":"error","Args":"timeout int16"},{"Uniquefunname":"func (m *Mouse) WheelEmulationButton() (int8, error)","Funname":"WheelEmulationButton","Returntype":"(int8, error)","Args":""},{"Uniquefunname":"func (m *Mouse) WheelEmulationTimeout() (int16, error)","Funname":"WheelEmulationTimeout","Returntype":"(int16, error)","Args":""},{"Uniquefunname":"func (m *Mouse) canWheelHorizScroll(natural bool) bool","Funname":"canWheelHorizScroll","Returntype":"bool","Args":"natural bool"},{"Uniquefunname":"func (m *Mouse) CanChangeAccelProfile() bool","Funname":"dxinput.Mouse.CanChangeAccelProfile","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanLeftHanded() bool","Funname":"dxinput.Mouse.CanLeftHanded","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanMiddleButtonEmulation() bool","Funname":"dxinput.Mouse.CanMiddleButtonEmulation","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanNaturalScroll() bool","Funname":"dxinput.Mouse.CanNaturalScroll","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanWheelEmulation() bool","Funname":"dxinput.Mouse.CanWheelEmulation","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanWheelHorizNaturalScroll() bool","Funname":"dxinput.Mouse.CanWheelHorizNaturalScroll","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanWheelHorizScroll() bool","Funname":"dxinput.Mouse.CanWheelHorizScroll","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) Enable(enabled bool) error","Funname":"dxinput.Mouse.Enable","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableLeftHanded(enabled bool) error","Funname":"dxinput.Mouse.EnableLeftHanded","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableMiddleButtonEmulation(enabled bool) error","Funname":"dxinput.Mouse.EnableMiddleButtonEmulation","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableNaturalScroll(enabled bool) error","Funname":"dxinput.Mouse.EnableNaturalScroll","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableWheelEmulation(enabled bool) error","Funname":"dxinput.Mouse.EnableWheelEmulation","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableWheelHorizNaturalScroll(enabled bool) error","Funname":"dxinput.Mouse.EnableWheelHorizNaturalScroll","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableWheelHorizScroll(enabled bool) error","Funname":"dxinput.Mouse.EnableWheelHorizScroll","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) IsAdaptiveAccelProfileEnabled() bool","Funname":"dxinput.Mouse.IsAdaptiveAccelProfileEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) IsEnabled() bool","Funname":"dxinput.Mouse.IsEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) MiddleButtonEmulationTimeout() (int16, error)","Funname":"dxinput.Mouse.MiddleButtonEmulationTimeout","Returntype":"(int16, error)","Args":""},{"Uniquefunname":"func (m *Mouse) MotionAcceleration() (float32, error)","Funname":"dxinput.Mouse.MotionAcceleration","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func (m *Mouse) MotionScaling() (float32, error)","Funname":"dxinput.Mouse.MotionScaling","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func (m *Mouse) MotionThreshold() (float32, error)","Funname":"dxinput.Mouse.MotionThreshold","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func (m *Mouse) SetMiddleButtonEmulationTimeout(timeout int16) error","Funname":"dxinput.Mouse.SetMiddleButtonEmulationTimeout","Returntype":"error","Args":"timeout int16"},{"Uniquefunname":"func (m *Mouse) SetMotionAcceleration(accel float32) error","Funname":"dxinput.Mouse.SetMotionAcceleration","Returntype":"error","Args":"accel float32"},{"Uniquefunname":"func (m *Mouse) SetMotionScaling(scaling float32) error","Funname":"dxinput.Mouse.SetMotionScaling","Returntype":"error","Args":"scaling float32"},{"Uniquefunname":"func (m *Mouse) SetMotionThreshold(thres float32) error","Funname":"dxinput.Mouse.SetMotionThreshold","Returntype":"error","Args":"thres float32"},{"Uniquefunname":"func (m *Mouse) SetRotation(direction uint8) error","Funname":"dxinput.Mouse.SetRotation","Returntype":"error","Args":"direction uint8"},{"Uniquefunname":"func (m *Mouse) SetUseAdaptiveAccelProfile(useAdaptiveProfile bool) error","Funname":"dxinput.Mouse.SetUseAdaptiveAccelProfile","Returntype":"error","Args":"useAdaptiveProfile bool"},{"Uniquefunname":"func (m *Mouse) SetWheelEmulationButton(btnNum int8) error","Funname":"dxinput.Mouse.SetWheelEmulationButton","Returntype":"error","Args":"btnNum int8"},{"Uniquefunname":"func (m *Mouse) SetWheelEmulationTimeout(timeout int16) error","Funname":"dxinput.Mouse.SetWheelEmulationTimeout","Returntype":"error","Args":"timeout int16"},{"Uniquefunname":"func (m *Mouse) WheelEmulationButton() (int8, error)","Funname":"dxinput.Mouse.WheelEmulationButton","Returntype":"(int8, error)","Args":""},{"Uniquefunname":"func (m *Mouse) WheelEmulationTimeout() (int16, error)","Funname":"dxinput.Mouse.WheelEmulationTimeout","Returntype":"(int16, error)","Args":""},{"Uniquefunname":"func (m *Mouse) canWheelHorizScroll(natural bool) bool","Funname":"dxinput.Mouse.canWheelHorizScroll","Returntype":"bool","Args":"natural bool"},{"Uniquefunname":"func (m *Mouse) enableWheelHorizScroll(enabled, natural bool) error","Funname":"dxinput.Mouse.enableWheelHorizScroll","Returntype":"error","Args":"enabled, natural bool"},{"Uniquefunname":"func (m *Mouse) wheelEmulationAxes() ([]int8, error)","Funname":"dxinput.Mouse.wheelEmulationAxes","Returntype":"([]int8, error)","Args":""},{"Uniquefunname":"func NewMouse(id int32) (*Mouse, error)","Funname":"dxinput.NewMouse","Returntype":"(*Mouse, error)","Args":"id int32"},{"Uniquefunname":"func NewMouseFromDeviceInfo(dev *DeviceInfo) (*Mouse, error)","Funname":"dxinput.NewMouseFromDeviceInfo","Returntype":"(*Mouse, error)","Args":"dev *DeviceInfo"},{"Uniquefunname":"func isInt8ArrayEqual(a1, a2 []int8) bool","Funname":"dxinput.isInt8ArrayEqual","Returntype":"bool","Args":"a1, a2 []int8"},{"Uniquefunname":"func isTrackPoint(info *DeviceInfo) bool","Funname":"dxinput.isTrackPoint","Returntype":"bool","Args":"info *DeviceInfo"},{"Uniquefunname":"func (m *Mouse) enableWheelHorizScroll(enabled, natural bool) error","Funname":"enableWheelHorizScroll","Returntype":"error","Args":"enabled, natural bool"},{"Uniquefunname":"func isInt8ArrayEqual(a1, a2 []int8) bool","Funname":"isInt8ArrayEqual","Returntype":"bool","Args":"a1, a2 []int8"},{"Uniquefunname":"func isTrackPoint(info *DeviceInfo) bool","Funname":"isTrackPoint","Returntype":"bool","Args":"info *DeviceInfo"},{"Uniquefunname":"func (m *Mouse) wheelEmulationAxes() ([]int8, error)","Funname":"wheelEmulationAxes","Returntype":"([]int8, error)","Args":""}],"Records":[{"Name":"struct:dxinput.Mouse","Fields":["dxinput.Mouse.Id int32","dxinput.Mouse.Name string","dxinput.Mouse.TrackPoint bool","dxinput.Mouse.isLibinputUsed bool"]},{"Name":"const:dxinput","Fields":["dxinput.propEvdevScrollDistance","dxinput.propMidBtnEmulation","dxinput.propMidBtnEmulationTimeout","dxinput.propWheelEmulation","dxinput.propWheelEmulationAxes","dxinput.propWheelEmulationButton","dxinput.propWheelEmulationTimeout"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/dxinput/touchpad.go","Functions":[{"Uniquefunname":"func (tpad *Touchpad) CanDisableWhileTyping() bool","Funname":"CanDisableWhileTyping","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanEdgeScroll() bool","Funname":"CanEdgeScroll","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanLeftHanded() bool","Funname":"CanLeftHanded","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanNaturalScroll() bool","Funname":"CanNaturalScroll","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanPalmDetect() bool","Funname":"CanPalmDetect","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanTapToClick() bool","Funname":"CanTapToClick","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanTwoFingerScroll() (bool, bool)","Funname":"CanTwoFingerScroll","Returntype":"(bool, bool)","Args":""},{"Uniquefunname":"func (tpad *Touchpad) Enable(enabled bool) error","Funname":"Enable","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableDisableWhileTyping(enabled bool) error","Funname":"EnableDisableWhileTyping","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableEdgeScroll(enabled bool) error","Funname":"EnableEdgeScroll","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableLeftHanded(enabled bool) error","Funname":"EnableLeftHanded","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableMiddleButtonEmulation(enabled bool) error","Funname":"EnableMiddleButtonEmulation","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableNaturalScroll(enabled bool) error","Funname":"EnableNaturalScroll","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnablePalmDetect(enabled bool) error","Funname":"EnablePalmDetect","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableTapToClick(enabled bool) error","Funname":"EnableTapToClick","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableTwoFingerScroll(vert, horiz bool) error","Funname":"EnableTwoFingerScroll","Returntype":"error","Args":"vert, horiz bool"},{"Uniquefunname":"func (tpad *Touchpad) GetPalmDimensions() (int32, int32, error)","Funname":"GetPalmDimensions","Returntype":"(int32, int32, error)","Args":""},{"Uniquefunname":"func (tpad *Touchpad) IsEnabled() bool","Funname":"IsEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) IsMiddleButtonEnulationEnabled() bool","Funname":"IsMiddleButtonEnulationEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) MotionAcceleration() (float32, error)","Funname":"MotionAcceleration","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func (tpad *Touchpad) MotionScaling() (float32, error)","Funname":"MotionScaling","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func (tpad *Touchpad) MotionThreshold() (float32, error)","Funname":"MotionThreshold","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func NewTouchpad(id int32) (*Touchpad, error)","Funname":"NewTouchpad","Returntype":"(*Touchpad, error)","Args":"id int32"},{"Uniquefunname":"func NewTouchpadFromDevInfo(dev *DeviceInfo) (*Touchpad, error)","Funname":"NewTouchpadFromDevInfo","Returntype":"(*Touchpad, error)","Args":"dev *DeviceInfo"},{"Uniquefunname":"func (tpad *Touchpad) ScrollDistance() (int32, int32)","Funname":"ScrollDistance","Returntype":"(int32, int32)","Args":""},{"Uniquefunname":"func (tpad *Touchpad) SetMotionAcceleration(accel float32) error","Funname":"SetMotionAcceleration","Returntype":"error","Args":"accel float32"},{"Uniquefunname":"func (tpad *Touchpad) SetMotionScaling(scaling float32) error","Funname":"SetMotionScaling","Returntype":"error","Args":"scaling float32"},{"Uniquefunname":"func (tpad *Touchpad) SetMotionThreshold(thres float32) error","Funname":"SetMotionThreshold","Returntype":"error","Args":"thres float32"},{"Uniquefunname":"func (tpad *Touchpad) SetPalmDimensions(width, z int32) error","Funname":"SetPalmDimensions","Returntype":"error","Args":"width, z int32"},{"Uniquefunname":"func (tpad *Touchpad) SetRotation(direction uint8) error","Funname":"SetRotation","Returntype":"error","Args":"direction uint8"},{"Uniquefunname":"func (tpad *Touchpad) SetScrollDistance(vert, horiz int32) error","Funname":"SetScrollDistance","Returntype":"error","Args":"vert, horiz int32"},{"Uniquefunname":"func NewTouchpad(id int32) (*Touchpad, error)","Funname":"dxinput.NewTouchpad","Returntype":"(*Touchpad, error)","Args":"id int32"},{"Uniquefunname":"func NewTouchpadFromDevInfo(dev *DeviceInfo) (*Touchpad, error)","Funname":"dxinput.NewTouchpadFromDevInfo","Returntype":"(*Touchpad, error)","Args":"dev *DeviceInfo"},{"Uniquefunname":"func (tpad *Touchpad) CanDisableWhileTyping() bool","Funname":"dxinput.Touchpad.CanDisableWhileTyping","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanEdgeScroll() bool","Funname":"dxinput.Touchpad.CanEdgeScroll","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanLeftHanded() bool","Funname":"dxinput.Touchpad.CanLeftHanded","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanNaturalScroll() bool","Funname":"dxinput.Touchpad.CanNaturalScroll","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanPalmDetect() bool","Funname":"dxinput.Touchpad.CanPalmDetect","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanTapToClick() bool","Funname":"dxinput.Touchpad.CanTapToClick","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanTwoFingerScroll() (bool, bool)","Funname":"dxinput.Touchpad.CanTwoFingerScroll","Returntype":"(bool, bool)","Args":""},{"Uniquefunname":"func (tpad *Touchpad) Enable(enabled bool) error","Funname":"dxinput.Touchpad.Enable","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableDisableWhileTyping(enabled bool) error","Funname":"dxinput.Touchpad.EnableDisableWhileTyping","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableEdgeScroll(enabled bool) error","Funname":"dxinput.Touchpad.EnableEdgeScroll","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableLeftHanded(enabled bool) error","Funname":"dxinput.Touchpad.EnableLeftHanded","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableMiddleButtonEmulation(enabled bool) error","Funname":"dxinput.Touchpad.EnableMiddleButtonEmulation","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableNaturalScroll(enabled bool) error","Funname":"dxinput.Touchpad.EnableNaturalScroll","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnablePalmDetect(enabled bool) error","Funname":"dxinput.Touchpad.EnablePalmDetect","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableTapToClick(enabled bool) error","Funname":"dxinput.Touchpad.EnableTapToClick","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableTwoFingerScroll(vert, horiz bool) error","Funname":"dxinput.Touchpad.EnableTwoFingerScroll","Returntype":"error","Args":"vert, horiz bool"},{"Uniquefunname":"func (tpad *Touchpad) GetPalmDimensions() (int32, int32, error)","Funname":"dxinput.Touchpad.GetPalmDimensions","Returntype":"(int32, int32, error)","Args":""},{"Uniquefunname":"func (tpad *Touchpad) IsEnabled() bool","Funname":"dxinput.Touchpad.IsEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) IsMiddleButtonEnulationEnabled() bool","Funname":"dxinput.Touchpad.IsMiddleButtonEnulationEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) MotionAcceleration() (float32, error)","Funname":"dxinput.Touchpad.MotionAcceleration","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func (tpad *Touchpad) MotionScaling() (float32, error)","Funname":"dxinput.Touchpad.MotionScaling","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func (tpad *Touchpad) MotionThreshold() (float32, error)","Funname":"dxinput.Touchpad.MotionThreshold","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func (tpad *Touchpad) ScrollDistance() (int32, int32)","Funname":"dxinput.Touchpad.ScrollDistance","Returntype":"(int32, int32)","Args":""},{"Uniquefunname":"func (tpad *Touchpad) SetMotionAcceleration(accel float32) error","Funname":"dxinput.Touchpad.SetMotionAcceleration","Returntype":"error","Args":"accel float32"},{"Uniquefunname":"func (tpad *Touchpad) SetMotionScaling(scaling float32) error","Funname":"dxinput.Touchpad.SetMotionScaling","Returntype":"error","Args":"scaling float32"},{"Uniquefunname":"func (tpad *Touchpad) SetMotionThreshold(thres float32) error","Funname":"dxinput.Touchpad.SetMotionThreshold","Returntype":"error","Args":"thres float32"},{"Uniquefunname":"func (tpad *Touchpad) SetPalmDimensions(width, z int32) error","Funname":"dxinput.Touchpad.SetPalmDimensions","Returntype":"error","Args":"width, z int32"},{"Uniquefunname":"func (tpad *Touchpad) SetRotation(direction uint8) error","Funname":"dxinput.Touchpad.SetRotation","Returntype":"error","Args":"direction uint8"},{"Uniquefunname":"func (tpad *Touchpad) SetScrollDistance(vert, horiz int32) error","Funname":"dxinput.Touchpad.SetScrollDistance","Returntype":"error","Args":"vert, horiz int32"}],"Records":[{"Name":"struct:dxinput.Touchpad","Fields":["dxinput.Touchpad.Id int32","dxinput.Touchpad.Name string","dxinput.Touchpad.isLibinputUsed bool"]},{"Name":"const:dxinput","Fields":["dxinput.propEdgeScroll","dxinput.propOff","dxinput.propPalmDetect","dxinput.propPalmDimensions","dxinput.propScrollDistance","dxinput.propTapAction","dxinput.propTwoFingerScrol"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/dxinput/touchscreen.go","Functions":[{"Uniquefunname":"func (touch *Touchscreen) Enable(enabled bool) error","Funname":"Enable","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (touch *Touchscreen) IsEnabled() bool","Funname":"IsEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func NewTouchscreen(id int32) (*Touchscreen, error)","Funname":"NewTouchscreen","Returntype":"(*Touchscreen, error)","Args":"id int32"},{"Uniquefunname":"func NewTouchscreenFromDevInfo(dev *DeviceInfo) (*Touchscreen, error)","Funname":"NewTouchscreenFromDevInfo","Returntype":"(*Touchscreen, error)","Args":"dev *DeviceInfo"},{"Uniquefunname":"func (touch *Touchscreen) SetRotation(direction uint8) error","Funname":"SetRotation","Returntype":"error","Args":"direction uint8"},{"Uniquefunname":"func NewTouchscreen(id int32) (*Touchscreen, error)","Funname":"dxinput.NewTouchscreen","Returntype":"(*Touchscreen, error)","Args":"id int32"},{"Uniquefunname":"func NewTouchscreenFromDevInfo(dev *DeviceInfo) (*Touchscreen, error)","Funname":"dxinput.NewTouchscreenFromDevInfo","Returntype":"(*Touchscreen, error)","Args":"dev *DeviceInfo"},{"Uniquefunname":"func (touch *Touchscreen) Enable(enabled bool) error","Funname":"dxinput.Touchscreen.Enable","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (touch *Touchscreen) IsEnabled() bool","Funname":"dxinput.Touchscreen.IsEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func (touch *Touchscreen) SetRotation(direction uint8) error","Funname":"dxinput.Touchscreen.SetRotation","Returntype":"error","Args":"direction uint8"}],"Records":[{"Name":"struct:dxinput.Touchscreen","Fields":["dxinput.Touchscreen.Id int32","dxinput.Touchscreen.Name string","dxinput.Touchscreen.isLibinputUsed bool"]},{"Name":"const:dxinput","Fields":["dxinput.libinputPropCalibrationMatrix"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/dxinput/utils.go","Functions":[{"Uniquefunname":"func absInt32(v int32) int32","Funname":"absInt32","Returntype":"int32","Args":"v int32"},{"Uniquefunname":"func absInt32(v int32) int32","Funname":"dxinput.absInt32","Returntype":"int32","Args":"v int32"},{"Uniquefunname":"func enableDevice(id int32, enabled bool) error","Funname":"dxinput.enableDevice","Returntype":"error","Args":"id int32, enabled bool"},{"Uniquefunname":"func getFloat32Prop(id int32, prop string, nitems int32) ([]float32, error)","Funname":"dxinput.getFloat32Prop","Returntype":"([]float32, error)","Args":"id int32, prop string, nitems int32"},{"Uniquefunname":"func getInt16Prop(id int32, prop string, nitems int32) ([]int16, error)","Funname":"dxinput.getInt16Prop","Returntype":"([]int16, error)","Args":"id int32, prop string, nitems int32"},{"Uniquefunname":"func getInt32Prop(id int32, prop string, nitems int32) ([]int32, error)","Funname":"dxinput.getInt32Prop","Returntype":"([]int32, error)","Args":"id int32, prop string, nitems int32"},{"Uniquefunname":"func getInt8Prop(id int32, prop string, nitems int32) ([]int8, error)","Funname":"dxinput.getInt8Prop","Returntype":"([]int8, error)","Args":"id int32, prop string, nitems int32"},{"Uniquefunname":"func getMotionAcceleration(id int32) (float32, error)","Funname":"dxinput.getMotionAcceleration","Returntype":"(float32, error)","Args":"id int32"},{"Uniquefunname":"func getMotionScaling(id int32) (float32, error)","Funname":"dxinput.getMotionScaling","Returntype":"(float32, error)","Args":"id int32"},{"Uniquefunname":"func getMotionThreshold(id int32) (float32, error)","Funname":"dxinput.getMotionThreshold","Returntype":"(float32, error)","Args":"id int32"},{"Uniquefunname":"func init()","Funname":"dxinput.init","Returntype":"","Args":""},{"Uniquefunname":"func isDeviceEnabled(id int32) bool","Funname":"dxinput.isDeviceEnabled","Returntype":"bool","Args":"id int32"},{"Uniquefunname":"func isFloat32ListEqual(l1, l2 []float32) bool","Funname":"dxinput.isFloat32ListEqual","Returntype":"bool","Args":"l1, l2 []float32"},{"Uniquefunname":"func setMotionAcceleration(id int32, accel float32) error","Funname":"dxinput.setMotionAcceleration","Returntype":"error","Args":"id int32, accel float32"},{"Uniquefunname":"func setMotionScaling(id int32, scaling float32) error","Funname":"dxinput.setMotionScaling","Returntype":"error","Args":"id int32, scaling float32"},{"Uniquefunname":"func setMotionThreshold(id int32, thres float32) error","Funname":"dxinput.setMotionThreshold","Returntype":"error","Args":"id int32, thres float32"},{"Uniquefunname":"func setRotation(id int32, rotation uint8) error","Funname":"dxinput.setRotation","Returntype":"error","Args":"id int32, rotation uint8"},{"Uniquefunname":"func enableDevice(id int32, enabled bool) error","Funname":"enableDevice","Returntype":"error","Args":"id int32, enabled bool"},{"Uniquefunname":"func getFloat32Prop(id int32, prop string, nitems int32) ([]float32, error)","Funname":"getFloat32Prop","Returntype":"([]float32, error)","Args":"id int32, prop string, nitems int32"},{"Uniquefunname":"func getInt16Prop(id int32, prop string, nitems int32) ([]int16, error)","Funname":"getInt16Prop","Returntype":"([]int16, error)","Args":"id int32, prop string, nitems int32"},{"Uniquefunname":"func getInt32Prop(id int32, prop string, nitems int32) ([]int32, error)","Funname":"getInt32Prop","Returntype":"([]int32, error)","Args":"id int32, prop string, nitems int32"},{"Uniquefunname":"func getInt8Prop(id int32, prop string, nitems int32) ([]int8, error)","Funname":"getInt8Prop","Returntype":"([]int8, error)","Args":"id int32, prop string, nitems int32"},{"Uniquefunname":"func getMotionAcceleration(id int32) (float32, error)","Funname":"getMotionAcceleration","Returntype":"(float32, error)","Args":"id int32"},{"Uniquefunname":"func getMotionScaling(id int32) (float32, error)","Funname":"getMotionScaling","Returntype":"(float32, error)","Args":"id int32"},{"Uniquefunname":"func getMotionThreshold(id int32) (float32, error)","Funname":"getMotionThreshold","Returntype":"(float32, error)","Args":"id int32"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func isDeviceEnabled(id int32) bool","Funname":"isDeviceEnabled","Returntype":"bool","Args":"id int32"},{"Uniquefunname":"func isFloat32ListEqual(l1, l2 []float32) bool","Funname":"isFloat32ListEqual","Returntype":"bool","Args":"l1, l2 []float32"},{"Uniquefunname":"func setMotionAcceleration(id int32, accel float32) error","Funname":"setMotionAcceleration","Returntype":"error","Args":"id int32, accel float32"},{"Uniquefunname":"func setMotionScaling(id int32, scaling float32) error","Funname":"setMotionScaling","Returntype":"error","Args":"id int32, scaling float32"},{"Uniquefunname":"func setMotionThreshold(id int32, thres float32) error","Funname":"setMotionThreshold","Returntype":"error","Args":"id int32, thres float32"},{"Uniquefunname":"func setRotation(id int32, rotation uint8) error","Funname":"setRotation","Returntype":"error","Args":"id int32, rotation uint8"}],"Records":[{"Name":"const:dxinput","Fields":["dxinput.RotationDirectionInverted","dxinput.RotationDirectionLeft","dxinput.RotationDirectionNormal","dxinput.RotationDirectionRight","dxinput.propAdaptiveDeceleration","dxinput.propConstantDeceleration","dxinput.propCoordTransMatrix","dxinput.propDeviceEnabled","dxinput.propVelocityScaling"]},{"Name":"var:dxinput","Fields":["dxinput.globalWayland","dxinput.rotationInverted","dxinput.rotationLeft","dxinput.rotationNormal","dxinput.rotationRight"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/dxinput/wacom.go","Functions":[{"Uniquefunname":"func (w *Wacom) GetArea() (x1, y1, x2, y2 int, err error)","Funname":"GetArea","Returntype":"(x1, y1, x2, y2 int, err error)","Args":""},{"Uniquefunname":"func (w *Wacom) MapToOutput(output string) error","Funname":"MapToOutput","Returntype":"error","Args":"output string"},{"Uniquefunname":"func NewWacom(id int32) (*Wacom, error)","Funname":"NewWacom","Returntype":"(*Wacom, error)","Args":"id int32"},{"Uniquefunname":"func NewWacomFromDevInfo(dev *DeviceInfo) (*Wacom, error)","Funname":"NewWacomFromDevInfo","Returntype":"(*Wacom, error)","Args":"dev *DeviceInfo"},{"Uniquefunname":"func (w *Wacom) QueryType() int","Funname":"QueryType","Returntype":"int","Args":""},{"Uniquefunname":"func (w *Wacom) ResetArea() error","Funname":"ResetArea","Returntype":"error","Args":""},{"Uniquefunname":"func (w *Wacom) SetArea(x1, y1, x2, y2 int) error","Funname":"SetArea","Returntype":"error","Args":"x1, y1, x2, y2 int"},{"Uniquefunname":"func (w *Wacom) SetButton(btn int, value string) error","Funname":"SetButton","Returntype":"error","Args":"btn int, value string"},{"Uniquefunname":"func (w *Wacom) SetMode(mode string) error","Funname":"SetMode","Returntype":"error","Args":"mode string"},{"Uniquefunname":"func (w *Wacom) SetPressureCurve(x1, y1, x2, y2 int) error","Funname":"SetPressureCurve","Returntype":"error","Args":"x1, y1, x2, y2 int"},{"Uniquefunname":"func (w *Wacom) SetRawSample(sample uint32) error","Funname":"SetRawSample","Returntype":"error","Args":"sample uint32"},{"Uniquefunname":"func (w *Wacom) SetRotate(value string) error","Funname":"SetRotate","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (w *Wacom) SetSuppress(value int) error","Funname":"SetSuppress","Returntype":"error","Args":"value int"},{"Uniquefunname":"func (w *Wacom) SetThreshold(thres int) error","Funname":"SetThreshold","Returntype":"error","Args":"thres int"},{"Uniquefunname":"func doAction(cmd string) error","Funname":"doAction","Returntype":"error","Args":"cmd string"},{"Uniquefunname":"func NewWacom(id int32) (*Wacom, error)","Funname":"dxinput.NewWacom","Returntype":"(*Wacom, error)","Args":"id int32"},{"Uniquefunname":"func NewWacomFromDevInfo(dev *DeviceInfo) (*Wacom, error)","Funname":"dxinput.NewWacomFromDevInfo","Returntype":"(*Wacom, error)","Args":"dev *DeviceInfo"},{"Uniquefunname":"func (w *Wacom) GetArea() (x1, y1, x2, y2 int, err error)","Funname":"dxinput.Wacom.GetArea","Returntype":"(x1, y1, x2, y2 int, err error)","Args":""},{"Uniquefunname":"func (w *Wacom) MapToOutput(output string) error","Funname":"dxinput.Wacom.MapToOutput","Returntype":"error","Args":"output string"},{"Uniquefunname":"func (w *Wacom) QueryType() int","Funname":"dxinput.Wacom.QueryType","Returntype":"int","Args":""},{"Uniquefunname":"func (w *Wacom) ResetArea() error","Funname":"dxinput.Wacom.ResetArea","Returntype":"error","Args":""},{"Uniquefunname":"func (w *Wacom) SetArea(x1, y1, x2, y2 int) error","Funname":"dxinput.Wacom.SetArea","Returntype":"error","Args":"x1, y1, x2, y2 int"},{"Uniquefunname":"func (w *Wacom) SetButton(btn int, value string) error","Funname":"dxinput.Wacom.SetButton","Returntype":"error","Args":"btn int, value string"},{"Uniquefunname":"func (w *Wacom) SetMode(mode string) error","Funname":"dxinput.Wacom.SetMode","Returntype":"error","Args":"mode string"},{"Uniquefunname":"func (w *Wacom) SetPressureCurve(x1, y1, x2, y2 int) error","Funname":"dxinput.Wacom.SetPressureCurve","Returntype":"error","Args":"x1, y1, x2, y2 int"},{"Uniquefunname":"func (w *Wacom) SetRawSample(sample uint32) error","Funname":"dxinput.Wacom.SetRawSample","Returntype":"error","Args":"sample uint32"},{"Uniquefunname":"func (w *Wacom) SetRotate(value string) error","Funname":"dxinput.Wacom.SetRotate","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (w *Wacom) SetSuppress(value int) error","Funname":"dxinput.Wacom.SetSuppress","Returntype":"error","Args":"value int"},{"Uniquefunname":"func (w *Wacom) SetThreshold(thres int) error","Funname":"dxinput.Wacom.SetThreshold","Returntype":"error","Args":"thres int"},{"Uniquefunname":"func (w *Wacom) getIdAsStr() string","Funname":"dxinput.Wacom.getIdAsStr","Returntype":"string","Args":""},{"Uniquefunname":"func doAction(cmd string) error","Funname":"dxinput.doAction","Returntype":"error","Args":"cmd string"},{"Uniquefunname":"func (w *Wacom) getIdAsStr() string","Funname":"getIdAsStr","Returntype":"string","Args":""}],"Records":[{"Name":"struct:dxinput.Wacom","Fields":["dxinput.Wacom.Id int32","dxinput.Wacom.Name string"]},{"Name":"const:dxinput","Fields":["dxinput.WacomTypeEraser","dxinput.WacomTypePad","dxinput.WacomTypeStylus","dxinput.WacomTypeUnknown","dxinput.cmdKeyArea","dxinput.cmdKeyButton","dxinput.cmdKeyMapToOutput","dxinput.cmdKeyMode","dxinput.cmdKeyPressureCurve","dxinput.cmdKeyRawSample","dxinput.cmdKeyResetArea","dxinput.cmdKeyRotate","dxinput.cmdKeySuppress","dxinput.cmdKeyThreshold","dxinput.cmdXSetWacom"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/dxinput/common/common.go","Functions":[{"Uniquefunname":"func (infos DeviceInfos) Get(id int32) *DeviceInfo","Funname":"Get","Returntype":"*DeviceInfo","Args":"id int32"},{"Uniquefunname":"func (infos DeviceInfos) Get(id int32) *DeviceInfo","Funname":"common.DeviceInfos.Get","Returntype":"*DeviceInfo","Args":"id int32"}],"Records":[{"Name":"const:common","Fields":["common.DevTypeKeyboard","common.DevTypeMouse","common.DevTypeTouchpad","common.DevTypeTouchscreen","common.DevTypeUnknown","common.DevTypeWacom"]},{"Name":"struct:common.DeviceInfo","Fields":["common.DeviceInfo.Enabled bool","common.DeviceInfo.Id int32","common.DeviceInfo.Name string","common.DeviceInfo.Type int32"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/dxinput/kwayland/inputdevice.go","Functions":[{"Uniquefunname":"func CanAdaptiveAccelProfile(sysName string) bool","Funname":"CanAdaptiveAccelProfile","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanDisableWhileTyping(sysName string) bool","Funname":"CanDisableWhileTyping","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanEnabled(sysName string) bool","Funname":"CanEnabled","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanLeftHanded(sysName string) bool","Funname":"CanLeftHanded","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanLmrTapButtonMap(sysName string) bool","Funname":"CanLmrTapButtonMap","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanMiddleButtonEmulation(sysName string) bool","Funname":"CanMiddleButtonEmulation","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanNaturalScroll(sysName string) bool","Funname":"CanNaturalScroll","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanScrollEdge(sysName string) bool","Funname":"CanScrollEdge","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanScrollTwoFinger(sysName string) bool","Funname":"CanScrollTwoFinger","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanTapToClick(sysName string) bool","Funname":"CanTapToClick","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func Enable(sysName string, enabled bool) error","Funname":"Enable","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableAdaptiveAccelProfile(sysName string, enabled bool) error","Funname":"EnableAdaptiveAccelProfile","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableDisableWhileTyping(sysName string, enabled bool) error","Funname":"EnableDisableWhileTyping","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableLeftHanded(sysName string, enabled bool) error","Funname":"EnableLeftHanded","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableLmrTapButtonMap(sysName string, enabled bool) error","Funname":"EnableLmrTapButtonMap","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableMiddleEmulation(sysName string, enabled bool) error","Funname":"EnableMiddleEmulation","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableNaturalScroll(sysName string, enabled bool) error","Funname":"EnableNaturalScroll","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableScrollEdge(sysName string, enabled bool) error","Funname":"EnableScrollEdge","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableScrollTwoFinger(sysName string, enabled bool) error","Funname":"EnableScrollTwoFinger","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableTapToClick(sysName string, enabled bool) error","Funname":"EnableTapToClick","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func GetPointerAccel(sysName string) (float64, error)","Funname":"GetPointerAccel","Returntype":"(float64, error)","Args":"sysName string"},{"Uniquefunname":"func GetScrollButton(sysName string) (uint32, error)","Funname":"GetScrollButton","Returntype":"(uint32, error)","Args":"sysName string"},{"Uniquefunname":"func ListDevice() (DeviceInfos, error)","Funname":"ListDevice","Returntype":"(DeviceInfos, error)","Args":""},{"Uniquefunname":"func NewDeviceInfo(sysName string) (*DeviceInfo, error)","Funname":"NewDeviceInfo","Returntype":"(*DeviceInfo, error)","Args":"sysName string"},{"Uniquefunname":"func SetPointerAccel(sysName string, v float64) error","Funname":"SetPointerAccel","Returntype":"error","Args":"sysName string, v float64"},{"Uniquefunname":"func SetScrollButton(sysName string, v uint32) error","Funname":"SetScrollButton","Returntype":"error","Args":"sysName string, v uint32"},{"Uniquefunname":"func getSessionBus() *dbus.Conn","Funname":"getSessionBus","Returntype":"*dbus.Conn","Args":""},{"Uniquefunname":"func isMouseDevice(dev *kwin.InputDevice) bool","Funname":"isMouseDevice","Returntype":"bool","Args":"dev *kwin.InputDevice"},{"Uniquefunname":"func CanAdaptiveAccelProfile(sysName string) bool","Funname":"kwayland.CanAdaptiveAccelProfile","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanDisableWhileTyping(sysName string) bool","Funname":"kwayland.CanDisableWhileTyping","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanEnabled(sysName string) bool","Funname":"kwayland.CanEnabled","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanLeftHanded(sysName string) bool","Funname":"kwayland.CanLeftHanded","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanLmrTapButtonMap(sysName string) bool","Funname":"kwayland.CanLmrTapButtonMap","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanMiddleButtonEmulation(sysName string) bool","Funname":"kwayland.CanMiddleButtonEmulation","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanNaturalScroll(sysName string) bool","Funname":"kwayland.CanNaturalScroll","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanScrollEdge(sysName string) bool","Funname":"kwayland.CanScrollEdge","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanScrollTwoFinger(sysName string) bool","Funname":"kwayland.CanScrollTwoFinger","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanTapToClick(sysName string) bool","Funname":"kwayland.CanTapToClick","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func Enable(sysName string, enabled bool) error","Funname":"kwayland.Enable","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableAdaptiveAccelProfile(sysName string, enabled bool) error","Funname":"kwayland.EnableAdaptiveAccelProfile","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableDisableWhileTyping(sysName string, enabled bool) error","Funname":"kwayland.EnableDisableWhileTyping","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableLeftHanded(sysName string, enabled bool) error","Funname":"kwayland.EnableLeftHanded","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableLmrTapButtonMap(sysName string, enabled bool) error","Funname":"kwayland.EnableLmrTapButtonMap","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableMiddleEmulation(sysName string, enabled bool) error","Funname":"kwayland.EnableMiddleEmulation","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableNaturalScroll(sysName string, enabled bool) error","Funname":"kwayland.EnableNaturalScroll","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableScrollEdge(sysName string, enabled bool) error","Funname":"kwayland.EnableScrollEdge","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableScrollTwoFinger(sysName string, enabled bool) error","Funname":"kwayland.EnableScrollTwoFinger","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableTapToClick(sysName string, enabled bool) error","Funname":"kwayland.EnableTapToClick","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func GetPointerAccel(sysName string) (float64, error)","Funname":"kwayland.GetPointerAccel","Returntype":"(float64, error)","Args":"sysName string"},{"Uniquefunname":"func GetScrollButton(sysName string) (uint32, error)","Funname":"kwayland.GetScrollButton","Returntype":"(uint32, error)","Args":"sysName string"},{"Uniquefunname":"func ListDevice() (DeviceInfos, error)","Funname":"kwayland.ListDevice","Returntype":"(DeviceInfos, error)","Args":""},{"Uniquefunname":"func NewDeviceInfo(sysName string) (*DeviceInfo, error)","Funname":"kwayland.NewDeviceInfo","Returntype":"(*DeviceInfo, error)","Args":"sysName string"},{"Uniquefunname":"func SetPointerAccel(sysName string, v float64) error","Funname":"kwayland.SetPointerAccel","Returntype":"error","Args":"sysName string, v float64"},{"Uniquefunname":"func SetScrollButton(sysName string, v uint32) error","Funname":"kwayland.SetScrollButton","Returntype":"error","Args":"sysName string, v uint32"},{"Uniquefunname":"func getSessionBus() *dbus.Conn","Funname":"kwayland.getSessionBus","Returntype":"*dbus.Conn","Args":""},{"Uniquefunname":"func isMouseDevice(dev *kwin.InputDevice) bool","Funname":"kwayland.isMouseDevice","Returntype":"bool","Args":"dev *kwin.InputDevice"},{"Uniquefunname":"func newInputDeviceObj(sysName string) (*kwin.InputDevice, error)","Funname":"kwayland.newInputDeviceObj","Returntype":"(*kwin.InputDevice, error)","Args":"sysName string"},{"Uniquefunname":"func newInputDeviceObj(sysName string) (*kwin.InputDevice, error)","Funname":"newInputDeviceObj","Returntype":"(*kwin.InputDevice, error)","Args":"sysName string"}],"Records":[{"Name":"const:kwayland","Fields":["kwayland.SysNamePrefix","kwayland.eventPathPrefix"]},{"Name":"var:kwayland","Fields":["kwayland._conn","kwayland.errUnsupported"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/dxinput/utils/button_map.go","Functions":[{"Uniquefunname":"func CanLeftHanded(xid uint32, devName string) bool","Funname":"CanLeftHanded","Returntype":"bool","Args":"xid uint32, devName string"},{"Uniquefunname":"func GetButtonMap(xid uint32, devName string) ([]byte, error)","Funname":"GetButtonMap","Returntype":"([]byte, error)","Args":"xid uint32, devName string"},{"Uniquefunname":"func SetButtonMap(xid uint32, devName string, btnMap []byte) error","Funname":"SetButtonMap","Returntype":"error","Args":"xid uint32, devName string, btnMap []byte"},{"Uniquefunname":"func SetLeftHanded(xid uint32, devName string, useLeft bool) error","Funname":"SetLeftHanded","Returntype":"error","Args":"xid uint32, devName string, useLeft bool"},{"Uniquefunname":"func CanLeftHanded(xid uint32, devName string) bool","Funname":"utils.CanLeftHanded","Returntype":"bool","Args":"xid uint32, devName string"},{"Uniquefunname":"func GetButtonMap(xid uint32, devName string) ([]byte, error)","Funname":"utils.GetButtonMap","Returntype":"([]byte, error)","Args":"xid uint32, devName string"},{"Uniquefunname":"func SetButtonMap(xid uint32, devName string, btnMap []byte) error","Funname":"utils.SetButtonMap","Returntype":"error","Args":"xid uint32, devName string, btnMap []byte"},{"Uniquefunname":"func SetLeftHanded(xid uint32, devName string, useLeft bool) error","Funname":"utils.SetLeftHanded","Returntype":"error","Args":"xid uint32, devName string, useLeft bool"}],"Records":null}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/dxinput/utils/byte_op.go","Functions":[{"Uniquefunname":"func ReadFloat32(datas []byte, nitems int32) []float32","Funname":"ReadFloat32","Returntype":"[]float32","Args":"datas []byte, nitems int32"},{"Uniquefunname":"func ReadInt16(datas []byte, nitems int32) []int16","Funname":"ReadInt16","Returntype":"[]int16","Args":"datas []byte, nitems int32"},{"Uniquefunname":"func ReadInt32(datas []byte, nitems int32) []int32","Funname":"ReadInt32","Returntype":"[]int32","Args":"datas []byte, nitems int32"},{"Uniquefunname":"func ReadInt8(datas []byte, nitems int32) []int8","Funname":"ReadInt8","Returntype":"[]int8","Args":"datas []byte, nitems int32"},{"Uniquefunname":"func WriteFloat32(values []float32) []byte","Funname":"WriteFloat32","Returntype":"[]byte","Args":"values []float32"},{"Uniquefunname":"func WriteInt16(values []int16) []byte","Funname":"WriteInt16","Returntype":"[]byte","Args":"values []int16"},{"Uniquefunname":"func WriteInt32(values []int32) []byte","Funname":"WriteInt32","Returntype":"[]byte","Args":"values []int32"},{"Uniquefunname":"func WriteInt8(values []int8) []byte","Funname":"WriteInt8","Returntype":"[]byte","Args":"values []int8"},{"Uniquefunname":"func machineEndian() binary.ByteOrder","Funname":"machineEndian","Returntype":"binary.ByteOrder","Args":""},{"Uniquefunname":"func ReadFloat32(datas []byte, nitems int32) []float32","Funname":"utils.ReadFloat32","Returntype":"[]float32","Args":"datas []byte, nitems int32"},{"Uniquefunname":"func ReadInt16(datas []byte, nitems int32) []int16","Funname":"utils.ReadInt16","Returntype":"[]int16","Args":"datas []byte, nitems int32"},{"Uniquefunname":"func ReadInt32(datas []byte, nitems int32) []int32","Funname":"utils.ReadInt32","Returntype":"[]int32","Args":"datas []byte, nitems int32"},{"Uniquefunname":"func ReadInt8(datas []byte, nitems int32) []int8","Funname":"utils.ReadInt8","Returntype":"[]int8","Args":"datas []byte, nitems int32"},{"Uniquefunname":"func WriteFloat32(values []float32) []byte","Funname":"utils.WriteFloat32","Returntype":"[]byte","Args":"values []float32"},{"Uniquefunname":"func WriteInt16(values []int16) []byte","Funname":"utils.WriteInt16","Returntype":"[]byte","Args":"values []int16"},{"Uniquefunname":"func WriteInt32(values []int32) []byte","Funname":"utils.WriteInt32","Returntype":"[]byte","Args":"values []int32"},{"Uniquefunname":"func WriteInt8(values []int8) []byte","Funname":"utils.WriteInt8","Returntype":"[]byte","Args":"values []int8"},{"Uniquefunname":"func machineEndian() binary.ByteOrder","Funname":"utils.machineEndian","Returntype":"binary.ByteOrder","Args":""}],"Records":null}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/dxinput/utils/wrapper.go","Functions":[{"Uniquefunname":"func GetProperty(id int32, prop string) ([]byte, int32)","Funname":"GetProperty","Returntype":"([]byte, int32)","Args":"id int32, prop string"},{"Uniquefunname":"func IsPropertyExist(id int32, prop string) bool","Funname":"IsPropertyExist","Returntype":"bool","Args":"id int32, prop string"},{"Uniquefunname":"func ListDevice() DeviceInfos","Funname":"ListDevice","Returntype":"DeviceInfos","Args":""},{"Uniquefunname":"func QueryDeviceType(id int32) int32","Funname":"QueryDeviceType","Returntype":"int32","Args":"id int32"},{"Uniquefunname":"func SetFloat32Prop(id int32, prop string, values []float32) error","Funname":"SetFloat32Prop","Returntype":"error","Args":"id int32, prop string, values []float32"},{"Uniquefunname":"func SetInt16Prop(id int32, prop string, values []int16) error","Funname":"SetInt16Prop","Returntype":"error","Args":"id int32, prop string, values []int16"},{"Uniquefunname":"func SetInt32Prop(id int32, prop string, values []int32) error","Funname":"SetInt32Prop","Returntype":"error","Args":"id int32, prop string, values []int32"},{"Uniquefunname":"func SetInt8Prop(id int32, prop string, values []int8) error","Funname":"SetInt8Prop","Returntype":"error","Args":"id int32, prop string, values []int8"},{"Uniquefunname":"func SetKeyboardRepeat(enabled bool, delay, interval uint32) error","Funname":"SetKeyboardRepeat","Returntype":"error","Args":"enabled bool, delay, interval uint32"},{"Uniquefunname":"func byteArrayToUChar(datas []byte) []C.uchar","Funname":"byteArrayToUChar","Returntype":"[]C.uchar","Args":"datas []byte"},{"Uniquefunname":"func ucharArrayToByte(cData *C.uchar, length int) []byte","Funname":"ucharArrayToByte","Returntype":"[]byte","Args":"cData *C.uchar, length int"},{"Uniquefunname":"func GetProperty(id int32, prop string) ([]byte, int32)","Funname":"utils.GetProperty","Returntype":"([]byte, int32)","Args":"id int32, prop string"},{"Uniquefunname":"func IsPropertyExist(id int32, prop string) bool","Funname":"utils.IsPropertyExist","Returntype":"bool","Args":"id int32, prop string"},{"Uniquefunname":"func ListDevice() DeviceInfos","Funname":"utils.ListDevice","Returntype":"DeviceInfos","Args":""},{"Uniquefunname":"func QueryDeviceType(id int32) int32","Funname":"utils.QueryDeviceType","Returntype":"int32","Args":"id int32"},{"Uniquefunname":"func SetFloat32Prop(id int32, prop string, values []float32) error","Funname":"utils.SetFloat32Prop","Returntype":"error","Args":"id int32, prop string, values []float32"},{"Uniquefunname":"func SetInt16Prop(id int32, prop string, values []int16) error","Funname":"utils.SetInt16Prop","Returntype":"error","Args":"id int32, prop string, values []int16"},{"Uniquefunname":"func SetInt32Prop(id int32, prop string, values []int32) error","Funname":"utils.SetInt32Prop","Returntype":"error","Args":"id int32, prop string, values []int32"},{"Uniquefunname":"func SetInt8Prop(id int32, prop string, values []int8) error","Funname":"utils.SetInt8Prop","Returntype":"error","Args":"id int32, prop string, values []int8"},{"Uniquefunname":"func SetKeyboardRepeat(enabled bool, delay, interval uint32) error","Funname":"utils.SetKeyboardRepeat","Returntype":"error","Args":"enabled bool, delay, interval uint32"},{"Uniquefunname":"func byteArrayToUChar(datas []byte) []C.uchar","Funname":"utils.byteArrayToUChar","Returntype":"[]C.uchar","Args":"datas []byte"},{"Uniquefunname":"func ucharArrayToByte(cData *C.uchar, length int) []byte","Funname":"utils.ucharArrayToByte","Returntype":"[]byte","Args":"cData *C.uchar, length int"}],"Records":[{"Name":"const:utils","Fields":["utils.maxBufferLen"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/i18n_dependent/i18n_dependent.go","Functions":[{"Uniquefunname":"func GetByLocale(locale string) (DependentInfos, DependentInfos, error)","Funname":"GetByLocale","Returntype":"(DependentInfos, DependentInfos, error)","Args":"locale string"},{"Uniquefunname":"func GetByPackage(locale, pkg string) ([]string, []string, error)","Funname":"GetByPackage","Returntype":"([]string, []string, error)","Args":"locale, pkg string"},{"Uniquefunname":"func (infos DependentInfos) GetConflictPackages() DependentInfos","Funname":"GetConflictPackages","Returntype":"DependentInfos","Args":""},{"Uniquefunname":"func (infos DependentInfos) GetPackagesByDependent(dependent string) []string","Funname":"GetPackagesByDependent","Returntype":"[]string","Args":"dependent string"},{"Uniquefunname":"func getConflictPackages(pkgs []string) []string","Funname":"getConflictPackages","Returntype":"[]string","Args":"pkgs []string"},{"Uniquefunname":"func (infos DependentInfos) GetConflictPackages() DependentInfos","Funname":"i18n_dependent.DependentInfos.GetConflictPackages","Returntype":"DependentInfos","Args":""},{"Uniquefunname":"func (infos DependentInfos) GetPackagesByDependent(dependent string) []string","Funname":"i18n_dependent.DependentInfos.GetPackagesByDependent","Returntype":"[]string","Args":"dependent string"},{"Uniquefunname":"func GetByLocale(locale string) (DependentInfos, DependentInfos, error)","Funname":"i18n_dependent.GetByLocale","Returntype":"(DependentInfos, DependentInfos, error)","Args":"locale string"},{"Uniquefunname":"func GetByPackage(locale, pkg string) ([]string, []string, error)","Funname":"i18n_dependent.GetByPackage","Returntype":"([]string, []string, error)","Args":"locale, pkg string"},{"Uniquefunname":"func getConflictPackages(pkgs []string) []string","Funname":"i18n_dependent.getConflictPackages","Returntype":"[]string","Args":"pkgs []string"}],"Records":[{"Name":"struct:i18n_dependent.DependentInfo","Fields":["i18n_dependent.DependentInfo.Dependent string","i18n_dependent.DependentInfo.Packages []string"]},{"Name":"const:i18n_dependent","Fields":["i18n_dependent.pkgDependsFile"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/i18n_dependent/parse_file.go","Functions":[{"Uniquefunname":"func (categories jsonDependentCategories) GetAllDependentInfos(locale string) DependentInfos","Funname":"GetAllDependentInfos","Returntype":"DependentInfos","Args":"locale string"},{"Uniquefunname":"func (categories jsonDependentCategories) GetDependentInfos(key, locale string) DependentInfos","Funname":"GetDependentInfos","Returntype":"DependentInfos","Args":"key, locale string"},{"Uniquefunname":"func (infos jsonDependentInfos) GetDependentInfos(locale string) DependentInfos","Funname":"GetDependentInfos","Returntype":"DependentInfos","Args":"locale string"},{"Uniquefunname":"func (categories jsonDependentCategories) GetInfos(key string) jsonDependentInfos","Funname":"GetInfos","Returntype":"jsonDependentInfos","Args":"key string"},{"Uniquefunname":"func (info *jsonDependentInfo) GetPackages(locale string) []string","Funname":"GetPackages","Returntype":"[]string","Args":"locale string"},{"Uniquefunname":"func getDependentCategories(config string) (jsonDependentCategories, error)","Funname":"getDependentCategories","Returntype":"(jsonDependentCategories, error)","Args":"config string"},{"Uniquefunname":"func getPackagesByLangInfo(locale, langCode, countryCode, variant string)[]string","Funname":"getPackagesByLangInfo","Returntype":"[]string","Args":"locale, langCode, countryCode, variant string"},{"Uniquefunname":"func getDependentCategories(config string) (jsonDependentCategories, error)","Funname":"i18n_dependent.getDependentCategories","Returntype":"(jsonDependentCategories, error)","Args":"config string"},{"Uniquefunname":"func (categories jsonDependentCategories) GetAllDependentInfos(locale string) DependentInfos","Funname":"i18n_dependent.jsonDependentCategories.GetAllDependentInfos","Returntype":"DependentInfos","Args":"locale string"},{"Uniquefunname":"func (categories jsonDependentCategories) GetDependentInfos(key, locale string) DependentInfos","Funname":"i18n_dependent.jsonDependentCategories.GetDependentInfos","Returntype":"DependentInfos","Args":"key, locale string"},{"Uniquefunname":"func (categories jsonDependentCategories) GetInfos(key string) jsonDependentInfos","Funname":"i18n_dependent.jsonDependentCategories.GetInfos","Returntype":"jsonDependentInfos","Args":"key string"},{"Uniquefunname":"func (info *jsonDependentInfo) GetPackages(locale string) []string","Funname":"i18n_dependent.jsonDependentInfo.GetPackages","Returntype":"[]string","Args":"locale string"},{"Uniquefunname":"func i18n_dependent.jsonDependentInfo.getPackagesByLangInfo(locale, langCode, countryCode, variant string)[]string","Funname":"i18n_dependent.jsonDependentInfo.getPackagesByLangInfo","Returntype":"[]string","Args":"locale, langCode, countryCode, variant string"},{"Uniquefunname":"func (infos jsonDependentInfos) GetDependentInfos(locale string) DependentInfos","Funname":"i18n_dependent.jsonDependentInfos.GetDependentInfos","Returntype":"DependentInfos","Args":"locale string"}],"Records":[{"Name":"const:i18n_dependent","Fields":["i18n_dependent.formatTypeLC","i18n_dependent.formatTypeLCCC","i18n_dependent.formatTypeLCVA","i18n_dependent.formatTypeNone"]},{"Name":"struct:i18n_dependent.jsonDependentCategory","Fields":["i18n_dependent.jsonDependentCategory.Category string","i18n_dependent.jsonDependentCategory.Infos jsonDependentInfos"]},{"Name":"struct:i18n_dependent.jsonDependentGroup","Fields":["i18n_dependent.jsonDependentGroup.Categories jsonDependentCategories"]},{"Name":"struct:i18n_dependent.jsonDependentInfo","Fields":["i18n_dependent.jsonDependentInfo.Dependent string","i18n_dependent.jsonDependentInfo.FormatType int32","i18n_dependent.jsonDependentInfo.LangCode string","i18n_dependent.jsonDependentInfo.PkgPull string"]},{"Name":"var:i18n_dependent","Fields":["i18n_dependent.regUnderLine"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/i18n_dependent/sourcehansans.go","Functions":null,"Records":[{"Name":"var:i18n_dependent","Fields":["i18n_dependent.conflictPkgMap"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/inhibit_hint/inhibit_hint.go","Functions":[{"Uniquefunname":"func (o *Object) Export(service *dbusutil.Service) error","Funname":"Export","Returntype":"error","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (o *Object) Get(locale string, why string) (*HintInfo, *dbus.Error)","Funname":"Get","Returntype":"(*HintInfo, *dbus.Error)","Args":"locale string, why string"},{"Uniquefunname":"func (o *Object) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func New(domain string) *Object","Funname":"New","Returntype":"*Object","Args":"domain string"},{"Uniquefunname":"func (o *Object) SetIcon(icon string)","Funname":"SetIcon","Returntype":"","Args":"icon string"},{"Uniquefunname":"func (o *Object) SetIconFunc(fn GetFunc)","Funname":"SetIconFunc","Returntype":"","Args":"fn GetFunc"},{"Uniquefunname":"func (o *Object) SetName(name string)","Funname":"SetName","Returntype":"","Args":"name string"},{"Uniquefunname":"func (o *Object) SetNameFunc(fn GetFunc)","Funname":"SetNameFunc","Returntype":"","Args":"fn GetFunc"},{"Uniquefunname":"func (o *Object) StopExport(service *dbusutil.Service) error","Funname":"StopExport","Returntype":"error","Args":"service *dbusutil.Service"},{"Uniquefunname":"func get(v interface","Funname":"get","Returntype":"string","Args":"v interface{}, why string"},{"Uniquefunname":"func (o *Object) getIcon(why string) string","Funname":"getIcon","Returntype":"string","Args":"why string"},{"Uniquefunname":"func (o *Object) getName(why string) string","Funname":"getName","Returntype":"string","Args":"why string"},{"Uniquefunname":"func New(domain string) *Object","Funname":"inhibit_hint.New","Returntype":"*Object","Args":"domain string"},{"Uniquefunname":"func (o *Object) Export(service *dbusutil.Service) error","Funname":"inhibit_hint.Object.Export","Returntype":"error","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (o *Object) Get(locale string, why string) (*HintInfo, *dbus.Error)","Funname":"inhibit_hint.Object.Get","Returntype":"(*HintInfo, *dbus.Error)","Args":"locale string, why string"},{"Uniquefunname":"func (o *Object) GetInterfaceName() string","Funname":"inhibit_hint.Object.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (o *Object) SetIcon(icon string)","Funname":"inhibit_hint.Object.SetIcon","Returntype":"","Args":"icon string"},{"Uniquefunname":"func (o *Object) SetIconFunc(fn GetFunc)","Funname":"inhibit_hint.Object.SetIconFunc","Returntype":"","Args":"fn GetFunc"},{"Uniquefunname":"func (o *Object) SetName(name string)","Funname":"inhibit_hint.Object.SetName","Returntype":"","Args":"name string"},{"Uniquefunname":"func (o *Object) SetNameFunc(fn GetFunc)","Funname":"inhibit_hint.Object.SetNameFunc","Returntype":"","Args":"fn GetFunc"},{"Uniquefunname":"func (o *Object) StopExport(service *dbusutil.Service) error","Funname":"inhibit_hint.Object.StopExport","Returntype":"error","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (o *Object) getIcon(why string) string","Funname":"inhibit_hint.Object.getIcon","Returntype":"string","Args":"why string"},{"Uniquefunname":"func (o *Object) getName(why string) string","Funname":"inhibit_hint.Object.getName","Returntype":"string","Args":"why string"},{"Uniquefunname":"func get(v interface","Funname":"inhibit_hint.get","Returntype":"string","Args":"v interface{}, why string"}],"Records":[{"Name":"struct:inhibit_hint.HintInfo","Fields":["inhibit_hint.HintInfo.Icon string","inhibit_hint.HintInfo.Name string","inhibit_hint.HintInfo.Why string"]},{"Name":"struct:inhibit_hint.Object","Fields":["inhibit_hint.Object.domain string","inhibit_hint.Object.getMu sync.Mutex","inhibit_hint.Object.icon interface{}","inhibit_hint.Object.methods *struct { Get func() `in:\"locale,why\" out:\"hint\"`; }","inhibit_hint.Object.name interface{}"]},{"Name":"const:inhibit_hint","Fields":["inhibit_hint.dbusInterface","inhibit_hint.dbusPath"]},{"Name":"var:inhibit_hint","Fields":["inhibit_hint.errInvalidUTF8"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/inhibit_hint/t1_test.go","Functions":[{"Uniquefunname":"func TestGetSetIcon(t *testing.T)","Funname":"TestGetSetIcon","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetSetName(t *testing.T)","Funname":"TestGetSetName","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetSetIcon(t *testing.T)","Funname":"inhibit_hint.TestGetSetIcon","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetSetName(t *testing.T)","Funname":"inhibit_hint.TestGetSetName","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/lang_info/lang_info.go","Functions":[{"Uniquefunname":"func (infos LangInfos) Get(locale string) (*LangInfo, error)","Funname":"Get","Returntype":"(*LangInfo, error)","Args":"locale string"},{"Uniquefunname":"func GetLangCodeInfo(locale string) (*LangCodeInfo, error)","Funname":"GetLangCodeInfo","Returntype":"(*LangCodeInfo, error)","Args":"locale string"},{"Uniquefunname":"func GetSupportedLangInfos() (LangInfos, error)","Funname":"GetSupportedLangInfos","Returntype":"(LangInfos, error)","Args":""},{"Uniquefunname":"func IsSupportedLocale(locale string) bool","Funname":"IsSupportedLocale","Returntype":"bool","Args":"locale string"},{"Uniquefunname":"func (info *LangInfo) ToLangCode() *LangCodeInfo","Funname":"ToLangCode","Returntype":"*LangCodeInfo","Args":""},{"Uniquefunname":"func getLangInfoByLocale(locale, config string) (*LangInfo, error)","Funname":"getLangInfoByLocale","Returntype":"(*LangInfo, error)","Args":"locale, config string"},{"Uniquefunname":"func getLangInfosFromFile(config string) (LangInfos, error)","Funname":"getLangInfosFromFile","Returntype":"(LangInfos, error)","Args":"config string"},{"Uniquefunname":"func getSupportedLocaleList(config string) ([]string, error)","Funname":"getSupportedLocaleList","Returntype":"([]string, error)","Args":"config string"},{"Uniquefunname":"func isItemInList(item string, list []string) bool","Funname":"isItemInList","Returntype":"bool","Args":"item string, list []string"},{"Uniquefunname":"func GetLangCodeInfo(locale string) (*LangCodeInfo, error)","Funname":"lang_info.GetLangCodeInfo","Returntype":"(*LangCodeInfo, error)","Args":"locale string"},{"Uniquefunname":"func GetSupportedLangInfos() (LangInfos, error)","Funname":"lang_info.GetSupportedLangInfos","Returntype":"(LangInfos, error)","Args":""},{"Uniquefunname":"func IsSupportedLocale(locale string) bool","Funname":"lang_info.IsSupportedLocale","Returntype":"bool","Args":"locale string"},{"Uniquefunname":"func (info *LangInfo) ToLangCode() *LangCodeInfo","Funname":"lang_info.LangInfo.ToLangCode","Returntype":"*LangCodeInfo","Args":""},{"Uniquefunname":"func (infos LangInfos) Get(locale string) (*LangInfo, error)","Funname":"lang_info.LangInfos.Get","Returntype":"(*LangInfo, error)","Args":"locale string"},{"Uniquefunname":"func getLangInfoByLocale(locale, config string) (*LangInfo, error)","Funname":"lang_info.getLangInfoByLocale","Returntype":"(*LangInfo, error)","Args":"locale, config string"},{"Uniquefunname":"func getLangInfosFromFile(config string) (LangInfos, error)","Funname":"lang_info.getLangInfosFromFile","Returntype":"(LangInfos, error)","Args":"config string"},{"Uniquefunname":"func getSupportedLocaleList(config string) ([]string, error)","Funname":"lang_info.getSupportedLocaleList","Returntype":"([]string, error)","Args":"config string"},{"Uniquefunname":"func isItemInList(item string, list []string) bool","Funname":"lang_info.isItemInList","Returntype":"bool","Args":"item string, list []string"}],"Records":[{"Name":"struct:lang_info.LangCodeInfo","Fields":["lang_info.LangCodeInfo.CountryCode string","lang_info.LangCodeInfo.LangCode string","lang_info.LangCodeInfo.Variant string"]},{"Name":"struct:lang_info.LangInfo","Fields":["lang_info.LangInfo.CountryCode string","lang_info.LangInfo.Description string","lang_info.LangInfo.LangCode string","lang_info.LangInfo.Locale string"]},{"Name":"const:lang_info","Fields":["lang_info.langInfoFile","lang_info.langSupportedFile"]},{"Name":"struct:lang_info.langInfoGroup","Fields":["lang_info.langInfoGroup.Infos LangInfos"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/lang_info/lang_info_test.go","Functions":[{"Uniquefunname":"func TestLangInfo(t *testing.T)","Funname":"TestLangInfo","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSupportedLocale(t *testing.T)","Funname":"TestSupportedLocale","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestLangInfo(t *testing.T)","Funname":"lang_info.TestLangInfo","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSupportedLocale(t *testing.T)","Funname":"lang_info.TestSupportedLocale","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/language_support/lang_support.go","Functions":[{"Uniquefunname":"func (ls *LanguageSupport) ByLocale(locale string, includeInstalled bool) []string","Funname":"ByLocale","Returntype":"[]string","Args":"locale string, includeInstalled bool"},{"Uniquefunname":"func ByPackageAndLocale(package0 string, locale string, includeInstalled bool)(packages []string)","Funname":"ByPackageAndLocale","Returntype":"(packages []string)","Args":"package0 string, locale string, includeInstalled bool"},{"Uniquefunname":"func (ls *LanguageSupport) Destroy()","Funname":"Destroy","Returntype":"","Args":""},{"Uniquefunname":"func NewLanguageSupport() (ls *LanguageSupport, err error)","Funname":"NewLanguageSupport","Returntype":"(ls *LanguageSupport, err error)","Args":""},{"Uniquefunname":"func expendPkgPattern(pattern, locale string) (pkgs []string)","Funname":"expendPkgPattern","Returntype":"(pkgs []string)","Args":"pattern, locale string"},{"Uniquefunname":"func (ls *LanguageSupport) isPkgInstallable(name string) (bool, error)","Funname":"isPkgInstallable","Returntype":"(bool, error)","Args":"name string"},{"Uniquefunname":"func (ls *LanguageSupport) isPkgInstalled(name string) (bool, error)","Funname":"isPkgInstalled","Returntype":"(bool, error)","Args":"name string"},{"Uniquefunname":"func langCodeFromLocale(locale string) string","Funname":"langCodeFromLocale","Returntype":"string","Args":"locale string"},{"Uniquefunname":"func (ls *LanguageSupport) ByLocale(locale string, includeInstalled bool) []string","Funname":"language_support.LanguageSupport.ByLocale","Returntype":"[]string","Args":"locale string, includeInstalled bool"},{"Uniquefunname":"func language_support.LanguageSupport.ByPackageAndLocale(package0 string, locale string, includeInstalled bool)(packages []string)","Funname":"language_support.LanguageSupport.ByPackageAndLocale","Returntype":"(packages []string)","Args":"package0 string, locale string, includeInstalled bool"},{"Uniquefunname":"func (ls *LanguageSupport) Destroy()","Funname":"language_support.LanguageSupport.Destroy","Returntype":"","Args":""},{"Uniquefunname":"func (ls *LanguageSupport) isPkgInstallable(name string) (bool, error)","Funname":"language_support.LanguageSupport.isPkgInstallable","Returntype":"(bool, error)","Args":"name string"},{"Uniquefunname":"func (ls *LanguageSupport) isPkgInstalled(name string) (bool, error)","Funname":"language_support.LanguageSupport.isPkgInstalled","Returntype":"(bool, error)","Args":"name string"},{"Uniquefunname":"func NewLanguageSupport() (ls *LanguageSupport, err error)","Funname":"language_support.NewLanguageSupport","Returntype":"(ls *LanguageSupport, err error)","Args":""},{"Uniquefunname":"func expendPkgPattern(pattern, locale string) (pkgs []string)","Funname":"language_support.expendPkgPattern","Returntype":"(pkgs []string)","Args":"pattern, locale string"},{"Uniquefunname":"func langCodeFromLocale(locale string) string","Funname":"language_support.langCodeFromLocale","Returntype":"string","Args":"locale string"},{"Uniquefunname":"func language_support.parsePkgDepends(filename string)(ret map[string]map[string]map[string][]string, err error)","Funname":"language_support.parsePkgDepends","Returntype":"(ret map[string]map[string]map[string][]string, err error)","Args":"filename string"},{"Uniquefunname":"func parsePkgDepends(filename string)(ret map[string]map[string]map[string][]string, err error)","Funname":"parsePkgDepends","Returntype":"(ret map[string]map[string]map[string][]string, err error)","Args":"filename string"}],"Records":[{"Name":"struct:language_support.LanguageSupport","Fields":["language_support.LanguageSupport.langCountryMap int","language_support.LanguageSupport.pkgDepends map[string]map[string]map[string][]string"]},{"Name":"const:language_support","Fields":["language_support.defaultDependsFile"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/language_support/lang_support_test.go","Functions":[{"Uniquefunname":"func TestExpendPkgPattern(t *testing.T)","Funname":"TestExpendPkgPattern","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestLangCodeFromLocale(t *testing.T)","Funname":"TestLangCodeFromLocale","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestParsePkgDepends(t *testing.T)","Funname":"TestParsePkgDepends","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestExpendPkgPattern(t *testing.T)","Funname":"language_support.TestExpendPkgPattern","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestLangCodeFromLocale(t *testing.T)","Funname":"language_support.TestLangCodeFromLocale","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestParsePkgDepends(t *testing.T)","Funname":"language_support.TestParsePkgDepends","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/powersupply/powersupply.go","Functions":[{"Uniquefunname":"func ACOnline() (bool, bool, error)","Funname":"ACOnline","Returntype":"(bool, bool, error)","Args":""},{"Uniquefunname":"func GetDevices(client *gudev.Client) []*gudev.Device","Funname":"GetDevices","Returntype":"[]*gudev.Device","Args":"client *gudev.Client"},{"Uniquefunname":"func GetSystemBatteryInfos() ([]*battery.BatteryInfo, error)","Funname":"GetSystemBatteryInfos","Returntype":"([]*battery.BatteryInfo, error)","Args":""},{"Uniquefunname":"func IsBattery(dev *gudev.Device) bool","Funname":"IsBattery","Returntype":"bool","Args":"dev *gudev.Device"},{"Uniquefunname":"func IsMains(dev *gudev.Device) bool","Funname":"IsMains","Returntype":"bool","Args":"dev *gudev.Device"},{"Uniquefunname":"func IsSystemBattery(dev *gudev.Device) bool","Funname":"IsSystemBattery","Returntype":"bool","Args":"dev *gudev.Device"},{"Uniquefunname":"func getClient() *gudev.Client","Funname":"getClient","Returntype":"*gudev.Client","Args":""},{"Uniquefunname":"func isSystemPowerSupply(dev *gudev.Device) bool","Funname":"isSystemPowerSupply","Returntype":"bool","Args":"dev *gudev.Device"},{"Uniquefunname":"func ACOnline() (bool, bool, error)","Funname":"powersupply.ACOnline","Returntype":"(bool, bool, error)","Args":""},{"Uniquefunname":"func GetDevices(client *gudev.Client) []*gudev.Device","Funname":"powersupply.GetDevices","Returntype":"[]*gudev.Device","Args":"client *gudev.Client"},{"Uniquefunname":"func GetSystemBatteryInfos() ([]*battery.BatteryInfo, error)","Funname":"powersupply.GetSystemBatteryInfos","Returntype":"([]*battery.BatteryInfo, error)","Args":""},{"Uniquefunname":"func IsBattery(dev *gudev.Device) bool","Funname":"powersupply.IsBattery","Returntype":"bool","Args":"dev *gudev.Device"},{"Uniquefunname":"func IsMains(dev *gudev.Device) bool","Funname":"powersupply.IsMains","Returntype":"bool","Args":"dev *gudev.Device"},{"Uniquefunname":"func IsSystemBattery(dev *gudev.Device) bool","Funname":"powersupply.IsSystemBattery","Returntype":"bool","Args":"dev *gudev.Device"},{"Uniquefunname":"func getClient() *gudev.Client","Funname":"powersupply.getClient","Returntype":"*gudev.Client","Args":""},{"Uniquefunname":"func isSystemPowerSupply(dev *gudev.Device) bool","Funname":"powersupply.isSystemPowerSupply","Returntype":"bool","Args":"dev *gudev.Device"}],"Records":[{"Name":"var:powersupply","Fields":["powersupply.errClientIsNil"]},{"Name":"const:powersupply","Fields":["powersupply.propPsyOnline","powersupply.subsystemPowerSupply"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/powersupply/powersupply_test.go","Functions":[{"Uniquefunname":"func TestACOnline(t *testing.T)","Funname":"TestACOnline","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetSystemBatteryInfos(t *testing.T)","Funname":"TestGetSystemBatteryInfos","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestACOnline(t *testing.T)","Funname":"powersupply.TestACOnline","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetSystemBatteryInfos(t *testing.T)","Funname":"powersupply.TestGetSystemBatteryInfos","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/powersupply/battery/battery.go","Functions":[{"Uniquefunname":"func GetBatteryInfo(bat *gudev.Device) *BatteryInfo","Funname":"GetBatteryInfo","Returntype":"*BatteryInfo","Args":"bat *gudev.Device"},{"Uniquefunname":"func GetBatteryInfo(bat *gudev.Device) *BatteryInfo","Funname":"battery.GetBatteryInfo","Returntype":"*BatteryInfo","Args":"bat *gudev.Device"},{"Uniquefunname":"func clamp(val, min, max float64) float64","Funname":"battery.clamp","Returntype":"float64","Args":"val, min, max float64"},{"Uniquefunname":"func getVoltageDesign(bat *gudev.Device) (voltage float64)","Funname":"battery.getVoltageDesign","Returntype":"(voltage float64)","Args":"bat *gudev.Device"},{"Uniquefunname":"func clamp(val, min, max float64) float64","Funname":"clamp","Returntype":"float64","Args":"val, min, max float64"},{"Uniquefunname":"func getVoltageDesign(bat *gudev.Device) (voltage float64)","Funname":"getVoltageDesign","Returntype":"(voltage float64)","Args":"bat *gudev.Device"}],"Records":[{"Name":"struct:battery.BatteryInfo","Fields":["battery.BatteryInfo.Capacity float64","battery.BatteryInfo.Energy float64","battery.BatteryInfo.EnergyFull float64","battery.BatteryInfo.EnergyFullDesign float64","battery.BatteryInfo.EnergyRate float64","battery.BatteryInfo.Manufacturer string","battery.BatteryInfo.ModelName string","battery.BatteryInfo.Name string","battery.BatteryInfo.Percentage float64","battery.BatteryInfo.SerialNumber string","battery.BatteryInfo.Status Status","battery.BatteryInfo.Technology string","battery.BatteryInfo.TimeToEmpty uint64","battery.BatteryInfo.TimeToFull uint64","battery.BatteryInfo.Voltage float64"]},{"Name":"const:battery","Fields":["battery.pCapacity","battery.pChargeAvg","battery.pChargeFull","battery.pChargeFullDesign","battery.pChargeNow","battery.pCurrentNow","battery.pEnergyAvg","battery.pEnergyFull","battery.pEnergyFullDesign","battery.pEnergyNow","battery.pManufacturer","battery.pModelName","battery.pName","battery.pPowerNow","battery.pPresent","battery.pSerialNumber","battery.pStatus","battery.pTechnology","battery.pVoltageAvg","battery.pVoltageMaxDesign","battery.pVoltageMinDesign","battery.pVoltageNow","battery.pVoltagePresent","battery.prefixPS"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/powersupply/battery/battery_test.go","Functions":[{"Uniquefunname":"func Test_GetDisplayStatus(t *testing.T)","Funname":"Test_GetDisplayStatus","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_parseStatus(t *testing.T)","Funname":"Test_parseStatus","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_GetDisplayStatus(t *testing.T)","Funname":"battery.Test_GetDisplayStatus","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_parseStatus(t *testing.T)","Funname":"battery.Test_parseStatus","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/powersupply/battery/status.go","Functions":[{"Uniquefunname":"func (slice batteryStatusSlice) AllSame() bool","Funname":"AllSame","Returntype":"bool","Args":""},{"Uniquefunname":"func (slice batteryStatusSlice) AnyEqual(val Status) bool","Funname":"AnyEqual","Returntype":"bool","Args":"val Status"},{"Uniquefunname":"func GetDisplayStatus(slice []Status) Status","Funname":"GetDisplayStatus","Returntype":"Status","Args":"slice []Status"},{"Uniquefunname":"func (state Status) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func GetDisplayStatus(slice []Status) Status","Funname":"battery.GetDisplayStatus","Returntype":"Status","Args":"slice []Status"},{"Uniquefunname":"func (state Status) String() string","Funname":"battery.Status.String","Returntype":"string","Args":""},{"Uniquefunname":"func (slice batteryStatusSlice) AllSame() bool","Funname":"battery.batteryStatusSlice.AllSame","Returntype":"bool","Args":""},{"Uniquefunname":"func (slice batteryStatusSlice) AnyEqual(val Status) bool","Funname":"battery.batteryStatusSlice.AnyEqual","Returntype":"bool","Args":"val Status"},{"Uniquefunname":"func parseStatus(val string) Status","Funname":"battery.parseStatus","Returntype":"Status","Args":"val string"},{"Uniquefunname":"func parseStatus(val string) Status","Funname":"parseStatus","Returntype":"Status","Args":"val string"}],"Records":[{"Name":"const:battery","Fields":["battery.StatusCharging","battery.StatusDischarging","battery.StatusFull","battery.StatusNotCharging","battery.StatusUnknown"]},{"Name":"var:battery","Fields":["battery.StatusMap"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/session/session_register.go","Functions":[{"Uniquefunname":"func Register()","Funname":"Register","Returntype":"","Args":""},{"Uniquefunname":"func Register()","Funname":"session.Register","Returntype":"","Args":""}],"Records":null}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/soundutils/shutdown.go","Functions":[{"Uniquefunname":"func GetShutdownSoundConfig() (*ShutdownSoundConfig, error)","Funname":"GetShutdownSoundConfig","Returntype":"(*ShutdownSoundConfig, error)","Args":""},{"Uniquefunname":"func SetShutdownSoundConfig(v *ShutdownSoundConfig) error","Funname":"SetShutdownSoundConfig","Returntype":"error","Args":"v *ShutdownSoundConfig"},{"Uniquefunname":"func GetShutdownSoundConfig() (*ShutdownSoundConfig, error)","Funname":"soundutils.GetShutdownSoundConfig","Returntype":"(*ShutdownSoundConfig, error)","Args":""},{"Uniquefunname":"func SetShutdownSoundConfig(v *ShutdownSoundConfig) error","Funname":"soundutils.SetShutdownSoundConfig","Returntype":"error","Args":"v *ShutdownSoundConfig"}],"Records":[{"Name":"struct:soundutils.ShutdownSoundConfig","Fields":["soundutils.ShutdownSoundConfig.CanPlay bool","soundutils.ShutdownSoundConfig.Device string","soundutils.ShutdownSoundConfig.Event string","soundutils.ShutdownSoundConfig.Theme string"]},{"Name":"const:soundutils","Fields":["soundutils.shutdownSoundFile"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/soundutils/soundplayer.go","Functions":[{"Uniquefunname":"func CanPlayEvent(event string) bool","Funname":"CanPlayEvent","Returntype":"bool","Args":"event string"},{"Uniquefunname":"func GetSoundTheme() string","Funname":"GetSoundTheme","Returntype":"string","Args":""},{"Uniquefunname":"func GetSystemSoundFile(event string) string","Funname":"GetSystemSoundFile","Returntype":"string","Args":"event string"},{"Uniquefunname":"func GetThemeSoundFile(theme, event string) string","Funname":"GetThemeSoundFile","Returntype":"string","Args":"theme, event string"},{"Uniquefunname":"func PlaySystemSound(event, device string) error","Funname":"PlaySystemSound","Returntype":"error","Args":"event, device string"},{"Uniquefunname":"func PlayThemeSound(theme, event, device string) error","Funname":"PlayThemeSound","Returntype":"error","Args":"theme, event, device string"},{"Uniquefunname":"func initPlayer()","Funname":"initPlayer","Returntype":"","Args":""},{"Uniquefunname":"func CanPlayEvent(event string) bool","Funname":"soundutils.CanPlayEvent","Returntype":"bool","Args":"event string"},{"Uniquefunname":"func GetSoundTheme() string","Funname":"soundutils.GetSoundTheme","Returntype":"string","Args":""},{"Uniquefunname":"func GetSystemSoundFile(event string) string","Funname":"soundutils.GetSystemSoundFile","Returntype":"string","Args":"event string"},{"Uniquefunname":"func GetThemeSoundFile(theme, event string) string","Funname":"soundutils.GetThemeSoundFile","Returntype":"string","Args":"theme, event string"},{"Uniquefunname":"func PlaySystemSound(event, device string) error","Funname":"soundutils.PlaySystemSound","Returntype":"error","Args":"event, device string"},{"Uniquefunname":"func PlayThemeSound(theme, event, device string) error","Funname":"soundutils.PlayThemeSound","Returntype":"error","Args":"theme, event, device string"},{"Uniquefunname":"func initPlayer()","Funname":"soundutils.initPlayer","Returntype":"","Args":""}],"Records":[{"Name":"const:soundutils","Fields":["soundutils.EventAudioVolumeChanged","soundutils.EventBatteryLow","soundutils.EventDesktopLogin","soundutils.EventDesktopLogout","soundutils.EventDeviceAdded","soundutils.EventDeviceRemoved","soundutils.EventIconToDesktop","soundutils.EventLogin","soundutils.EventLogout","soundutils.EventPowerPlug","soundutils.EventPowerUnplug","soundutils.EventPowerUnplugBatteryLow","soundutils.EventShutdown","soundutils.EventSuspendResume","soundutils.EventSystemShutdown","soundutils.EventVolumeChanged","soundutils.EventWakeup","soundutils.EventXDeepinAppSentToDesktop","soundutils.appearanceSchema","soundutils.defaultSoundTheme","soundutils.keyEnabled","soundutils.keyPlayer","soundutils.keySoundTheme","soundutils.soundEffectSchema"]},{"Name":"var:soundutils","Fields":["soundutils.UseCache","soundutils.player","soundutils.playerOnce"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/theme_thumb/thumb.go","Functions":[{"Uniquefunname":"func GetCursor(id, descFile string) (string, error)","Funname":"GetCursor","Returntype":"(string, error)","Args":"id, descFile string"},{"Uniquefunname":"func GetGtk(id, descFile string) (string, error)","Funname":"GetGtk","Returntype":"(string, error)","Args":"id, descFile string"},{"Uniquefunname":"func GetIcon(id, descFile string) (string, error)","Funname":"GetIcon","Returntype":"(string, error)","Args":"id, descFile string"},{"Uniquefunname":"func Init(scaleFactor0 float64)","Funname":"Init","Returntype":"","Args":"scaleFactor0 float64"},{"Uniquefunname":"func checkScaleFactor() error","Funname":"checkScaleFactor","Returntype":"error","Args":""},{"Uniquefunname":"func getChangeTime(fileInfo os.FileInfo) time.Time","Funname":"getChangeTime","Returntype":"time.Time","Args":"fileInfo os.FileInfo"},{"Uniquefunname":"func getScaleDir() string","Funname":"getScaleDir","Returntype":"string","Args":""},{"Uniquefunname":"func getTypeDir(type0 string, version int) string","Funname":"getTypeDir","Returntype":"string","Args":"type0 string, version int"},{"Uniquefunname":"func prepareOutputPath(type0, id string, version int) string","Funname":"prepareOutputPath","Returntype":"string","Args":"type0, id string, version int"},{"Uniquefunname":"func removeAllTypesOldVersionDirs()","Funname":"removeAllTypesOldVersionDirs","Returntype":"","Args":""},{"Uniquefunname":"func removeOldVersionDirs(scaleDir, type0 string, version int)","Funname":"removeOldVersionDirs","Returntype":"","Args":"scaleDir, type0 string, version int"},{"Uniquefunname":"func removeUnusedDirs(pattern string, usedDir string)","Funname":"removeUnusedDirs","Returntype":"","Args":"pattern string, usedDir string"},{"Uniquefunname":"func removeUnusedScaleDirs()","Funname":"removeUnusedScaleDirs","Returntype":"","Args":""},{"Uniquefunname":"func shouldGenerateNew(descFile, out string) (bool, error)","Funname":"shouldGenerateNew","Returntype":"(bool, error)","Args":"descFile, out string"},{"Uniquefunname":"func shouldGenerateNewCursor(descFile, out string) (bool, error)","Funname":"shouldGenerateNewCursor","Returntype":"(bool, error)","Args":"descFile, out string"},{"Uniquefunname":"func GetCursor(id, descFile string) (string, error)","Funname":"theme_thumb.GetCursor","Returntype":"(string, error)","Args":"id, descFile string"},{"Uniquefunname":"func GetGtk(id, descFile string) (string, error)","Funname":"theme_thumb.GetGtk","Returntype":"(string, error)","Args":"id, descFile string"},{"Uniquefunname":"func GetIcon(id, descFile string) (string, error)","Funname":"theme_thumb.GetIcon","Returntype":"(string, error)","Args":"id, descFile string"},{"Uniquefunname":"func Init(scaleFactor0 float64)","Funname":"theme_thumb.Init","Returntype":"","Args":"scaleFactor0 float64"},{"Uniquefunname":"func checkScaleFactor() error","Funname":"theme_thumb.checkScaleFactor","Returntype":"error","Args":""},{"Uniquefunname":"func getChangeTime(fileInfo os.FileInfo) time.Time","Funname":"theme_thumb.getChangeTime","Returntype":"time.Time","Args":"fileInfo os.FileInfo"},{"Uniquefunname":"func getScaleDir() string","Funname":"theme_thumb.getScaleDir","Returntype":"string","Args":""},{"Uniquefunname":"func getTypeDir(type0 string, version int) string","Funname":"theme_thumb.getTypeDir","Returntype":"string","Args":"type0 string, version int"},{"Uniquefunname":"func prepareOutputPath(type0, id string, version int) string","Funname":"theme_thumb.prepareOutputPath","Returntype":"string","Args":"type0, id string, version int"},{"Uniquefunname":"func removeAllTypesOldVersionDirs()","Funname":"theme_thumb.removeAllTypesOldVersionDirs","Returntype":"","Args":""},{"Uniquefunname":"func removeOldVersionDirs(scaleDir, type0 string, version int)","Funname":"theme_thumb.removeOldVersionDirs","Returntype":"","Args":"scaleDir, type0 string, version int"},{"Uniquefunname":"func removeUnusedDirs(pattern string, usedDir string)","Funname":"theme_thumb.removeUnusedDirs","Returntype":"","Args":"pattern string, usedDir string"},{"Uniquefunname":"func removeUnusedScaleDirs()","Funname":"theme_thumb.removeUnusedScaleDirs","Returntype":"","Args":""},{"Uniquefunname":"func shouldGenerateNew(descFile, out string) (bool, error)","Funname":"theme_thumb.shouldGenerateNew","Returntype":"(bool, error)","Args":"descFile, out string"},{"Uniquefunname":"func shouldGenerateNewCursor(descFile, out string) (bool, error)","Funname":"theme_thumb.shouldGenerateNewCursor","Returntype":"(bool, error)","Args":"descFile, out string"}],"Records":[{"Name":"var:theme_thumb","Fields":["theme_thumb.cacheDir","theme_thumb.scaleFactor"]},{"Name":"const:theme_thumb","Fields":["theme_thumb.height","theme_thumb.width"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/theme_thumb/common/common.go","Functions":[{"Uniquefunname":"func CompositeIcons(images []image.Image, width, height, iconSize, padding int) image.Image","Funname":"CompositeIcons","Returntype":"image.Image","Args":"images []image.Image, width, height, iconSize, padding int"},{"Uniquefunname":"func SavePngFile(m image.Image, filename string) error","Funname":"SavePngFile","Returntype":"error","Args":"m image.Image, filename string"},{"Uniquefunname":"func CompositeIcons(images []image.Image, width, height, iconSize, padding int) image.Image","Funname":"common.CompositeIcons","Returntype":"image.Image","Args":"images []image.Image, width, height, iconSize, padding int"},{"Uniquefunname":"func SavePngFile(m image.Image, filename string) error","Funname":"common.SavePngFile","Returntype":"error","Args":"m image.Image, filename string"}],"Records":null}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/theme_thumb/cursor/cursor.go","Functions":[{"Uniquefunname":"func Gen(descFile string, width, height int, scaleFactor float64, out string) error","Funname":"Gen","Returntype":"error","Args":"descFile string, width, height int, scaleFactor float64, out string"},{"Uniquefunname":"func Gen(descFile string, width, height int, scaleFactor float64, out string) error","Funname":"cursor.Gen","Returntype":"error","Args":"descFile string, width, height int, scaleFactor float64, out string"},{"Uniquefunname":"func getCursorIcons(dir string, size int) (images []image.Image)","Funname":"cursor.getCursorIcons","Returntype":"(images []image.Image)","Args":"dir string, size int"},{"Uniquefunname":"func getCursorIcons(dir string, size int) (images []image.Image)","Funname":"getCursorIcons","Returntype":"(images []image.Image)","Args":"dir string, size int"}],"Records":[{"Name":"const:cursor","Fields":["cursor.Version","cursor.baseIconSize","cursor.basePadding"]},{"Name":"var:cursor","Fields":["cursor.presentCursors"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/theme_thumb/cursor/load.go","Functions":[{"Uniquefunname":"func destroyXCursorImage(img *C.XcursorImage)","Funname":"cursor.destroyXCursorImage","Returntype":"","Args":"img *C.XcursorImage"},{"Uniquefunname":"func loadXCursor(filename string, size int) (image.Image, error)","Funname":"cursor.loadXCursor","Returntype":"(image.Image, error)","Args":"filename string, size int"},{"Uniquefunname":"func loadXCursorImage(filename string, size int) *C.XcursorImage","Funname":"cursor.loadXCursorImage","Returntype":"*C.XcursorImage","Args":"filename string, size int"},{"Uniquefunname":"func newImageFromXCurorImage(img *C.XcursorImage) image.Image","Funname":"cursor.newImageFromXCurorImage","Returntype":"image.Image","Args":"img *C.XcursorImage"},{"Uniquefunname":"func destroyXCursorImage(img *C.XcursorImage)","Funname":"destroyXCursorImage","Returntype":"","Args":"img *C.XcursorImage"},{"Uniquefunname":"func loadXCursor(filename string, size int) (image.Image, error)","Funname":"loadXCursor","Returntype":"(image.Image, error)","Args":"filename string, size int"},{"Uniquefunname":"func loadXCursorImage(filename string, size int) *C.XcursorImage","Funname":"loadXCursorImage","Returntype":"*C.XcursorImage","Args":"filename string, size int"},{"Uniquefunname":"func newImageFromXCurorImage(img *C.XcursorImage) image.Image","Funname":"newImageFromXCurorImage","Returntype":"image.Image","Args":"img *C.XcursorImage"}],"Records":null}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/theme_thumb/gtk/gtk.go","Functions":[{"Uniquefunname":"func Gen(name string, width, height int, scaleFactor float64, dest string) error","Funname":"Gen","Returntype":"error","Args":"name string, width, height int, scaleFactor float64, dest string"},{"Uniquefunname":"func Gen(name string, width, height int, scaleFactor float64, dest string) error","Funname":"gtk.Gen","Returntype":"error","Args":"name string, width, height int, scaleFactor float64, dest string"}],"Records":[{"Name":"const:gtk","Fields":["gtk.Version","gtk.cmd"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/theme_thumb/icon/icon.go","Functions":[{"Uniquefunname":"func ChooseIcon(theme string, iconNames []string, size int) string","Funname":"ChooseIcon","Returntype":"string","Args":"theme string, iconNames []string, size int"},{"Uniquefunname":"func Gen(theme string, width, height int, scaleFactor float64, out string) error","Funname":"Gen","Returntype":"error","Args":"theme string, width, height int, scaleFactor float64, out string"},{"Uniquefunname":"func cStrv(strv []string) []*C.char","Funname":"cStrv","Returntype":"[]*C.char","Args":"strv []string"},{"Uniquefunname":"func chooseIcon(theme string, iconNames []string, size int) string","Funname":"chooseIcon","Returntype":"string","Args":"theme string, iconNames []string, size int"},{"Uniquefunname":"func getIcons(theme string, size int) (images []image.Image)","Funname":"getIcons","Returntype":"(images []image.Image)","Args":"theme string, size int"},{"Uniquefunname":"func ChooseIcon(theme string, iconNames []string, size int) string","Funname":"icon.ChooseIcon","Returntype":"string","Args":"theme string, iconNames []string, size int"},{"Uniquefunname":"func Gen(theme string, width, height int, scaleFactor float64, out string) error","Funname":"icon.Gen","Returntype":"error","Args":"theme string, width, height int, scaleFactor float64, out string"},{"Uniquefunname":"func cStrv(strv []string) []*C.char","Funname":"icon.cStrv","Returntype":"[]*C.char","Args":"strv []string"},{"Uniquefunname":"func chooseIcon(theme string, iconNames []string, size int) string","Funname":"icon.chooseIcon","Returntype":"string","Args":"theme string, iconNames []string, size int"},{"Uniquefunname":"func getIcons(theme string, size int) (images []image.Image)","Funname":"icon.getIcons","Returntype":"(images []image.Image)","Args":"theme string, size int"},{"Uniquefunname":"func loadIcon(theme string, iconNames []string, size int) (img image.Image, err error)","Funname":"icon.loadIcon","Returntype":"(img image.Image, err error)","Args":"theme string, iconNames []string, size int"},{"Uniquefunname":"func loadOther(filename string) (image.Image, error)","Funname":"icon.loadOther","Returntype":"(image.Image, error)","Args":"filename string"},{"Uniquefunname":"func loadSvg(filename string, size int) (img image.Image, err error)","Funname":"icon.loadSvg","Returntype":"(img image.Image, err error)","Args":"filename string, size int"},{"Uniquefunname":"func loadIcon(theme string, iconNames []string, size int) (img image.Image, err error)","Funname":"loadIcon","Returntype":"(img image.Image, err error)","Args":"theme string, iconNames []string, size int"},{"Uniquefunname":"func loadOther(filename string) (image.Image, error)","Funname":"loadOther","Returntype":"(image.Image, error)","Args":"filename string"},{"Uniquefunname":"func loadSvg(filename string, size int) (img image.Image, err error)","Funname":"loadSvg","Returntype":"(img image.Image, err error)","Args":"filename string, size int"}],"Records":[{"Name":"const:icon","Fields":["icon.Version","icon.baseIconSize","icon.basePadding"]},{"Name":"var:icon","Fields":["icon.presentIcons"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/themes/cursor.go","Functions":[{"Uniquefunname":"func setGtkCursor(name string)","Funname":"setGtkCursor","Returntype":"","Args":"name string"},{"Uniquefunname":"func setQtCursor(name string)","Funname":"setQtCursor","Returntype":"","Args":"name string"},{"Uniquefunname":"func setGtkCursor(name string)","Funname":"themes.setGtkCursor","Returntype":"","Args":"name string"},{"Uniquefunname":"func setQtCursor(name string)","Funname":"themes.setQtCursor","Returntype":"","Args":"name string"}],"Records":null}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/themes/gtk2.go","Functions":[{"Uniquefunname":"func (infos gtk2ConfInfos) Add(key, value string) gtk2ConfInfos","Funname":"Add","Returntype":"gtk2ConfInfos","Args":"key, value string"},{"Uniquefunname":"func (infos gtk2ConfInfos) Get(key string) *gtk2ConfInfo","Funname":"Get","Returntype":"*gtk2ConfInfo","Args":"key string"},{"Uniquefunname":"func gtk2FileReader(file string) gtk2ConfInfos","Funname":"gtk2FileReader","Returntype":"gtk2ConfInfos","Args":"file string"},{"Uniquefunname":"func gtk2FileWriter(infos gtk2ConfInfos, file string) error","Funname":"gtk2FileWriter","Returntype":"error","Args":"infos gtk2ConfInfos, file string"},{"Uniquefunname":"func setGtk2Cursor(name string) error","Funname":"setGtk2Cursor","Returntype":"error","Args":"name string"},{"Uniquefunname":"func setGtk2Icon(name string) error","Funname":"setGtk2Icon","Returntype":"error","Args":"name string"},{"Uniquefunname":"func setGtk2Prop(key, value, file string) error","Funname":"setGtk2Prop","Returntype":"error","Args":"key, value, file string"},{"Uniquefunname":"func setGtk2Theme(name string) error","Funname":"setGtk2Theme","Returntype":"error","Args":"name string"},{"Uniquefunname":"func (infos gtk2ConfInfos) Add(key, value string) gtk2ConfInfos","Funname":"themes.gtk2ConfInfos.Add","Returntype":"gtk2ConfInfos","Args":"key, value string"},{"Uniquefunname":"func (infos gtk2ConfInfos) Get(key string) *gtk2ConfInfo","Funname":"themes.gtk2ConfInfos.Get","Returntype":"*gtk2ConfInfo","Args":"key string"},{"Uniquefunname":"func gtk2FileReader(file string) gtk2ConfInfos","Funname":"themes.gtk2FileReader","Returntype":"gtk2ConfInfos","Args":"file string"},{"Uniquefunname":"func gtk2FileWriter(infos gtk2ConfInfos, file string) error","Funname":"themes.gtk2FileWriter","Returntype":"error","Args":"infos gtk2ConfInfos, file string"},{"Uniquefunname":"func setGtk2Cursor(name string) error","Funname":"themes.setGtk2Cursor","Returntype":"error","Args":"name string"},{"Uniquefunname":"func setGtk2Icon(name string) error","Funname":"themes.setGtk2Icon","Returntype":"error","Args":"name string"},{"Uniquefunname":"func setGtk2Prop(key, value, file string) error","Funname":"themes.setGtk2Prop","Returntype":"error","Args":"key, value, file string"},{"Uniquefunname":"func setGtk2Theme(name string) error","Funname":"themes.setGtk2Theme","Returntype":"error","Args":"name string"}],"Records":[{"Name":"const:themes","Fields":["themes.gtk2ConfDelim"]},{"Name":"var:themes","Fields":["themes.gtk2ConfFile","themes.gtk2Locker"]},{"Name":"struct:themes.gtk2ConfInfo","Fields":["themes.gtk2ConfInfo.key string","themes.gtk2ConfInfo.value string"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/themes/gtk2_test.go","Functions":[{"Uniquefunname":"func TestGtk2Infos(t *testing.T)","Funname":"TestGtk2Infos","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGtk2Infos(t *testing.T)","Funname":"themes.TestGtk2Infos","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/themes/gtk3.go","Functions":[{"Uniquefunname":"func doSetGtk3Prop(key, value, file string, kfile *glib.KeyFile) error","Funname":"doSetGtk3Prop","Returntype":"error","Args":"key, value, file string, kfile *glib.KeyFile"},{"Uniquefunname":"func isGtk3PropEqual(key, value string, kfile *glib.KeyFile) bool","Funname":"isGtk3PropEqual","Returntype":"bool","Args":"key, value string, kfile *glib.KeyFile"},{"Uniquefunname":"func setGtk3Cursor(name string) error","Funname":"setGtk3Cursor","Returntype":"error","Args":"name string"},{"Uniquefunname":"func setGtk3Icon(name string) error","Funname":"setGtk3Icon","Returntype":"error","Args":"name string"},{"Uniquefunname":"func setGtk3Prop(key, value, file string) error","Funname":"setGtk3Prop","Returntype":"error","Args":"key, value, file string"},{"Uniquefunname":"func setGtk3Theme(name string) error","Funname":"setGtk3Theme","Returntype":"error","Args":"name string"},{"Uniquefunname":"func doSetGtk3Prop(key, value, file string, kfile *glib.KeyFile) error","Funname":"themes.doSetGtk3Prop","Returntype":"error","Args":"key, value, file string, kfile *glib.KeyFile"},{"Uniquefunname":"func isGtk3PropEqual(key, value string, kfile *glib.KeyFile) bool","Funname":"themes.isGtk3PropEqual","Returntype":"bool","Args":"key, value string, kfile *glib.KeyFile"},{"Uniquefunname":"func setGtk3Cursor(name string) error","Funname":"themes.setGtk3Cursor","Returntype":"error","Args":"name string"},{"Uniquefunname":"func setGtk3Icon(name string) error","Funname":"themes.setGtk3Icon","Returntype":"error","Args":"name string"},{"Uniquefunname":"func setGtk3Prop(key, value, file string) error","Funname":"themes.setGtk3Prop","Returntype":"error","Args":"key, value, file string"},{"Uniquefunname":"func setGtk3Theme(name string) error","Funname":"themes.setGtk3Theme","Returntype":"error","Args":"name string"}],"Records":[{"Name":"var:themes","Fields":["themes.gtk3ConfFile","themes.gtk3Locker"]},{"Name":"const:themes","Fields":["themes.gtk3GroupSettings","themes.gtk3KeyCursor","themes.gtk3KeyIcon","themes.gtk3KeyTheme"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/themes/gtk3_test.go","Functions":[{"Uniquefunname":"func TestGtk3Prop(t *testing.T)","Funname":"TestGtk3Prop","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGtk3Prop(t *testing.T)","Funname":"themes.TestGtk3Prop","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/themes/settings.go","Functions":[{"Uniquefunname":"func GetCursorTheme() string","Funname":"GetCursorTheme","Returntype":"string","Args":""},{"Uniquefunname":"func SetCursorTheme(name string) error","Funname":"SetCursorTheme","Returntype":"error","Args":"name string"},{"Uniquefunname":"func SetGtkTheme(name string) error","Funname":"SetGtkTheme","Returntype":"error","Args":"name string"},{"Uniquefunname":"func SetIconTheme(name string) error","Funname":"SetIconTheme","Returntype":"error","Args":"name string"},{"Uniquefunname":"func getThemePath(name, ty, key string) string","Funname":"getThemePath","Returntype":"string","Args":"name, ty, key string"},{"Uniquefunname":"func getXSettingsValue(key string) string","Funname":"getXSettingsValue","Returntype":"string","Args":"key string"},{"Uniquefunname":"func setDefaultCursor(name string) bool","Funname":"setDefaultCursor","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func setQTTheme(name string) bool","Funname":"setQTTheme","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func setQt4Theme(config string) bool","Funname":"setQt4Theme","Returntype":"bool","Args":"config string"},{"Uniquefunname":"func setWMCursor(name string)","Funname":"setWMCursor","Returntype":"","Args":"name string"},{"Uniquefunname":"func setWMTheme(name string) bool","Funname":"setWMTheme","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func setXSettingsKey(key, value string) bool","Funname":"setXSettingsKey","Returntype":"bool","Args":"key, value string"},{"Uniquefunname":"func GetCursorTheme() string","Funname":"themes.GetCursorTheme","Returntype":"string","Args":""},{"Uniquefunname":"func SetCursorTheme(name string) error","Funname":"themes.SetCursorTheme","Returntype":"error","Args":"name string"},{"Uniquefunname":"func SetGtkTheme(name string) error","Funname":"themes.SetGtkTheme","Returntype":"error","Args":"name string"},{"Uniquefunname":"func SetIconTheme(name string) error","Funname":"themes.SetIconTheme","Returntype":"error","Args":"name string"},{"Uniquefunname":"func getThemePath(name, ty, key string) string","Funname":"themes.getThemePath","Returntype":"string","Args":"name, ty, key string"},{"Uniquefunname":"func getXSettingsValue(key string) string","Funname":"themes.getXSettingsValue","Returntype":"string","Args":"key string"},{"Uniquefunname":"func setDefaultCursor(name string) bool","Funname":"themes.setDefaultCursor","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func setQTTheme(name string) bool","Funname":"themes.setQTTheme","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func setQt4Theme(config string) bool","Funname":"themes.setQt4Theme","Returntype":"bool","Args":"config string"},{"Uniquefunname":"func setWMCursor(name string)","Funname":"themes.setWMCursor","Returntype":"","Args":"name string"},{"Uniquefunname":"func setWMTheme(name string) bool","Funname":"themes.setWMTheme","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func setXSettingsKey(key, value string) bool","Funname":"themes.setXSettingsKey","Returntype":"bool","Args":"key, value string"}],"Records":[{"Name":"const:themes","Fields":["themes.interfaceSchema","themes.metacitySchema","themes.wmSchema","themes.xsKeyCursorName","themes.xsKeyIconTheme","themes.xsKeyTheme","themes.xsettingsSchema"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/themes/theme.go","Functions":[{"Uniquefunname":"func IsThemeInList(theme string, list []string) bool","Funname":"IsThemeInList","Returntype":"bool","Args":"theme string, list []string"},{"Uniquefunname":"func ListCursorTheme() []string","Funname":"ListCursorTheme","Returntype":"[]string","Args":""},{"Uniquefunname":"func ListGtkTheme() []string","Funname":"ListGtkTheme","Returntype":"[]string","Args":""},{"Uniquefunname":"func ListIconTheme() []string","Funname":"ListIconTheme","Returntype":"[]string","Args":""},{"Uniquefunname":"func doListTheme(local, sys []string, scanner func(string) ([]string, error)) []string","Funname":"doListTheme","Returntype":"[]string","Args":"local, sys []string, scanner func(string) ([]string, error)"},{"Uniquefunname":"func mergeThemeList(src, target []string) []string","Funname":"mergeThemeList","Returntype":"[]string","Args":"src, target []string"},{"Uniquefunname":"func scanThemeDirs(dirs []string, scanner func(string) ([]string, error)) []string","Funname":"scanThemeDirs","Returntype":"[]string","Args":"dirs []string, scanner func(string) ([]string, error)"},{"Uniquefunname":"func IsThemeInList(theme string, list []string) bool","Funname":"themes.IsThemeInList","Returntype":"bool","Args":"theme string, list []string"},{"Uniquefunname":"func ListCursorTheme() []string","Funname":"themes.ListCursorTheme","Returntype":"[]string","Args":""},{"Uniquefunname":"func ListGtkTheme() []string","Funname":"themes.ListGtkTheme","Returntype":"[]string","Args":""},{"Uniquefunname":"func ListIconTheme() []string","Funname":"themes.ListIconTheme","Returntype":"[]string","Args":""},{"Uniquefunname":"func doListTheme(local, sys []string, scanner func(string) ([]string, error)) []string","Funname":"themes.doListTheme","Returntype":"[]string","Args":"local, sys []string, scanner func(string) ([]string, error)"},{"Uniquefunname":"func mergeThemeList(src, target []string) []string","Funname":"themes.mergeThemeList","Returntype":"[]string","Args":"src, target []string"},{"Uniquefunname":"func scanThemeDirs(dirs []string, scanner func(string) ([]string, error)) []string","Funname":"themes.scanThemeDirs","Returntype":"[]string","Args":"dirs []string, scanner func(string) ([]string, error)"}],"Records":null}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/themes/theme_test.go","Functions":[{"Uniquefunname":"func TestMergeThemeList(t *testing.T)","Funname":"TestMergeThemeList","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSetQt4Theme(t *testing.T)","Funname":"TestSetQt4Theme","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestMergeThemeList(t *testing.T)","Funname":"themes.TestMergeThemeList","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSetQt4Theme(t *testing.T)","Funname":"themes.TestSetQt4Theme","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/themes/scanner/scanner.go","Functions":[{"Uniquefunname":"func IsCursorTheme(uri string) bool","Funname":"IsCursorTheme","Returntype":"bool","Args":"uri string"},{"Uniquefunname":"func IsGtkTheme(uri string) bool","Funname":"IsGtkTheme","Returntype":"bool","Args":"uri string"},{"Uniquefunname":"func IsIconTheme(uri string) bool","Funname":"IsIconTheme","Returntype":"bool","Args":"uri string"},{"Uniquefunname":"func ListCursorTheme(uri string) ([]string, error)","Funname":"ListCursorTheme","Returntype":"([]string, error)","Args":"uri string"},{"Uniquefunname":"func ListGtkTheme(uri string) ([]string, error)","Funname":"ListGtkTheme","Returntype":"([]string, error)","Args":"uri string"},{"Uniquefunname":"func ListIconTheme(uri string) ([]string, error)","Funname":"ListIconTheme","Returntype":"([]string, error)","Args":"uri string"},{"Uniquefunname":"func doListTheme(uri string, ty string, filter func(string) bool) ([]string, error)","Funname":"doListTheme","Returntype":"([]string, error)","Args":"uri string, ty string, filter func(string) bool"},{"Uniquefunname":"func isHidden(file, ty string) bool","Funname":"isHidden","Returntype":"bool","Args":"file, ty string"},{"Uniquefunname":"func listSubDir(dir string) ([]string, error)","Funname":"listSubDir","Returntype":"([]string, error)","Args":"dir string"},{"Uniquefunname":"func IsCursorTheme(uri string) bool","Funname":"scanner.IsCursorTheme","Returntype":"bool","Args":"uri string"},{"Uniquefunname":"func IsGtkTheme(uri string) bool","Funname":"scanner.IsGtkTheme","Returntype":"bool","Args":"uri string"},{"Uniquefunname":"func IsIconTheme(uri string) bool","Funname":"scanner.IsIconTheme","Returntype":"bool","Args":"uri string"},{"Uniquefunname":"func ListCursorTheme(uri string) ([]string, error)","Funname":"scanner.ListCursorTheme","Returntype":"([]string, error)","Args":"uri string"},{"Uniquefunname":"func ListGtkTheme(uri string) ([]string, error)","Funname":"scanner.ListGtkTheme","Returntype":"([]string, error)","Args":"uri string"},{"Uniquefunname":"func ListIconTheme(uri string) ([]string, error)","Funname":"scanner.ListIconTheme","Returntype":"([]string, error)","Args":"uri string"},{"Uniquefunname":"func doListTheme(uri string, ty string, filter func(string) bool) ([]string, error)","Funname":"scanner.doListTheme","Returntype":"([]string, error)","Args":"uri string, ty string, filter func(string) bool"},{"Uniquefunname":"func isHidden(file, ty string) bool","Funname":"scanner.isHidden","Returntype":"bool","Args":"file, ty string"},{"Uniquefunname":"func listSubDir(dir string) ([]string, error)","Funname":"scanner.listSubDir","Returntype":"([]string, error)","Args":"dir string"}],"Records":[{"Name":"const:scanner","Fields":["scanner.ThemeTypeCursor","scanner.ThemeTypeGtk","scanner.ThemeTypeIcon"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/themes/scanner/scanner_test.go","Functions":[{"Uniquefunname":"func TestListCursorTheme(t *testing.T)","Funname":"TestListCursorTheme","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestListGtkTheme(t *testing.T)","Funname":"TestListGtkTheme","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestListIconTheme(t *testing.T)","Funname":"TestListIconTheme","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestThemeHidden(t *testing.T)","Funname":"TestThemeHidden","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestListCursorTheme(t *testing.T)","Funname":"scanner.TestListCursorTheme","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestListGtkTheme(t *testing.T)","Funname":"scanner.TestListGtkTheme","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestListIconTheme(t *testing.T)","Funname":"scanner.TestListIconTheme","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestThemeHidden(t *testing.T)","Funname":"scanner.TestThemeHidden","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/thumbnails.go","Functions":[{"Uniquefunname":"func GenThumbnail(uri string, size int) (string, error)","Funname":"GenThumbnail","Returntype":"(string, error)","Args":"uri string, size int"},{"Uniquefunname":"func GenThumbnailWithMime(uri, ty string, size int) (string, error)","Funname":"GenThumbnailWithMime","Returntype":"(string, error)","Args":"uri, ty string, size int"},{"Uniquefunname":"func correctSize(size int) int","Funname":"correctSize","Returntype":"int","Args":"size int"},{"Uniquefunname":"func GenThumbnail(uri string, size int) (string, error)","Funname":"thumbnails.GenThumbnail","Returntype":"(string, error)","Args":"uri string, size int"},{"Uniquefunname":"func GenThumbnailWithMime(uri, ty string, size int) (string, error)","Funname":"thumbnails.GenThumbnailWithMime","Returntype":"(string, error)","Args":"uri, ty string, size int"},{"Uniquefunname":"func correctSize(size int) int","Funname":"thumbnails.correctSize","Returntype":"int","Args":"size int"}],"Records":null}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/thumbnails_test.go","Functions":[{"Uniquefunname":"func TestCorrectSize(t *testing.T)","Funname":"TestCorrectSize","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestCorrectSize(t *testing.T)","Funname":"thumbnails.TestCorrectSize","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/cursor/cursor.go","Functions":[{"Uniquefunname":"func GenThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"GenThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func ThumbnailForTheme(src, bg string, width, height int, force bool) (string, error)","Funname":"ThumbnailForTheme","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func GenThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"cursor.GenThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"cursor.SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func ThumbnailForTheme(src, bg string, width, height int, force bool) (string, error)","Funname":"cursor.ThumbnailForTheme","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func genCursorThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"cursor.genCursorThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func getThumbDest(src string, width, height int, theme bool) (string, error)","Funname":"cursor.getThumbDest","Returntype":"(string, error)","Args":"src string, width, height int, theme bool"},{"Uniquefunname":"func init()","Funname":"cursor.init","Returntype":"","Args":""},{"Uniquefunname":"func genCursorThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"genCursorThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func getThumbDest(src string, width, height int, theme bool) (string, error)","Funname":"getThumbDest","Returntype":"(string, error)","Args":"src string, width, height int, theme bool"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""}],"Records":[{"Name":"const:cursor","Fields":["cursor.sysThemeThumbDir"]},{"Name":"var:cursor","Fields":["cursor.themeThumbDir"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/cursor/thumbnail.go","Functions":[{"Uniquefunname":"func cursor.doGenThumbnail(src, bg, dest string, width, height int, force, theme bool)(string, error)","Funname":"cursor.doGenThumbnail","Returntype":"(string, error)","Args":"src, bg, dest string, width, height int, force, theme bool"},{"Uniquefunname":"func getCursorIcons(dir, cacheDir string) []string","Funname":"cursor.getCursorIcons","Returntype":"[]string","Args":"dir, cacheDir string"},{"Uniquefunname":"func doGenThumbnail(src, bg, dest string, width, height int, force, theme bool)(string, error)","Funname":"doGenThumbnail","Returntype":"(string, error)","Args":"src, bg, dest string, width, height int, force, theme bool"},{"Uniquefunname":"func getCursorIcons(dir, cacheDir string) []string","Funname":"getCursorIcons","Returntype":"[]string","Args":"dir, cacheDir string"}],"Records":[{"Name":"const:cursor","Fields":["cursor.defaultHeight","cursor.defaultIconSize","cursor.defaultPadding","cursor.defaultWidth"]},{"Name":"var:cursor","Fields":["cursor.presentCursors"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/cursor/xcur2png.go","Functions":[{"Uniquefunname":"func XCursorToPng(filename, destDir string) (string, error)","Funname":"XCursorToPng","Returntype":"(string, error)","Args":"filename, destDir string"},{"Uniquefunname":"func XCursorToPng(filename, destDir string) (string, error)","Funname":"cursor.XCursorToPng","Returntype":"(string, error)","Args":"filename, destDir string"},{"Uniquefunname":"func destroyXCursorImage(img *C.XcursorImage)","Funname":"cursor.destroyXCursorImage","Returntype":"","Args":"img *C.XcursorImage"},{"Uniquefunname":"func loadXCursorImage(filename string, size int) *C.XcursorImage","Funname":"cursor.loadXCursorImage","Returntype":"*C.XcursorImage","Args":"filename string, size int"},{"Uniquefunname":"func newImageFromXCurorImage(img *C.XcursorImage) image.Image","Funname":"cursor.newImageFromXCurorImage","Returntype":"image.Image","Args":"img *C.XcursorImage"},{"Uniquefunname":"func savePngFile(m image.Image, filename string) error","Funname":"cursor.savePngFile","Returntype":"error","Args":"m image.Image, filename string"},{"Uniquefunname":"func destroyXCursorImage(img *C.XcursorImage)","Funname":"destroyXCursorImage","Returntype":"","Args":"img *C.XcursorImage"},{"Uniquefunname":"func loadXCursorImage(filename string, size int) *C.XcursorImage","Funname":"loadXCursorImage","Returntype":"*C.XcursorImage","Args":"filename string, size int"},{"Uniquefunname":"func newImageFromXCurorImage(img *C.XcursorImage) image.Image","Funname":"newImageFromXCurorImage","Returntype":"image.Image","Args":"img *C.XcursorImage"},{"Uniquefunname":"func savePngFile(m image.Image, filename string) error","Funname":"savePngFile","Returntype":"error","Args":"m image.Image, filename string"}],"Records":null}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/font/font.go","Functions":[{"Uniquefunname":"func GenThumbnail(src string, width, height int, force bool) (string, error)","Funname":"GenThumbnail","Returntype":"(string, error)","Args":"src string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func GenThumbnail(src string, width, height int, force bool) (string, error)","Funname":"font.GenThumbnail","Returntype":"(string, error)","Args":"src string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"font.SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func genFontThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"font.genFontThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func init()","Funname":"font.init","Returntype":"","Args":""},{"Uniquefunname":"func genFontThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"genFontThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""}],"Records":[{"Name":"const:font","Fields":["font.FontTypeOTF","font.FontTypeTTF"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/font/wrapper.go","Functions":[{"Uniquefunname":"func doGenThumbnail(file, dest string, width, height int) (string, error)","Funname":"doGenThumbnail","Returntype":"(string, error)","Args":"file, dest string, width, height int"},{"Uniquefunname":"func doGenThumbnail(file, dest string, width, height int) (string, error)","Funname":"font.doGenThumbnail","Returntype":"(string, error)","Args":"file, dest string, width, height int"},{"Uniquefunname":"func getThumbSize(width, height int) int","Funname":"font.getThumbSize","Returntype":"int","Args":"width, height int"},{"Uniquefunname":"func getThumbSize(width, height int) int","Funname":"getThumbSize","Returntype":"int","Args":"width, height int"}],"Records":null}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/gtk/gtk.go","Functions":[{"Uniquefunname":"func GenThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"GenThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func ThumbnailForTheme(src, bg string, width, height int, force bool) (string, error)","Funname":"ThumbnailForTheme","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func doGenThumbnail(name, bg, dest string, width, height int, force bool) (string, error)","Funname":"doGenThumbnail","Returntype":"(string, error)","Args":"name, bg, dest string, width, height int, force bool"},{"Uniquefunname":"func genGtkThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"genGtkThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func getThumbDest(src string, width, height int, theme bool) (string, error)","Funname":"getThumbDest","Returntype":"(string, error)","Args":"src string, width, height int, theme bool"},{"Uniquefunname":"func GenThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"gtk.GenThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"gtk.SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func ThumbnailForTheme(src, bg string, width, height int, force bool) (string, error)","Funname":"gtk.ThumbnailForTheme","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func doGenThumbnail(name, bg, dest string, width, height int, force bool) (string, error)","Funname":"gtk.doGenThumbnail","Returntype":"(string, error)","Args":"name, bg, dest string, width, height int, force bool"},{"Uniquefunname":"func genGtkThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"gtk.genGtkThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func getThumbDest(src string, width, height int, theme bool) (string, error)","Funname":"gtk.getThumbDest","Returntype":"(string, error)","Args":"src string, width, height int, theme bool"},{"Uniquefunname":"func init()","Funname":"gtk.init","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""}],"Records":[{"Name":"const:gtk","Fields":["gtk.cmdGtkThumbnailer","gtk.sysThemeThumbDir"]},{"Name":"var:gtk","Fields":["gtk.themeThumbDir"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/icon/icon.go","Functions":[{"Uniquefunname":"func GenThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"GenThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func ThumbnailForTheme(src, bg string, width, height int, force bool) (string, error)","Funname":"ThumbnailForTheme","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func genIconThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"genIconThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func getThumbDest(src string, width, height int, theme bool) (string, error)","Funname":"getThumbDest","Returntype":"(string, error)","Args":"src string, width, height int, theme bool"},{"Uniquefunname":"func GenThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"icon.GenThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"icon.SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func ThumbnailForTheme(src, bg string, width, height int, force bool) (string, error)","Funname":"icon.ThumbnailForTheme","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func genIconThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"icon.genIconThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func getThumbDest(src string, width, height int, theme bool) (string, error)","Funname":"icon.getThumbDest","Returntype":"(string, error)","Args":"src string, width, height int, theme bool"},{"Uniquefunname":"func init()","Funname":"icon.init","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""}],"Records":[{"Name":"const:icon","Fields":["icon.sysThemeThumbDir"]},{"Name":"var:icon","Fields":["icon.themeThumbDir"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/icon/thumbnail.go","Functions":[{"Uniquefunname":"func doGenThumbnail(src, bg, dest string, width, height int, force, theme bool)(string, error)","Funname":"doGenThumbnail","Returntype":"(string, error)","Args":"src, bg, dest string, width, height int, force, theme bool"},{"Uniquefunname":"func fixIconFiles(files []string) []string","Funname":"fixIconFiles","Returntype":"[]string","Args":"files []string"},{"Uniquefunname":"func getIconFiles(theme string) []string","Funname":"getIconFiles","Returntype":"[]string","Args":"theme string"},{"Uniquefunname":"func icon.doGenThumbnail(src, bg, dest string, width, height int, force, theme bool)(string, error)","Funname":"icon.doGenThumbnail","Returntype":"(string, error)","Args":"src, bg, dest string, width, height int, force, theme bool"},{"Uniquefunname":"func fixIconFiles(files []string) []string","Funname":"icon.fixIconFiles","Returntype":"[]string","Args":"files []string"},{"Uniquefunname":"func getIconFiles(theme string) []string","Funname":"icon.getIconFiles","Returntype":"[]string","Args":"theme string"}],"Records":[{"Name":"const:icon","Fields":["icon.defaultHeight","icon.defaultIconSize","icon.defaultPadding","icon.defaultWidth"]},{"Name":"var:icon","Fields":["icon.presentIcons"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/icon/wrapper.go","Functions":[{"Uniquefunname":"func ChooseIcon(theme string, names []string) string","Funname":"ChooseIcon","Returntype":"string","Args":"theme string, names []string"},{"Uniquefunname":"func StrvInC(strv []string) []*C.char","Funname":"StrvInC","Returntype":"[]*C.char","Args":"strv []string"},{"Uniquefunname":"func ChooseIcon(theme string, names []string) string","Funname":"icon.ChooseIcon","Returntype":"string","Args":"theme string, names []string"},{"Uniquefunname":"func StrvInC(strv []string) []*C.char","Funname":"icon.StrvInC","Returntype":"[]*C.char","Args":"strv []string"}],"Records":null}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/images/images.go","Functions":[{"Uniquefunname":"func GenThumbnail(src string, width, height int, force bool) (string, error)","Funname":"GenThumbnail","Returntype":"(string, error)","Args":"src string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func ThumbnailForTheme(src string, width, height int, force bool) (string, error)","Funname":"ThumbnailForTheme","Returntype":"(string, error)","Args":"src string, width, height int, force bool"},{"Uniquefunname":"func doGenThumbnail(src, bg, dest string, width, height int, force, theme bool)(string, error)","Funname":"doGenThumbnail","Returntype":"(string, error)","Args":"src, bg, dest string, width, height int, force, theme bool"},{"Uniquefunname":"func genImageThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"genImageThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func genSvgThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"genSvgThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func getThumbDest(src string, width, height int, theme bool) (string, error)","Funname":"getThumbDest","Returntype":"(string, error)","Args":"src string, width, height int, theme bool"},{"Uniquefunname":"func GenThumbnail(src string, width, height int, force bool) (string, error)","Funname":"images.GenThumbnail","Returntype":"(string, error)","Args":"src string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"images.SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func ThumbnailForTheme(src string, width, height int, force bool) (string, error)","Funname":"images.ThumbnailForTheme","Returntype":"(string, error)","Args":"src string, width, height int, force bool"},{"Uniquefunname":"func images.doGenThumbnail(src, bg, dest string, width, height int, force, theme bool)(string, error)","Funname":"images.doGenThumbnail","Returntype":"(string, error)","Args":"src, bg, dest string, width, height int, force, theme bool"},{"Uniquefunname":"func genImageThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"images.genImageThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func genSvgThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"images.genSvgThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func getThumbDest(src string, width, height int, theme bool) (string, error)","Funname":"images.getThumbDest","Returntype":"(string, error)","Args":"src string, width, height int, theme bool"},{"Uniquefunname":"func init()","Funname":"images.init","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""}],"Records":[{"Name":"const:images","Fields":["images.ImageTypeBmp","images.ImageTypeGif","images.ImageTypeJpeg","images.ImageTypePng","images.ImageTypeSvg","images.ImageTypeTiff","images.sysThemeThumbDir"]},{"Name":"var:images","Fields":["images.themeThumbDir"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/images/wrapper.go","Functions":[{"Uniquefunname":"func svgToPng(src, dest string) error","Funname":"images.svgToPng","Returntype":"error","Args":"src, dest string"},{"Uniquefunname":"func svgToPng(src, dest string) error","Funname":"svgToPng","Returntype":"error","Args":"src, dest string"}],"Records":null}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/loader/loader.go","Functions":[{"Uniquefunname":"func (m *Manager) Add(ty string, handler HandleType) error","Funname":"Add","Returntype":"error","Args":"ty string, handler HandleType"},{"Uniquefunname":"func CompositeIcons(icons []string, bg, dest string, iconSize, width, height, padding int)error","Funname":"CompositeIcons","Returntype":"error","Args":"icons []string, bg, dest string, iconSize, width, height, padding int"},{"Uniquefunname":"func (m *Manager) Delete(ty string)","Funname":"Delete","Returntype":"","Args":"ty string"},{"Uniquefunname":"func (m *Manager) Get(ty string) HandleType","Funname":"Get","Returntype":"HandleType","Args":"ty string"},{"Uniquefunname":"func GetBackground(width, height int) (string, error)","Funname":"GetBackground","Returntype":"(string, error)","Args":"width, height int"},{"Uniquefunname":"func GetHandler(ty string) (HandleType, error)","Funname":"GetHandler","Returntype":"(HandleType, error)","Args":"ty string"},{"Uniquefunname":"func GetThumbnailDest(uri string, width, height int) (string, error)","Funname":"GetThumbnailDest","Returntype":"(string, error)","Args":"uri string, width, height int"},{"Uniquefunname":"func GetTmpImage() string","Funname":"GetTmpImage","Returntype":"string","Args":""},{"Uniquefunname":"func IsStrInList(item string, items []string) bool","Funname":"IsStrInList","Returntype":"bool","Args":"item string, items []string"},{"Uniquefunname":"func Register(ty string, handler HandleType)","Funname":"Register","Returntype":"","Args":"ty string, handler HandleType"},{"Uniquefunname":"func ScaleImage(src, dest string, width, height int) error","Funname":"ScaleImage","Returntype":"error","Args":"src, dest string, width, height int"},{"Uniquefunname":"func ThumbnailImage(src, dest string, width, height int) error","Funname":"ThumbnailImage","Returntype":"error","Args":"src, dest string, width, height int"},{"Uniquefunname":"func getFileModTime(file string) string","Funname":"getFileModTime","Returntype":"string","Args":"file string"},{"Uniquefunname":"func loader.CompositeIcons(icons []string, bg, dest string, iconSize, width, height, padding int)error","Funname":"loader.CompositeIcons","Returntype":"error","Args":"icons []string, bg, dest string, iconSize, width, height, padding int"},{"Uniquefunname":"func GetBackground(width, height int) (string, error)","Funname":"loader.GetBackground","Returntype":"(string, error)","Args":"width, height int"},{"Uniquefunname":"func GetHandler(ty string) (HandleType, error)","Funname":"loader.GetHandler","Returntype":"(HandleType, error)","Args":"ty string"},{"Uniquefunname":"func GetThumbnailDest(uri string, width, height int) (string, error)","Funname":"loader.GetThumbnailDest","Returntype":"(string, error)","Args":"uri string, width, height int"},{"Uniquefunname":"func GetTmpImage() string","Funname":"loader.GetTmpImage","Returntype":"string","Args":""},{"Uniquefunname":"func IsStrInList(item string, items []string) bool","Funname":"loader.IsStrInList","Returntype":"bool","Args":"item string, items []string"},{"Uniquefunname":"func (m *Manager) Add(ty string, handler HandleType) error","Funname":"loader.Manager.Add","Returntype":"error","Args":"ty string, handler HandleType"},{"Uniquefunname":"func (m *Manager) Delete(ty string)","Funname":"loader.Manager.Delete","Returntype":"","Args":"ty string"},{"Uniquefunname":"func (m *Manager) Get(ty string) HandleType","Funname":"loader.Manager.Get","Returntype":"HandleType","Args":"ty string"},{"Uniquefunname":"func Register(ty string, handler HandleType)","Funname":"loader.Register","Returntype":"","Args":"ty string, handler HandleType"},{"Uniquefunname":"func ScaleImage(src, dest string, width, height int) error","Funname":"loader.ScaleImage","Returntype":"error","Args":"src, dest string, width, height int"},{"Uniquefunname":"func ThumbnailImage(src, dest string, width, height int) error","Funname":"loader.ThumbnailImage","Returntype":"error","Args":"src, dest string, width, height int"},{"Uniquefunname":"func getFileModTime(file string) string","Funname":"loader.getFileModTime","Returntype":"string","Args":"file string"}],"Records":[{"Name":"struct:loader.Manager","Fields":["loader.Manager.handlers map[string]HandleType","loader.Manager.locker *sync.RWMutex"]},{"Name":"const:loader","Fields":["loader.SizeFlagLarge","loader.SizeFlagNormal","loader.SizeFlagSmall","loader.thumbVersion"]},{"Name":"var:loader","Fields":["loader.getManager","loader.mInitializer"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/pdf/pdf.go","Functions":[{"Uniquefunname":"func GenThumbnail(uri string, width, height int, force bool) (string, error)","Funname":"GenThumbnail","Returntype":"(string, error)","Args":"uri string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func genPDFThumbnail(uri, bg string, width, height int, force bool) (string, error)","Funname":"genPDFThumbnail","Returntype":"(string, error)","Args":"uri, bg string, width, height int, force bool"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func GenThumbnail(uri string, width, height int, force bool) (string, error)","Funname":"pdf.GenThumbnail","Returntype":"(string, error)","Args":"uri string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"pdf.SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func genPDFThumbnail(uri, bg string, width, height int, force bool) (string, error)","Funname":"pdf.genPDFThumbnail","Returntype":"(string, error)","Args":"uri, bg string, width, height int, force bool"},{"Uniquefunname":"func init()","Funname":"pdf.init","Returntype":"","Args":""}],"Records":[{"Name":"const:pdf","Fields":["pdf.PDFTypePDF"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/pdf/wrapper.go","Functions":[{"Uniquefunname":"func doGenThumbnail(uri, dest string, width, height int) (string, error)","Funname":"doGenThumbnail","Returntype":"(string, error)","Args":"uri, dest string, width, height int"},{"Uniquefunname":"func doGenThumbnail(uri, dest string, width, height int) (string, error)","Funname":"pdf.doGenThumbnail","Returntype":"(string, error)","Args":"uri, dest string, width, height int"}],"Records":null}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/text/text.go","Functions":[{"Uniquefunname":"func GenThumbnail(src string, width, height int, force bool) (string, error)","Funname":"GenThumbnail","Returntype":"(string, error)","Args":"src string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func genTextThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"genTextThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func GenThumbnail(src string, width, height int, force bool) (string, error)","Funname":"text.GenThumbnail","Returntype":"(string, error)","Args":"src string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"text.SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func genTextThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"text.genTextThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func init()","Funname":"text.init","Returntype":"","Args":""}],"Records":[{"Name":"const:text","Fields":["text.TextTypeC","text.TextTypeCpp","text.TextTypeGo","text.TextTypeText"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/thumbnails/text/wrapper.go","Functions":[{"Uniquefunname":"func doGenThumbnail(src, dest string, width, height int) (string, error)","Funname":"doGenThumbnail","Returntype":"(string, error)","Args":"src, dest string, width, height int"},{"Uniquefunname":"func freeCStrv(strv []*C.char)","Funname":"freeCStrv","Returntype":"","Args":"strv []*C.char"},{"Uniquefunname":"func getThumbInfo(width, height int) *thumbInfo","Funname":"getThumbInfo","Returntype":"*thumbInfo","Args":"width, height int"},{"Uniquefunname":"func readFile(file string, info *thumbInfo) ([]*C.char, error)","Funname":"readFile","Returntype":"([]*C.char, error)","Args":"file string, info *thumbInfo"},{"Uniquefunname":"func strvToCStrv(strv []string, bytesPerLine int) []*C.char","Funname":"strvToCStrv","Returntype":"[]*C.char","Args":"strv []string, bytesPerLine int"},{"Uniquefunname":"func doGenThumbnail(src, dest string, width, height int) (string, error)","Funname":"text.doGenThumbnail","Returntype":"(string, error)","Args":"src, dest string, width, height int"},{"Uniquefunname":"func freeCStrv(strv []*C.char)","Funname":"text.freeCStrv","Returntype":"","Args":"strv []*C.char"},{"Uniquefunname":"func getThumbInfo(width, height int) *thumbInfo","Funname":"text.getThumbInfo","Returntype":"*thumbInfo","Args":"width, height int"},{"Uniquefunname":"func readFile(file string, info *thumbInfo) ([]*C.char, error)","Funname":"text.readFile","Returntype":"([]*C.char, error)","Args":"file string, info *thumbInfo"},{"Uniquefunname":"func strvToCStrv(strv []string, bytesPerLine int) []*C.char","Funname":"text.strvToCStrv","Returntype":"[]*C.char","Args":"strv []string, bytesPerLine int"}],"Records":[{"Name":"const:text","Fields":["text.defaultDPI","text.defaultScale"]},{"Name":"struct:text.thumbInfo","Fields":["text.thumbInfo.canvasHeight int","text.thumbInfo.canvasWidth int","text.thumbInfo.fontsize int","text.thumbInfo.height int","text.thumbInfo.pixelsize int","text.thumbInfo.width int","text.thumbInfo.xborder int","text.thumbInfo.yborder int"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/userenv/userenv.go","Functions":[{"Uniquefunname":"func DefaultFile() string","Funname":"DefaultFile","Returntype":"string","Args":""},{"Uniquefunname":"func Delete(key string) error","Funname":"Delete","Returntype":"error","Args":"key string"},{"Uniquefunname":"func DeleteFromFile(filename, key string) error","Funname":"DeleteFromFile","Returntype":"error","Args":"filename, key string"},{"Uniquefunname":"func Get(key string) (string, error)","Funname":"Get","Returntype":"(string, error)","Args":"key string"},{"Uniquefunname":"func GetFromFile(filename, key string) (string, error)","Funname":"GetFromFile","Returntype":"(string, error)","Args":"filename, key string"},{"Uniquefunname":"func Load() (map[string]string, error)","Funname":"Load","Returntype":"(map[string]string, error)","Args":""},{"Uniquefunname":"func LoadFromFile(filename string) (map[string]string, error)","Funname":"LoadFromFile","Returntype":"(map[string]string, error)","Args":"filename string"},{"Uniquefunname":"func Modify(fn func(map[string]string)) error","Funname":"Modify","Returntype":"error","Args":"fn func(map[string]string)"},{"Uniquefunname":"func ModifyAndSaveToFile(filename string, fn func(map[string]string)) error","Funname":"ModifyAndSaveToFile","Returntype":"error","Args":"filename string, fn func(map[string]string)"},{"Uniquefunname":"func Save(m map[string]string) error","Funname":"Save","Returntype":"error","Args":"m map[string]string"},{"Uniquefunname":"func SaveToFile(filename string, m map[string]string) error","Funname":"SaveToFile","Returntype":"error","Args":"filename string, m map[string]string"},{"Uniquefunname":"func Set(key, value string) error","Funname":"Set","Returntype":"error","Args":"key, value string"},{"Uniquefunname":"func SetAndSaveToFile(filename, key, value string) error","Funname":"SetAndSaveToFile","Returntype":"error","Args":"filename, key, value string"},{"Uniquefunname":"func bashQuote(str string) (string, error)","Funname":"bashQuote","Returntype":"(string, error)","Args":"str string"},{"Uniquefunname":"func bashUnquote(str string) (string, error)","Funname":"bashUnquote","Returntype":"(string, error)","Args":"str string"},{"Uniquefunname":"func isSpecialChar(char byte) bool","Funname":"isSpecialChar","Returntype":"bool","Args":"char byte"},{"Uniquefunname":"func DefaultFile() string","Funname":"userenv.DefaultFile","Returntype":"string","Args":""},{"Uniquefunname":"func Delete(key string) error","Funname":"userenv.Delete","Returntype":"error","Args":"key string"},{"Uniquefunname":"func DeleteFromFile(filename, key string) error","Funname":"userenv.DeleteFromFile","Returntype":"error","Args":"filename, key string"},{"Uniquefunname":"func Get(key string) (string, error)","Funname":"userenv.Get","Returntype":"(string, error)","Args":"key string"},{"Uniquefunname":"func GetFromFile(filename, key string) (string, error)","Funname":"userenv.GetFromFile","Returntype":"(string, error)","Args":"filename, key string"},{"Uniquefunname":"func Load() (map[string]string, error)","Funname":"userenv.Load","Returntype":"(map[string]string, error)","Args":""},{"Uniquefunname":"func LoadFromFile(filename string) (map[string]string, error)","Funname":"userenv.LoadFromFile","Returntype":"(map[string]string, error)","Args":"filename string"},{"Uniquefunname":"func Modify(fn func(map[string]string)) error","Funname":"userenv.Modify","Returntype":"error","Args":"fn func(map[string]string)"},{"Uniquefunname":"func ModifyAndSaveToFile(filename string, fn func(map[string]string)) error","Funname":"userenv.ModifyAndSaveToFile","Returntype":"error","Args":"filename string, fn func(map[string]string)"},{"Uniquefunname":"func Save(m map[string]string) error","Funname":"userenv.Save","Returntype":"error","Args":"m map[string]string"},{"Uniquefunname":"func SaveToFile(filename string, m map[string]string) error","Funname":"userenv.SaveToFile","Returntype":"error","Args":"filename string, m map[string]string"},{"Uniquefunname":"func Set(key, value string) error","Funname":"userenv.Set","Returntype":"error","Args":"key, value string"},{"Uniquefunname":"func SetAndSaveToFile(filename, key, value string) error","Funname":"userenv.SetAndSaveToFile","Returntype":"error","Args":"filename, key, value string"},{"Uniquefunname":"func bashQuote(str string) (string, error)","Funname":"userenv.bashQuote","Returntype":"(string, error)","Args":"str string"},{"Uniquefunname":"func bashUnquote(str string) (string, error)","Funname":"userenv.bashUnquote","Returntype":"(string, error)","Args":"str string"},{"Uniquefunname":"func isSpecialChar(char byte) bool","Funname":"userenv.isSpecialChar","Returntype":"bool","Args":"char byte"},{"Uniquefunname":"func writeTo(w io.Writer, m map[string]string) error","Funname":"userenv.writeTo","Returntype":"error","Args":"w io.Writer, m map[string]string"},{"Uniquefunname":"func writeTo(w io.Writer, m map[string]string) error","Funname":"writeTo","Returntype":"error","Args":"w io.Writer, m map[string]string"}],"Records":[{"Name":"var:userenv","Fields":["userenv.defaultFile","userenv.regLine"]}]}
{"Filepath":"debian/tmp/usr/share/gocode/src/pkg.deepin.io/dde/api/userenv/userenv_test.go","Functions":[{"Uniquefunname":"func TestBashQuote(t *testing.T)","Funname":"TestBashQuote","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestBashUnquote(t *testing.T)","Funname":"TestBashUnquote","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestLoadFromFile(t *testing.T)","Funname":"TestLoadFromFile","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestBashQuote(t *testing.T)","Funname":"userenv.TestBashQuote","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestBashUnquote(t *testing.T)","Funname":"userenv.TestBashUnquote","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestLoadFromFile(t *testing.T)","Funname":"userenv.TestLoadFromFile","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"deepin-shutdown-sound/main.go","Functions":[{"Uniquefunname":"func doPlayShutdownSound(theme, event, device string) error","Funname":"doPlayShutdownSound","Returntype":"error","Args":"theme, event, device string"},{"Uniquefunname":"func handleSignal()","Funname":"handleSignal","Returntype":"","Args":""},{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func doPlayShutdownSound(theme, event, device string) error","Funname":"main.doPlayShutdownSound","Returntype":"error","Args":"theme, event, device string"},{"Uniquefunname":"func handleSignal()","Funname":"main.handleSignal","Returntype":"","Args":""},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""}],"Records":[{"Name":"var:main","Fields":["main.logger"]}]}
{"Filepath":"device/device.go","Functions":[{"Uniquefunname":"func (*Device) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (d *Device) HasBluetoothDeviceBlocked() (bool, *dbus.Error)","Funname":"HasBluetoothDeviceBlocked","Returntype":"(bool, *dbus.Error)","Args":""},{"Uniquefunname":"func (d *Device) UnblockBluetoothDevices(sender dbus.Sender) *dbus.Error","Funname":"UnblockBluetoothDevices","Returntype":"*dbus.Error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (d *Device) canQuit() bool","Funname":"canQuit","Returntype":"bool","Args":""},{"Uniquefunname":"func checkAuthorization(actionId string, sysBusName string) (bool, error)","Funname":"checkAuthorization","Returntype":"(bool, error)","Args":"actionId string, sysBusName string"},{"Uniquefunname":"func (d *Device) decCallingCount()","Funname":"decCallingCount","Returntype":"","Args":""},{"Uniquefunname":"func getRfkillItems() ([]rfkillItem, error)","Funname":"getRfkillItems","Returntype":"([]rfkillItem, error)","Args":""},{"Uniquefunname":"func (d *Device) hasBluetoothDeviceBlocked() (bool, error)","Funname":"hasBluetoothDeviceBlocked","Returntype":"(bool, error)","Args":""},{"Uniquefunname":"func (d *Device) incCallingCount()","Funname":"incCallingCount","Returntype":"","Args":""},{"Uniquefunname":"func (*Device) GetInterfaceName() string","Funname":"main.Device.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (d *Device) HasBluetoothDeviceBlocked() (bool, *dbus.Error)","Funname":"main.Device.HasBluetoothDeviceBlocked","Returntype":"(bool, *dbus.Error)","Args":""},{"Uniquefunname":"func (d *Device) UnblockBluetoothDevices(sender dbus.Sender) *dbus.Error","Funname":"main.Device.UnblockBluetoothDevices","Returntype":"*dbus.Error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (d *Device) canQuit() bool","Funname":"main.Device.canQuit","Returntype":"bool","Args":""},{"Uniquefunname":"func (d *Device) decCallingCount()","Funname":"main.Device.decCallingCount","Returntype":"","Args":""},{"Uniquefunname":"func (d *Device) hasBluetoothDeviceBlocked() (bool, error)","Funname":"main.Device.hasBluetoothDeviceBlocked","Returntype":"(bool, error)","Args":""},{"Uniquefunname":"func (d *Device) incCallingCount()","Funname":"main.Device.incCallingCount","Returntype":"","Args":""},{"Uniquefunname":"func (d *Device) unblockBluetoothDevices(sender dbus.Sender) error","Funname":"main.Device.unblockBluetoothDevices","Returntype":"error","Args":"sender dbus.Sender"},{"Uniquefunname":"func checkAuthorization(actionId string, sysBusName string) (bool, error)","Funname":"main.checkAuthorization","Returntype":"(bool, error)","Args":"actionId string, sysBusName string"},{"Uniquefunname":"func getRfkillItems() ([]rfkillItem, error)","Funname":"main.getRfkillItems","Returntype":"([]rfkillItem, error)","Args":""},{"Uniquefunname":"func (d *Device) unblockBluetoothDevices(sender dbus.Sender) error","Funname":"unblockBluetoothDevices","Returntype":"error","Args":"sender dbus.Sender"}],"Records":[{"Name":"struct:main.Device","Fields":["main.Device.callingCount int","main.Device.methods *struct { HasBluetoothDeviceBlocked func() `out:\"has\"`; }","main.Device.mu sync.Mutex","main.Device.service *dbusutil.Service"]},{"Name":"const:main","Fields":["main.dbusInterface","main.dbusPath","main.dbusServiceName","main.rfkillBin","main.rfkillDeviceTypeBluetooth","main.unblockBluetoothDevicesActionId"]},{"Name":"struct:main.rfkillItem","Fields":["main.rfkillItem.Device string","main.rfkillItem.Hard string","main.rfkillItem.Id json.RawMessage","main.rfkillItem.Soft string","main.rfkillItem.Type string"]}]}
{"Filepath":"device/main.go","Functions":[{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""}],"Records":[{"Name":"var:main","Fields":["main.logger"]}]}
{"Filepath":"drandr/crtc.go","Functions":[{"Uniquefunname":"func getReflects(origin uint16) []uint16","Funname":"drandr.getReflects","Returntype":"[]uint16","Args":"origin uint16"},{"Uniquefunname":"func getRotations(origin uint16) []uint16","Funname":"drandr.getRotations","Returntype":"[]uint16","Args":"origin uint16"},{"Uniquefunname":"func parseCrtcRotation(origin uint16) (rotation, reflect uint16)","Funname":"drandr.parseCrtcRotation","Returntype":"(rotation, reflect uint16)","Args":"origin uint16"},{"Uniquefunname":"func toCrtcInfo(conn *x.Conn, crtc randr.Crtc) CrtcInfo","Funname":"drandr.toCrtcInfo","Returntype":"CrtcInfo","Args":"conn *x.Conn, crtc randr.Crtc"},{"Uniquefunname":"func getReflects(origin uint16) []uint16","Funname":"getReflects","Returntype":"[]uint16","Args":"origin uint16"},{"Uniquefunname":"func getRotations(origin uint16) []uint16","Funname":"getRotations","Returntype":"[]uint16","Args":"origin uint16"},{"Uniquefunname":"func parseCrtcRotation(origin uint16) (rotation, reflect uint16)","Funname":"parseCrtcRotation","Returntype":"(rotation, reflect uint16)","Args":"origin uint16"},{"Uniquefunname":"func toCrtcInfo(conn *x.Conn, crtc randr.Crtc) CrtcInfo","Funname":"toCrtcInfo","Returntype":"CrtcInfo","Args":"conn *x.Conn, crtc randr.Crtc"}],"Records":[{"Name":"struct:drandr.CrtcInfo","Fields":["drandr.CrtcInfo.Height uint16","drandr.CrtcInfo.Id uint32","drandr.CrtcInfo.Mode uint32","drandr.CrtcInfo.Reflect uint16","drandr.CrtcInfo.Reflects []uint16","drandr.CrtcInfo.Rotation uint16","drandr.CrtcInfo.Rotations []uint16","drandr.CrtcInfo.Width uint16","drandr.CrtcInfo.X int16","drandr.CrtcInfo.Y int16"]}]}
{"Filepath":"drandr/drandr.go","Functions":[{"Uniquefunname":"func (info *ScreenInfo) GetPrimary() (*OutputInfo, error)","Funname":"GetPrimary","Returntype":"(*OutputInfo, error)","Args":""},{"Uniquefunname":"func GetScreenInfo(conn *x.Conn) (*ScreenInfo, error)","Funname":"GetScreenInfo","Returntype":"(*ScreenInfo, error)","Args":"conn *x.Conn"},{"Uniquefunname":"func (info *ScreenInfo) GetScreenSize() (uint16, uint16)","Funname":"GetScreenSize","Returntype":"(uint16, uint16)","Args":""},{"Uniquefunname":"func GetScreenInfo(conn *x.Conn) (*ScreenInfo, error)","Funname":"drandr.GetScreenInfo","Returntype":"(*ScreenInfo, error)","Args":"conn *x.Conn"},{"Uniquefunname":"func (info *ScreenInfo) GetPrimary() (*OutputInfo, error)","Funname":"drandr.ScreenInfo.GetPrimary","Returntype":"(*OutputInfo, error)","Args":""},{"Uniquefunname":"func (info *ScreenInfo) GetScreenSize() (uint16, uint16)","Funname":"drandr.ScreenInfo.GetScreenSize","Returntype":"(uint16, uint16)","Args":""}],"Records":[{"Name":"struct:drandr.ScreenInfo","Fields":["drandr.ScreenInfo.Modes ModeInfos","drandr.ScreenInfo.Outputs OutputInfos","drandr.ScreenInfo.conn *x.Conn","drandr.ScreenInfo.window x.Window"]},{"Name":"var:drandr","Fields":["drandr.infoLocker","drandr.lastConfigTimestamp"]}]}
{"Filepath":"drandr/mode.go","Functions":[{"Uniquefunname":"func (info ModeInfo) Equal(v ModeInfo) bool","Funname":"Equal","Returntype":"bool","Args":"v ModeInfo"},{"Uniquefunname":"func (infos ModeInfos) Equal(list ModeInfos) bool","Funname":"Equal","Returntype":"bool","Args":"list ModeInfos"},{"Uniquefunname":"func (infos ModeInfos) FilterBySize() ModeInfos","Funname":"FilterBySize","Returntype":"ModeInfos","Args":""},{"Uniquefunname":"func FindCommonModes(infosGroup ...ModeInfos) ModeInfos","Funname":"FindCommonModes","Returntype":"ModeInfos","Args":"infosGroup ...ModeInfos"},{"Uniquefunname":"func (infos ModeInfos) HasRefreshRate(rate float64) bool","Funname":"HasRefreshRate","Returntype":"bool","Args":"rate float64"},{"Uniquefunname":"func (infos ModeInfos) Len() int","Funname":"Len","Returntype":"int","Args":""},{"Uniquefunname":"func (infos ModeInfos) Less(i, j int) bool","Funname":"Less","Returntype":"bool","Args":"i, j int"},{"Uniquefunname":"func (infos ModeInfos) Max() ModeInfo","Funname":"Max","Returntype":"ModeInfo","Args":""},{"Uniquefunname":"func (infos ModeInfos) Query(id uint32) ModeInfo","Funname":"Query","Returntype":"ModeInfo","Args":"id uint32"},{"Uniquefunname":"func (infos ModeInfos) QueryBySize(width, height uint16) ModeInfos","Funname":"QueryBySize","Returntype":"ModeInfos","Args":"width, height uint16"},{"Uniquefunname":"func (infos ModeInfos) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (infos ModeInfos) Swap(i, j int)","Funname":"Swap","Returntype":"","Args":"i, j int"},{"Uniquefunname":"func calcModeRate(info randr.ModeInfo) float64","Funname":"calcModeRate","Returntype":"float64","Args":"info randr.ModeInfo"},{"Uniquefunname":"func doFoundCommonModes(modes1, modes2 ModeInfos) ModeInfos","Funname":"doFoundCommonModes","Returntype":"ModeInfos","Args":"modes1, modes2 ModeInfos"},{"Uniquefunname":"func FindCommonModes(infosGroup ...ModeInfos) ModeInfos","Funname":"drandr.FindCommonModes","Returntype":"ModeInfos","Args":"infosGroup ...ModeInfos"},{"Uniquefunname":"func (info ModeInfo) Equal(v ModeInfo) bool","Funname":"drandr.ModeInfo.Equal","Returntype":"bool","Args":"v ModeInfo"},{"Uniquefunname":"func (infos ModeInfos) Equal(list ModeInfos) bool","Funname":"drandr.ModeInfos.Equal","Returntype":"bool","Args":"list ModeInfos"},{"Uniquefunname":"func (infos ModeInfos) FilterBySize() ModeInfos","Funname":"drandr.ModeInfos.FilterBySize","Returntype":"ModeInfos","Args":""},{"Uniquefunname":"func (infos ModeInfos) HasRefreshRate(rate float64) bool","Funname":"drandr.ModeInfos.HasRefreshRate","Returntype":"bool","Args":"rate float64"},{"Uniquefunname":"func (infos ModeInfos) Len() int","Funname":"drandr.ModeInfos.Len","Returntype":"int","Args":""},{"Uniquefunname":"func (infos ModeInfos) Less(i, j int) bool","Funname":"drandr.ModeInfos.Less","Returntype":"bool","Args":"i, j int"},{"Uniquefunname":"func (infos ModeInfos) Max() ModeInfo","Funname":"drandr.ModeInfos.Max","Returntype":"ModeInfo","Args":""},{"Uniquefunname":"func (infos ModeInfos) Query(id uint32) ModeInfo","Funname":"drandr.ModeInfos.Query","Returntype":"ModeInfo","Args":"id uint32"},{"Uniquefunname":"func (infos ModeInfos) QueryBySize(width, height uint16) ModeInfos","Funname":"drandr.ModeInfos.QueryBySize","Returntype":"ModeInfos","Args":"width, height uint16"},{"Uniquefunname":"func (infos ModeInfos) String() string","Funname":"drandr.ModeInfos.String","Returntype":"string","Args":""},{"Uniquefunname":"func (infos ModeInfos) Swap(i, j int)","Funname":"drandr.ModeInfos.Swap","Returntype":"","Args":"i, j int"},{"Uniquefunname":"func calcModeRate(info randr.ModeInfo) float64","Funname":"drandr.calcModeRate","Returntype":"float64","Args":"info randr.ModeInfo"},{"Uniquefunname":"func doFoundCommonModes(modes1, modes2 ModeInfos) ModeInfos","Funname":"drandr.doFoundCommonModes","Returntype":"ModeInfos","Args":"modes1, modes2 ModeInfos"},{"Uniquefunname":"func toModeInfo(info randr.ModeInfo) ModeInfo","Funname":"drandr.toModeInfo","Returntype":"ModeInfo","Args":"info randr.ModeInfo"},{"Uniquefunname":"func toModeInfo(info randr.ModeInfo) ModeInfo","Funname":"toModeInfo","Returntype":"ModeInfo","Args":"info randr.ModeInfo"}],"Records":[{"Name":"struct:drandr.ModeInfo","Fields":["drandr.ModeInfo.Height uint16","drandr.ModeInfo.Id uint32","drandr.ModeInfo.Rate float64","drandr.ModeInfo.Width uint16"]}]}
{"Filepath":"drandr/mode_test.go","Functions":[{"Uniquefunname":"func TestCommonModes(t *testing.T)","Funname":"TestCommonModes","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestCommonModes(t *testing.T)","Funname":"drandr.TestCommonModes","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"drandr/output.go","Functions":[{"Uniquefunname":"func (infos OutputInfos) ListConnectionOutputs() OutputInfos","Funname":"ListConnectionOutputs","Returntype":"OutputInfos","Args":""},{"Uniquefunname":"func (infos OutputInfos) ListNames() []string","Funname":"ListNames","Returntype":"[]string","Args":""},{"Uniquefunname":"func (infos OutputInfos) Query(id uint32) OutputInfo","Funname":"Query","Returntype":"OutputInfo","Args":"id uint32"},{"Uniquefunname":"func (infos OutputInfos) QueryByName(name string) OutputInfo","Funname":"QueryByName","Returntype":"OutputInfo","Args":"name string"},{"Uniquefunname":"func crtcsToRandrIdList(crtcs []randr.Crtc) randrIdList","Funname":"crtcsToRandrIdList","Returntype":"randrIdList","Args":"crtcs []randr.Crtc"},{"Uniquefunname":"func (infos OutputInfos) ListConnectionOutputs() OutputInfos","Funname":"drandr.OutputInfos.ListConnectionOutputs","Returntype":"OutputInfos","Args":""},{"Uniquefunname":"func (infos OutputInfos) ListNames() []string","Funname":"drandr.OutputInfos.ListNames","Returntype":"[]string","Args":""},{"Uniquefunname":"func (infos OutputInfos) Query(id uint32) OutputInfo","Funname":"drandr.OutputInfos.Query","Returntype":"OutputInfo","Args":"id uint32"},{"Uniquefunname":"func (infos OutputInfos) QueryByName(name string) OutputInfo","Funname":"drandr.OutputInfos.QueryByName","Returntype":"OutputInfo","Args":"name string"},{"Uniquefunname":"func (infos OutputInfos) query(key, value string) OutputInfo","Funname":"drandr.OutputInfos.query","Returntype":"OutputInfo","Args":"key, value string"},{"Uniquefunname":"func crtcsToRandrIdList(crtcs []randr.Crtc) randrIdList","Funname":"drandr.crtcsToRandrIdList","Returntype":"randrIdList","Args":"crtcs []randr.Crtc"},{"Uniquefunname":"func getOutputEDID(conn *x.Conn, output randr.Output) ([]byte, error)","Funname":"drandr.getOutputEDID","Returntype":"([]byte, error)","Args":"conn *x.Conn, output randr.Output"},{"Uniquefunname":"func getOutputPreferredModes(modes randrIdList, nPreferred uint16) randrIdList","Funname":"drandr.getOutputPreferredModes","Returntype":"randrIdList","Args":"modes randrIdList, nPreferred uint16"},{"Uniquefunname":"func modesToRandrIdList(modes []randr.Mode) randrIdList","Funname":"drandr.modesToRandrIdList","Returntype":"randrIdList","Args":"modes []randr.Mode"},{"Uniquefunname":"func outputsToRandrIdList(outputs []randr.Output) randrIdList","Funname":"drandr.outputsToRandrIdList","Returntype":"randrIdList","Args":"outputs []randr.Output"},{"Uniquefunname":"func toOutputInfo(conn *x.Conn, output randr.Output) OutputInfo","Funname":"drandr.toOutputInfo","Returntype":"OutputInfo","Args":"conn *x.Conn, output randr.Output"},{"Uniquefunname":"func getOutputEDID(conn *x.Conn, output randr.Output) ([]byte, error)","Funname":"getOutputEDID","Returntype":"([]byte, error)","Args":"conn *x.Conn, output randr.Output"},{"Uniquefunname":"func getOutputPreferredModes(modes randrIdList, nPreferred uint16) randrIdList","Funname":"getOutputPreferredModes","Returntype":"randrIdList","Args":"modes randrIdList, nPreferred uint16"},{"Uniquefunname":"func modesToRandrIdList(modes []randr.Mode) randrIdList","Funname":"modesToRandrIdList","Returntype":"randrIdList","Args":"modes []randr.Mode"},{"Uniquefunname":"func outputsToRandrIdList(outputs []randr.Output) randrIdList","Funname":"outputsToRandrIdList","Returntype":"randrIdList","Args":"outputs []randr.Output"},{"Uniquefunname":"func (infos OutputInfos) query(key, value string) OutputInfo","Funname":"query","Returntype":"OutputInfo","Args":"key, value string"},{"Uniquefunname":"func toOutputInfo(conn *x.Conn, output randr.Output) OutputInfo","Funname":"toOutputInfo","Returntype":"OutputInfo","Args":"conn *x.Conn, output randr.Output"}],"Records":[{"Name":"struct:drandr.OutputInfo","Fields":["drandr.OutputInfo.Clones randrIdList","drandr.OutputInfo.Connection bool","drandr.OutputInfo.Crtc CrtcInfo","drandr.OutputInfo.Crtcs randrIdList","drandr.OutputInfo.EDID []byte","drandr.OutputInfo.Id uint32","drandr.OutputInfo.MmHeight uint32","drandr.OutputInfo.MmWidth uint32","drandr.OutputInfo.Modes randrIdList","drandr.OutputInfo.Name string","drandr.OutputInfo.PreferredModes randrIdList","drandr.OutputInfo.Timestamp x.Timestamp"]}]}
{"Filepath":"dxinput/keyboard.go","Functions":[{"Uniquefunname":"func SetKeyboardRepeat(enabled bool, delay, interval uint32) error","Funname":"SetKeyboardRepeat","Returntype":"error","Args":"enabled bool, delay, interval uint32"},{"Uniquefunname":"func SetKeyboardRepeat(enabled bool, delay, interval uint32) error","Funname":"dxinput.SetKeyboardRepeat","Returntype":"error","Args":"enabled bool, delay, interval uint32"}],"Records":null}
{"Filepath":"dxinput/libinput.go","Functions":[{"Uniquefunname":"func libinputCanScroll(id int32) (bool, bool, bool)","Funname":"dxinput.libinputCanScroll","Returntype":"(bool, bool, bool)","Args":"id int32"},{"Uniquefunname":"func libinputEnableScrollButton(id int32, enabled bool) error","Funname":"dxinput.libinputEnableScrollButton","Returntype":"error","Args":"id int32, enabled bool"},{"Uniquefunname":"func libinputEnableScrollEdge(id int32, enabled bool) error","Funname":"dxinput.libinputEnableScrollEdge","Returntype":"error","Args":"id int32, enabled bool"},{"Uniquefunname":"func libinputEnableScrollTwoFinger(id int32, enabled bool) error","Funname":"dxinput.libinputEnableScrollTwoFinger","Returntype":"error","Args":"id int32, enabled bool"},{"Uniquefunname":"func libinputGetAccel(id int32) (float32, error)","Funname":"dxinput.libinputGetAccel","Returntype":"(float32, error)","Args":"id int32"},{"Uniquefunname":"func libinputGetAccelProfile(id int32) (bool, bool)","Funname":"dxinput.libinputGetAccelProfile","Returntype":"(bool, bool)","Args":"id int32"},{"Uniquefunname":"func libinputGetScrollButton(id int32) (int32, error)","Funname":"dxinput.libinputGetScrollButton","Returntype":"(int32, error)","Args":"id int32"},{"Uniquefunname":"func libinputInt8PropCan(id int32, prop string) bool","Funname":"dxinput.libinputInt8PropCan","Returntype":"bool","Args":"id int32, prop string"},{"Uniquefunname":"func libinputInt8PropSet(id int32, prop string, enabled bool) error","Funname":"dxinput.libinputInt8PropSet","Returntype":"error","Args":"id int32, prop string, enabled bool"},{"Uniquefunname":"func libinputIsBothAccelProfileAvaliable(id int32) bool","Funname":"dxinput.libinputIsBothAccelProfileAvaliable","Returntype":"bool","Args":"id int32"},{"Uniquefunname":"func libinputSetAccel(id int32, accel float32) error","Funname":"dxinput.libinputSetAccel","Returntype":"error","Args":"id int32, accel float32"},{"Uniquefunname":"func libinputSetAccelProfile(id int32, useAdaptiveProfile bool) error","Funname":"dxinput.libinputSetAccelProfile","Returntype":"error","Args":"id int32, useAdaptiveProfile bool"},{"Uniquefunname":"func libinputSetScrollButton(id, btn int32) error","Funname":"dxinput.libinputSetScrollButton","Returntype":"error","Args":"id, btn int32"},{"Uniquefunname":"func libinputCanScroll(id int32) (bool, bool, bool)","Funname":"libinputCanScroll","Returntype":"(bool, bool, bool)","Args":"id int32"},{"Uniquefunname":"func libinputEnableScrollButton(id int32, enabled bool) error","Funname":"libinputEnableScrollButton","Returntype":"error","Args":"id int32, enabled bool"},{"Uniquefunname":"func libinputEnableScrollEdge(id int32, enabled bool) error","Funname":"libinputEnableScrollEdge","Returntype":"error","Args":"id int32, enabled bool"},{"Uniquefunname":"func libinputEnableScrollTwoFinger(id int32, enabled bool) error","Funname":"libinputEnableScrollTwoFinger","Returntype":"error","Args":"id int32, enabled bool"},{"Uniquefunname":"func libinputGetAccel(id int32) (float32, error)","Funname":"libinputGetAccel","Returntype":"(float32, error)","Args":"id int32"},{"Uniquefunname":"func libinputGetAccelProfile(id int32) (bool, bool)","Funname":"libinputGetAccelProfile","Returntype":"(bool, bool)","Args":"id int32"},{"Uniquefunname":"func libinputGetScrollButton(id int32) (int32, error)","Funname":"libinputGetScrollButton","Returntype":"(int32, error)","Args":"id int32"},{"Uniquefunname":"func libinputInt8PropCan(id int32, prop string) bool","Funname":"libinputInt8PropCan","Returntype":"bool","Args":"id int32, prop string"},{"Uniquefunname":"func libinputInt8PropSet(id int32, prop string, enabled bool) error","Funname":"libinputInt8PropSet","Returntype":"error","Args":"id int32, prop string, enabled bool"},{"Uniquefunname":"func libinputIsBothAccelProfileAvaliable(id int32) bool","Funname":"libinputIsBothAccelProfileAvaliable","Returntype":"bool","Args":"id int32"},{"Uniquefunname":"func libinputSetAccel(id int32, accel float32) error","Funname":"libinputSetAccel","Returntype":"error","Args":"id int32, accel float32"},{"Uniquefunname":"func libinputSetAccelProfile(id int32, useAdaptiveProfile bool) error","Funname":"libinputSetAccelProfile","Returntype":"error","Args":"id int32, useAdaptiveProfile bool"},{"Uniquefunname":"func libinputSetScrollButton(id, btn int32) error","Funname":"libinputSetScrollButton","Returntype":"error","Args":"id, btn int32"}],"Records":[{"Name":"const:dxinput","Fields":["dxinput.libinputPropAccelProfileAvaliable","dxinput.libinputPropAccelProfileEnabled","dxinput.libinputPropAccelSpeed","dxinput.libinputPropButtonScrollingButton","dxinput.libinputPropDisableWhileTyping","dxinput.libinputPropHorizScrollEnabled","dxinput.libinputPropLeftHandedEnabled","dxinput.libinputPropMiddleEmulationEnabled","dxinput.libinputPropNaturalEnabled","dxinput.libinputPropScrollMethodsAvailable","dxinput.libinputPropScrollMethodsEnabled","dxinput.libinputPropTapEnabled"]}]}
{"Filepath":"dxinput/mouse.go","Functions":[{"Uniquefunname":"func (m *Mouse) CanChangeAccelProfile() bool","Funname":"CanChangeAccelProfile","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanLeftHanded() bool","Funname":"CanLeftHanded","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanMiddleButtonEmulation() bool","Funname":"CanMiddleButtonEmulation","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanNaturalScroll() bool","Funname":"CanNaturalScroll","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanWheelEmulation() bool","Funname":"CanWheelEmulation","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanWheelHorizNaturalScroll() bool","Funname":"CanWheelHorizNaturalScroll","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanWheelHorizScroll() bool","Funname":"CanWheelHorizScroll","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) Enable(enabled bool) error","Funname":"Enable","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableLeftHanded(enabled bool) error","Funname":"EnableLeftHanded","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableMiddleButtonEmulation(enabled bool) error","Funname":"EnableMiddleButtonEmulation","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableNaturalScroll(enabled bool) error","Funname":"EnableNaturalScroll","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableWheelEmulation(enabled bool) error","Funname":"EnableWheelEmulation","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableWheelHorizNaturalScroll(enabled bool) error","Funname":"EnableWheelHorizNaturalScroll","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableWheelHorizScroll(enabled bool) error","Funname":"EnableWheelHorizScroll","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) IsAdaptiveAccelProfileEnabled() bool","Funname":"IsAdaptiveAccelProfileEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) IsEnabled() bool","Funname":"IsEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) MiddleButtonEmulationTimeout() (int16, error)","Funname":"MiddleButtonEmulationTimeout","Returntype":"(int16, error)","Args":""},{"Uniquefunname":"func (m *Mouse) MotionAcceleration() (float32, error)","Funname":"MotionAcceleration","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func (m *Mouse) MotionScaling() (float32, error)","Funname":"MotionScaling","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func (m *Mouse) MotionThreshold() (float32, error)","Funname":"MotionThreshold","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func NewMouse(id int32) (*Mouse, error)","Funname":"NewMouse","Returntype":"(*Mouse, error)","Args":"id int32"},{"Uniquefunname":"func NewMouseFromDeviceInfo(dev *DeviceInfo) (*Mouse, error)","Funname":"NewMouseFromDeviceInfo","Returntype":"(*Mouse, error)","Args":"dev *DeviceInfo"},{"Uniquefunname":"func (m *Mouse) SetMiddleButtonEmulationTimeout(timeout int16) error","Funname":"SetMiddleButtonEmulationTimeout","Returntype":"error","Args":"timeout int16"},{"Uniquefunname":"func (m *Mouse) SetMotionAcceleration(accel float32) error","Funname":"SetMotionAcceleration","Returntype":"error","Args":"accel float32"},{"Uniquefunname":"func (m *Mouse) SetMotionScaling(scaling float32) error","Funname":"SetMotionScaling","Returntype":"error","Args":"scaling float32"},{"Uniquefunname":"func (m *Mouse) SetMotionThreshold(thres float32) error","Funname":"SetMotionThreshold","Returntype":"error","Args":"thres float32"},{"Uniquefunname":"func (m *Mouse) SetRotation(direction uint8) error","Funname":"SetRotation","Returntype":"error","Args":"direction uint8"},{"Uniquefunname":"func (m *Mouse) SetUseAdaptiveAccelProfile(useAdaptiveProfile bool) error","Funname":"SetUseAdaptiveAccelProfile","Returntype":"error","Args":"useAdaptiveProfile bool"},{"Uniquefunname":"func (m *Mouse) SetWheelEmulationButton(btnNum int8) error","Funname":"SetWheelEmulationButton","Returntype":"error","Args":"btnNum int8"},{"Uniquefunname":"func (m *Mouse) SetWheelEmulationTimeout(timeout int16) error","Funname":"SetWheelEmulationTimeout","Returntype":"error","Args":"timeout int16"},{"Uniquefunname":"func (m *Mouse) WheelEmulationButton() (int8, error)","Funname":"WheelEmulationButton","Returntype":"(int8, error)","Args":""},{"Uniquefunname":"func (m *Mouse) WheelEmulationTimeout() (int16, error)","Funname":"WheelEmulationTimeout","Returntype":"(int16, error)","Args":""},{"Uniquefunname":"func (m *Mouse) canWheelHorizScroll(natural bool) bool","Funname":"canWheelHorizScroll","Returntype":"bool","Args":"natural bool"},{"Uniquefunname":"func (m *Mouse) CanChangeAccelProfile() bool","Funname":"dxinput.Mouse.CanChangeAccelProfile","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanLeftHanded() bool","Funname":"dxinput.Mouse.CanLeftHanded","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanMiddleButtonEmulation() bool","Funname":"dxinput.Mouse.CanMiddleButtonEmulation","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanNaturalScroll() bool","Funname":"dxinput.Mouse.CanNaturalScroll","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanWheelEmulation() bool","Funname":"dxinput.Mouse.CanWheelEmulation","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanWheelHorizNaturalScroll() bool","Funname":"dxinput.Mouse.CanWheelHorizNaturalScroll","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) CanWheelHorizScroll() bool","Funname":"dxinput.Mouse.CanWheelHorizScroll","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) Enable(enabled bool) error","Funname":"dxinput.Mouse.Enable","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableLeftHanded(enabled bool) error","Funname":"dxinput.Mouse.EnableLeftHanded","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableMiddleButtonEmulation(enabled bool) error","Funname":"dxinput.Mouse.EnableMiddleButtonEmulation","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableNaturalScroll(enabled bool) error","Funname":"dxinput.Mouse.EnableNaturalScroll","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableWheelEmulation(enabled bool) error","Funname":"dxinput.Mouse.EnableWheelEmulation","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableWheelHorizNaturalScroll(enabled bool) error","Funname":"dxinput.Mouse.EnableWheelHorizNaturalScroll","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) EnableWheelHorizScroll(enabled bool) error","Funname":"dxinput.Mouse.EnableWheelHorizScroll","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Mouse) IsAdaptiveAccelProfileEnabled() bool","Funname":"dxinput.Mouse.IsAdaptiveAccelProfileEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) IsEnabled() bool","Funname":"dxinput.Mouse.IsEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Mouse) MiddleButtonEmulationTimeout() (int16, error)","Funname":"dxinput.Mouse.MiddleButtonEmulationTimeout","Returntype":"(int16, error)","Args":""},{"Uniquefunname":"func (m *Mouse) MotionAcceleration() (float32, error)","Funname":"dxinput.Mouse.MotionAcceleration","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func (m *Mouse) MotionScaling() (float32, error)","Funname":"dxinput.Mouse.MotionScaling","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func (m *Mouse) MotionThreshold() (float32, error)","Funname":"dxinput.Mouse.MotionThreshold","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func (m *Mouse) SetMiddleButtonEmulationTimeout(timeout int16) error","Funname":"dxinput.Mouse.SetMiddleButtonEmulationTimeout","Returntype":"error","Args":"timeout int16"},{"Uniquefunname":"func (m *Mouse) SetMotionAcceleration(accel float32) error","Funname":"dxinput.Mouse.SetMotionAcceleration","Returntype":"error","Args":"accel float32"},{"Uniquefunname":"func (m *Mouse) SetMotionScaling(scaling float32) error","Funname":"dxinput.Mouse.SetMotionScaling","Returntype":"error","Args":"scaling float32"},{"Uniquefunname":"func (m *Mouse) SetMotionThreshold(thres float32) error","Funname":"dxinput.Mouse.SetMotionThreshold","Returntype":"error","Args":"thres float32"},{"Uniquefunname":"func (m *Mouse) SetRotation(direction uint8) error","Funname":"dxinput.Mouse.SetRotation","Returntype":"error","Args":"direction uint8"},{"Uniquefunname":"func (m *Mouse) SetUseAdaptiveAccelProfile(useAdaptiveProfile bool) error","Funname":"dxinput.Mouse.SetUseAdaptiveAccelProfile","Returntype":"error","Args":"useAdaptiveProfile bool"},{"Uniquefunname":"func (m *Mouse) SetWheelEmulationButton(btnNum int8) error","Funname":"dxinput.Mouse.SetWheelEmulationButton","Returntype":"error","Args":"btnNum int8"},{"Uniquefunname":"func (m *Mouse) SetWheelEmulationTimeout(timeout int16) error","Funname":"dxinput.Mouse.SetWheelEmulationTimeout","Returntype":"error","Args":"timeout int16"},{"Uniquefunname":"func (m *Mouse) WheelEmulationButton() (int8, error)","Funname":"dxinput.Mouse.WheelEmulationButton","Returntype":"(int8, error)","Args":""},{"Uniquefunname":"func (m *Mouse) WheelEmulationTimeout() (int16, error)","Funname":"dxinput.Mouse.WheelEmulationTimeout","Returntype":"(int16, error)","Args":""},{"Uniquefunname":"func (m *Mouse) canWheelHorizScroll(natural bool) bool","Funname":"dxinput.Mouse.canWheelHorizScroll","Returntype":"bool","Args":"natural bool"},{"Uniquefunname":"func (m *Mouse) enableWheelHorizScroll(enabled, natural bool) error","Funname":"dxinput.Mouse.enableWheelHorizScroll","Returntype":"error","Args":"enabled, natural bool"},{"Uniquefunname":"func (m *Mouse) wheelEmulationAxes() ([]int8, error)","Funname":"dxinput.Mouse.wheelEmulationAxes","Returntype":"([]int8, error)","Args":""},{"Uniquefunname":"func NewMouse(id int32) (*Mouse, error)","Funname":"dxinput.NewMouse","Returntype":"(*Mouse, error)","Args":"id int32"},{"Uniquefunname":"func NewMouseFromDeviceInfo(dev *DeviceInfo) (*Mouse, error)","Funname":"dxinput.NewMouseFromDeviceInfo","Returntype":"(*Mouse, error)","Args":"dev *DeviceInfo"},{"Uniquefunname":"func isInt8ArrayEqual(a1, a2 []int8) bool","Funname":"dxinput.isInt8ArrayEqual","Returntype":"bool","Args":"a1, a2 []int8"},{"Uniquefunname":"func isTrackPoint(info *DeviceInfo) bool","Funname":"dxinput.isTrackPoint","Returntype":"bool","Args":"info *DeviceInfo"},{"Uniquefunname":"func (m *Mouse) enableWheelHorizScroll(enabled, natural bool) error","Funname":"enableWheelHorizScroll","Returntype":"error","Args":"enabled, natural bool"},{"Uniquefunname":"func isInt8ArrayEqual(a1, a2 []int8) bool","Funname":"isInt8ArrayEqual","Returntype":"bool","Args":"a1, a2 []int8"},{"Uniquefunname":"func isTrackPoint(info *DeviceInfo) bool","Funname":"isTrackPoint","Returntype":"bool","Args":"info *DeviceInfo"},{"Uniquefunname":"func (m *Mouse) wheelEmulationAxes() ([]int8, error)","Funname":"wheelEmulationAxes","Returntype":"([]int8, error)","Args":""}],"Records":[{"Name":"struct:dxinput.Mouse","Fields":["dxinput.Mouse.Id int32","dxinput.Mouse.Name string","dxinput.Mouse.TrackPoint bool","dxinput.Mouse.isLibinputUsed bool"]},{"Name":"const:dxinput","Fields":["dxinput.propEvdevScrollDistance","dxinput.propMidBtnEmulation","dxinput.propMidBtnEmulationTimeout","dxinput.propWheelEmulation","dxinput.propWheelEmulationAxes","dxinput.propWheelEmulationButton","dxinput.propWheelEmulationTimeout"]}]}
{"Filepath":"dxinput/touchpad.go","Functions":[{"Uniquefunname":"func (tpad *Touchpad) CanDisableWhileTyping() bool","Funname":"CanDisableWhileTyping","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanEdgeScroll() bool","Funname":"CanEdgeScroll","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanLeftHanded() bool","Funname":"CanLeftHanded","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanNaturalScroll() bool","Funname":"CanNaturalScroll","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanPalmDetect() bool","Funname":"CanPalmDetect","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanTapToClick() bool","Funname":"CanTapToClick","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanTwoFingerScroll() (bool, bool)","Funname":"CanTwoFingerScroll","Returntype":"(bool, bool)","Args":""},{"Uniquefunname":"func (tpad *Touchpad) Enable(enabled bool) error","Funname":"Enable","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableDisableWhileTyping(enabled bool) error","Funname":"EnableDisableWhileTyping","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableEdgeScroll(enabled bool) error","Funname":"EnableEdgeScroll","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableLeftHanded(enabled bool) error","Funname":"EnableLeftHanded","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableMiddleButtonEmulation(enabled bool) error","Funname":"EnableMiddleButtonEmulation","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableNaturalScroll(enabled bool) error","Funname":"EnableNaturalScroll","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnablePalmDetect(enabled bool) error","Funname":"EnablePalmDetect","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableTapToClick(enabled bool) error","Funname":"EnableTapToClick","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableTwoFingerScroll(vert, horiz bool) error","Funname":"EnableTwoFingerScroll","Returntype":"error","Args":"vert, horiz bool"},{"Uniquefunname":"func (tpad *Touchpad) GetPalmDimensions() (int32, int32, error)","Funname":"GetPalmDimensions","Returntype":"(int32, int32, error)","Args":""},{"Uniquefunname":"func (tpad *Touchpad) IsEnabled() bool","Funname":"IsEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) IsMiddleButtonEnulationEnabled() bool","Funname":"IsMiddleButtonEnulationEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) MotionAcceleration() (float32, error)","Funname":"MotionAcceleration","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func (tpad *Touchpad) MotionScaling() (float32, error)","Funname":"MotionScaling","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func (tpad *Touchpad) MotionThreshold() (float32, error)","Funname":"MotionThreshold","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func NewTouchpad(id int32) (*Touchpad, error)","Funname":"NewTouchpad","Returntype":"(*Touchpad, error)","Args":"id int32"},{"Uniquefunname":"func NewTouchpadFromDevInfo(dev *DeviceInfo) (*Touchpad, error)","Funname":"NewTouchpadFromDevInfo","Returntype":"(*Touchpad, error)","Args":"dev *DeviceInfo"},{"Uniquefunname":"func (tpad *Touchpad) ScrollDistance() (int32, int32)","Funname":"ScrollDistance","Returntype":"(int32, int32)","Args":""},{"Uniquefunname":"func (tpad *Touchpad) SetMotionAcceleration(accel float32) error","Funname":"SetMotionAcceleration","Returntype":"error","Args":"accel float32"},{"Uniquefunname":"func (tpad *Touchpad) SetMotionScaling(scaling float32) error","Funname":"SetMotionScaling","Returntype":"error","Args":"scaling float32"},{"Uniquefunname":"func (tpad *Touchpad) SetMotionThreshold(thres float32) error","Funname":"SetMotionThreshold","Returntype":"error","Args":"thres float32"},{"Uniquefunname":"func (tpad *Touchpad) SetPalmDimensions(width, z int32) error","Funname":"SetPalmDimensions","Returntype":"error","Args":"width, z int32"},{"Uniquefunname":"func (tpad *Touchpad) SetRotation(direction uint8) error","Funname":"SetRotation","Returntype":"error","Args":"direction uint8"},{"Uniquefunname":"func (tpad *Touchpad) SetScrollDistance(vert, horiz int32) error","Funname":"SetScrollDistance","Returntype":"error","Args":"vert, horiz int32"},{"Uniquefunname":"func NewTouchpad(id int32) (*Touchpad, error)","Funname":"dxinput.NewTouchpad","Returntype":"(*Touchpad, error)","Args":"id int32"},{"Uniquefunname":"func NewTouchpadFromDevInfo(dev *DeviceInfo) (*Touchpad, error)","Funname":"dxinput.NewTouchpadFromDevInfo","Returntype":"(*Touchpad, error)","Args":"dev *DeviceInfo"},{"Uniquefunname":"func (tpad *Touchpad) CanDisableWhileTyping() bool","Funname":"dxinput.Touchpad.CanDisableWhileTyping","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanEdgeScroll() bool","Funname":"dxinput.Touchpad.CanEdgeScroll","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanLeftHanded() bool","Funname":"dxinput.Touchpad.CanLeftHanded","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanNaturalScroll() bool","Funname":"dxinput.Touchpad.CanNaturalScroll","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanPalmDetect() bool","Funname":"dxinput.Touchpad.CanPalmDetect","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanTapToClick() bool","Funname":"dxinput.Touchpad.CanTapToClick","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) CanTwoFingerScroll() (bool, bool)","Funname":"dxinput.Touchpad.CanTwoFingerScroll","Returntype":"(bool, bool)","Args":""},{"Uniquefunname":"func (tpad *Touchpad) Enable(enabled bool) error","Funname":"dxinput.Touchpad.Enable","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableDisableWhileTyping(enabled bool) error","Funname":"dxinput.Touchpad.EnableDisableWhileTyping","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableEdgeScroll(enabled bool) error","Funname":"dxinput.Touchpad.EnableEdgeScroll","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableLeftHanded(enabled bool) error","Funname":"dxinput.Touchpad.EnableLeftHanded","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableMiddleButtonEmulation(enabled bool) error","Funname":"dxinput.Touchpad.EnableMiddleButtonEmulation","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableNaturalScroll(enabled bool) error","Funname":"dxinput.Touchpad.EnableNaturalScroll","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnablePalmDetect(enabled bool) error","Funname":"dxinput.Touchpad.EnablePalmDetect","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableTapToClick(enabled bool) error","Funname":"dxinput.Touchpad.EnableTapToClick","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) EnableTwoFingerScroll(vert, horiz bool) error","Funname":"dxinput.Touchpad.EnableTwoFingerScroll","Returntype":"error","Args":"vert, horiz bool"},{"Uniquefunname":"func (tpad *Touchpad) GetPalmDimensions() (int32, int32, error)","Funname":"dxinput.Touchpad.GetPalmDimensions","Returntype":"(int32, int32, error)","Args":""},{"Uniquefunname":"func (tpad *Touchpad) IsEnabled() bool","Funname":"dxinput.Touchpad.IsEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) IsMiddleButtonEnulationEnabled() bool","Funname":"dxinput.Touchpad.IsMiddleButtonEnulationEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func (tpad *Touchpad) MotionAcceleration() (float32, error)","Funname":"dxinput.Touchpad.MotionAcceleration","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func (tpad *Touchpad) MotionScaling() (float32, error)","Funname":"dxinput.Touchpad.MotionScaling","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func (tpad *Touchpad) MotionThreshold() (float32, error)","Funname":"dxinput.Touchpad.MotionThreshold","Returntype":"(float32, error)","Args":""},{"Uniquefunname":"func (tpad *Touchpad) ScrollDistance() (int32, int32)","Funname":"dxinput.Touchpad.ScrollDistance","Returntype":"(int32, int32)","Args":""},{"Uniquefunname":"func (tpad *Touchpad) SetMotionAcceleration(accel float32) error","Funname":"dxinput.Touchpad.SetMotionAcceleration","Returntype":"error","Args":"accel float32"},{"Uniquefunname":"func (tpad *Touchpad) SetMotionScaling(scaling float32) error","Funname":"dxinput.Touchpad.SetMotionScaling","Returntype":"error","Args":"scaling float32"},{"Uniquefunname":"func (tpad *Touchpad) SetMotionThreshold(thres float32) error","Funname":"dxinput.Touchpad.SetMotionThreshold","Returntype":"error","Args":"thres float32"},{"Uniquefunname":"func (tpad *Touchpad) SetPalmDimensions(width, z int32) error","Funname":"dxinput.Touchpad.SetPalmDimensions","Returntype":"error","Args":"width, z int32"},{"Uniquefunname":"func (tpad *Touchpad) SetRotation(direction uint8) error","Funname":"dxinput.Touchpad.SetRotation","Returntype":"error","Args":"direction uint8"},{"Uniquefunname":"func (tpad *Touchpad) SetScrollDistance(vert, horiz int32) error","Funname":"dxinput.Touchpad.SetScrollDistance","Returntype":"error","Args":"vert, horiz int32"}],"Records":[{"Name":"struct:dxinput.Touchpad","Fields":["dxinput.Touchpad.Id int32","dxinput.Touchpad.Name string","dxinput.Touchpad.isLibinputUsed bool"]},{"Name":"const:dxinput","Fields":["dxinput.propEdgeScroll","dxinput.propOff","dxinput.propPalmDetect","dxinput.propPalmDimensions","dxinput.propScrollDistance","dxinput.propTapAction","dxinput.propTwoFingerScrol"]}]}
{"Filepath":"dxinput/touchscreen.go","Functions":[{"Uniquefunname":"func (touch *Touchscreen) Enable(enabled bool) error","Funname":"Enable","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (touch *Touchscreen) IsEnabled() bool","Funname":"IsEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func NewTouchscreen(id int32) (*Touchscreen, error)","Funname":"NewTouchscreen","Returntype":"(*Touchscreen, error)","Args":"id int32"},{"Uniquefunname":"func NewTouchscreenFromDevInfo(dev *DeviceInfo) (*Touchscreen, error)","Funname":"NewTouchscreenFromDevInfo","Returntype":"(*Touchscreen, error)","Args":"dev *DeviceInfo"},{"Uniquefunname":"func (touch *Touchscreen) SetRotation(direction uint8) error","Funname":"SetRotation","Returntype":"error","Args":"direction uint8"},{"Uniquefunname":"func NewTouchscreen(id int32) (*Touchscreen, error)","Funname":"dxinput.NewTouchscreen","Returntype":"(*Touchscreen, error)","Args":"id int32"},{"Uniquefunname":"func NewTouchscreenFromDevInfo(dev *DeviceInfo) (*Touchscreen, error)","Funname":"dxinput.NewTouchscreenFromDevInfo","Returntype":"(*Touchscreen, error)","Args":"dev *DeviceInfo"},{"Uniquefunname":"func (touch *Touchscreen) Enable(enabled bool) error","Funname":"dxinput.Touchscreen.Enable","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (touch *Touchscreen) IsEnabled() bool","Funname":"dxinput.Touchscreen.IsEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func (touch *Touchscreen) SetRotation(direction uint8) error","Funname":"dxinput.Touchscreen.SetRotation","Returntype":"error","Args":"direction uint8"}],"Records":[{"Name":"struct:dxinput.Touchscreen","Fields":["dxinput.Touchscreen.Id int32","dxinput.Touchscreen.Name string","dxinput.Touchscreen.isLibinputUsed bool"]},{"Name":"const:dxinput","Fields":["dxinput.libinputPropCalibrationMatrix"]}]}
{"Filepath":"dxinput/utils.go","Functions":[{"Uniquefunname":"func absInt32(v int32) int32","Funname":"absInt32","Returntype":"int32","Args":"v int32"},{"Uniquefunname":"func absInt32(v int32) int32","Funname":"dxinput.absInt32","Returntype":"int32","Args":"v int32"},{"Uniquefunname":"func enableDevice(id int32, enabled bool) error","Funname":"dxinput.enableDevice","Returntype":"error","Args":"id int32, enabled bool"},{"Uniquefunname":"func getFloat32Prop(id int32, prop string, nitems int32) ([]float32, error)","Funname":"dxinput.getFloat32Prop","Returntype":"([]float32, error)","Args":"id int32, prop string, nitems int32"},{"Uniquefunname":"func getInt16Prop(id int32, prop string, nitems int32) ([]int16, error)","Funname":"dxinput.getInt16Prop","Returntype":"([]int16, error)","Args":"id int32, prop string, nitems int32"},{"Uniquefunname":"func getInt32Prop(id int32, prop string, nitems int32) ([]int32, error)","Funname":"dxinput.getInt32Prop","Returntype":"([]int32, error)","Args":"id int32, prop string, nitems int32"},{"Uniquefunname":"func getInt8Prop(id int32, prop string, nitems int32) ([]int8, error)","Funname":"dxinput.getInt8Prop","Returntype":"([]int8, error)","Args":"id int32, prop string, nitems int32"},{"Uniquefunname":"func getMotionAcceleration(id int32) (float32, error)","Funname":"dxinput.getMotionAcceleration","Returntype":"(float32, error)","Args":"id int32"},{"Uniquefunname":"func getMotionScaling(id int32) (float32, error)","Funname":"dxinput.getMotionScaling","Returntype":"(float32, error)","Args":"id int32"},{"Uniquefunname":"func getMotionThreshold(id int32) (float32, error)","Funname":"dxinput.getMotionThreshold","Returntype":"(float32, error)","Args":"id int32"},{"Uniquefunname":"func init()","Funname":"dxinput.init","Returntype":"","Args":""},{"Uniquefunname":"func isDeviceEnabled(id int32) bool","Funname":"dxinput.isDeviceEnabled","Returntype":"bool","Args":"id int32"},{"Uniquefunname":"func isFloat32ListEqual(l1, l2 []float32) bool","Funname":"dxinput.isFloat32ListEqual","Returntype":"bool","Args":"l1, l2 []float32"},{"Uniquefunname":"func setMotionAcceleration(id int32, accel float32) error","Funname":"dxinput.setMotionAcceleration","Returntype":"error","Args":"id int32, accel float32"},{"Uniquefunname":"func setMotionScaling(id int32, scaling float32) error","Funname":"dxinput.setMotionScaling","Returntype":"error","Args":"id int32, scaling float32"},{"Uniquefunname":"func setMotionThreshold(id int32, thres float32) error","Funname":"dxinput.setMotionThreshold","Returntype":"error","Args":"id int32, thres float32"},{"Uniquefunname":"func setRotation(id int32, rotation uint8) error","Funname":"dxinput.setRotation","Returntype":"error","Args":"id int32, rotation uint8"},{"Uniquefunname":"func enableDevice(id int32, enabled bool) error","Funname":"enableDevice","Returntype":"error","Args":"id int32, enabled bool"},{"Uniquefunname":"func getFloat32Prop(id int32, prop string, nitems int32) ([]float32, error)","Funname":"getFloat32Prop","Returntype":"([]float32, error)","Args":"id int32, prop string, nitems int32"},{"Uniquefunname":"func getInt16Prop(id int32, prop string, nitems int32) ([]int16, error)","Funname":"getInt16Prop","Returntype":"([]int16, error)","Args":"id int32, prop string, nitems int32"},{"Uniquefunname":"func getInt32Prop(id int32, prop string, nitems int32) ([]int32, error)","Funname":"getInt32Prop","Returntype":"([]int32, error)","Args":"id int32, prop string, nitems int32"},{"Uniquefunname":"func getInt8Prop(id int32, prop string, nitems int32) ([]int8, error)","Funname":"getInt8Prop","Returntype":"([]int8, error)","Args":"id int32, prop string, nitems int32"},{"Uniquefunname":"func getMotionAcceleration(id int32) (float32, error)","Funname":"getMotionAcceleration","Returntype":"(float32, error)","Args":"id int32"},{"Uniquefunname":"func getMotionScaling(id int32) (float32, error)","Funname":"getMotionScaling","Returntype":"(float32, error)","Args":"id int32"},{"Uniquefunname":"func getMotionThreshold(id int32) (float32, error)","Funname":"getMotionThreshold","Returntype":"(float32, error)","Args":"id int32"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func isDeviceEnabled(id int32) bool","Funname":"isDeviceEnabled","Returntype":"bool","Args":"id int32"},{"Uniquefunname":"func isFloat32ListEqual(l1, l2 []float32) bool","Funname":"isFloat32ListEqual","Returntype":"bool","Args":"l1, l2 []float32"},{"Uniquefunname":"func setMotionAcceleration(id int32, accel float32) error","Funname":"setMotionAcceleration","Returntype":"error","Args":"id int32, accel float32"},{"Uniquefunname":"func setMotionScaling(id int32, scaling float32) error","Funname":"setMotionScaling","Returntype":"error","Args":"id int32, scaling float32"},{"Uniquefunname":"func setMotionThreshold(id int32, thres float32) error","Funname":"setMotionThreshold","Returntype":"error","Args":"id int32, thres float32"},{"Uniquefunname":"func setRotation(id int32, rotation uint8) error","Funname":"setRotation","Returntype":"error","Args":"id int32, rotation uint8"}],"Records":[{"Name":"const:dxinput","Fields":["dxinput.RotationDirectionInverted","dxinput.RotationDirectionLeft","dxinput.RotationDirectionNormal","dxinput.RotationDirectionRight","dxinput.propAdaptiveDeceleration","dxinput.propConstantDeceleration","dxinput.propCoordTransMatrix","dxinput.propDeviceEnabled","dxinput.propVelocityScaling"]},{"Name":"var:dxinput","Fields":["dxinput.globalWayland","dxinput.rotationInverted","dxinput.rotationLeft","dxinput.rotationNormal","dxinput.rotationRight"]}]}
{"Filepath":"dxinput/wacom.go","Functions":[{"Uniquefunname":"func (w *Wacom) GetArea() (x1, y1, x2, y2 int, err error)","Funname":"GetArea","Returntype":"(x1, y1, x2, y2 int, err error)","Args":""},{"Uniquefunname":"func (w *Wacom) MapToOutput(output string) error","Funname":"MapToOutput","Returntype":"error","Args":"output string"},{"Uniquefunname":"func NewWacom(id int32) (*Wacom, error)","Funname":"NewWacom","Returntype":"(*Wacom, error)","Args":"id int32"},{"Uniquefunname":"func NewWacomFromDevInfo(dev *DeviceInfo) (*Wacom, error)","Funname":"NewWacomFromDevInfo","Returntype":"(*Wacom, error)","Args":"dev *DeviceInfo"},{"Uniquefunname":"func (w *Wacom) QueryType() int","Funname":"QueryType","Returntype":"int","Args":""},{"Uniquefunname":"func (w *Wacom) ResetArea() error","Funname":"ResetArea","Returntype":"error","Args":""},{"Uniquefunname":"func (w *Wacom) SetArea(x1, y1, x2, y2 int) error","Funname":"SetArea","Returntype":"error","Args":"x1, y1, x2, y2 int"},{"Uniquefunname":"func (w *Wacom) SetButton(btn int, value string) error","Funname":"SetButton","Returntype":"error","Args":"btn int, value string"},{"Uniquefunname":"func (w *Wacom) SetMode(mode string) error","Funname":"SetMode","Returntype":"error","Args":"mode string"},{"Uniquefunname":"func (w *Wacom) SetPressureCurve(x1, y1, x2, y2 int) error","Funname":"SetPressureCurve","Returntype":"error","Args":"x1, y1, x2, y2 int"},{"Uniquefunname":"func (w *Wacom) SetRawSample(sample uint32) error","Funname":"SetRawSample","Returntype":"error","Args":"sample uint32"},{"Uniquefunname":"func (w *Wacom) SetRotate(value string) error","Funname":"SetRotate","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (w *Wacom) SetSuppress(value int) error","Funname":"SetSuppress","Returntype":"error","Args":"value int"},{"Uniquefunname":"func (w *Wacom) SetThreshold(thres int) error","Funname":"SetThreshold","Returntype":"error","Args":"thres int"},{"Uniquefunname":"func doAction(cmd string) error","Funname":"doAction","Returntype":"error","Args":"cmd string"},{"Uniquefunname":"func NewWacom(id int32) (*Wacom, error)","Funname":"dxinput.NewWacom","Returntype":"(*Wacom, error)","Args":"id int32"},{"Uniquefunname":"func NewWacomFromDevInfo(dev *DeviceInfo) (*Wacom, error)","Funname":"dxinput.NewWacomFromDevInfo","Returntype":"(*Wacom, error)","Args":"dev *DeviceInfo"},{"Uniquefunname":"func (w *Wacom) GetArea() (x1, y1, x2, y2 int, err error)","Funname":"dxinput.Wacom.GetArea","Returntype":"(x1, y1, x2, y2 int, err error)","Args":""},{"Uniquefunname":"func (w *Wacom) MapToOutput(output string) error","Funname":"dxinput.Wacom.MapToOutput","Returntype":"error","Args":"output string"},{"Uniquefunname":"func (w *Wacom) QueryType() int","Funname":"dxinput.Wacom.QueryType","Returntype":"int","Args":""},{"Uniquefunname":"func (w *Wacom) ResetArea() error","Funname":"dxinput.Wacom.ResetArea","Returntype":"error","Args":""},{"Uniquefunname":"func (w *Wacom) SetArea(x1, y1, x2, y2 int) error","Funname":"dxinput.Wacom.SetArea","Returntype":"error","Args":"x1, y1, x2, y2 int"},{"Uniquefunname":"func (w *Wacom) SetButton(btn int, value string) error","Funname":"dxinput.Wacom.SetButton","Returntype":"error","Args":"btn int, value string"},{"Uniquefunname":"func (w *Wacom) SetMode(mode string) error","Funname":"dxinput.Wacom.SetMode","Returntype":"error","Args":"mode string"},{"Uniquefunname":"func (w *Wacom) SetPressureCurve(x1, y1, x2, y2 int) error","Funname":"dxinput.Wacom.SetPressureCurve","Returntype":"error","Args":"x1, y1, x2, y2 int"},{"Uniquefunname":"func (w *Wacom) SetRawSample(sample uint32) error","Funname":"dxinput.Wacom.SetRawSample","Returntype":"error","Args":"sample uint32"},{"Uniquefunname":"func (w *Wacom) SetRotate(value string) error","Funname":"dxinput.Wacom.SetRotate","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (w *Wacom) SetSuppress(value int) error","Funname":"dxinput.Wacom.SetSuppress","Returntype":"error","Args":"value int"},{"Uniquefunname":"func (w *Wacom) SetThreshold(thres int) error","Funname":"dxinput.Wacom.SetThreshold","Returntype":"error","Args":"thres int"},{"Uniquefunname":"func (w *Wacom) getIdAsStr() string","Funname":"dxinput.Wacom.getIdAsStr","Returntype":"string","Args":""},{"Uniquefunname":"func doAction(cmd string) error","Funname":"dxinput.doAction","Returntype":"error","Args":"cmd string"},{"Uniquefunname":"func (w *Wacom) getIdAsStr() string","Funname":"getIdAsStr","Returntype":"string","Args":""}],"Records":[{"Name":"struct:dxinput.Wacom","Fields":["dxinput.Wacom.Id int32","dxinput.Wacom.Name string"]},{"Name":"const:dxinput","Fields":["dxinput.WacomTypeEraser","dxinput.WacomTypePad","dxinput.WacomTypeStylus","dxinput.WacomTypeUnknown","dxinput.cmdKeyArea","dxinput.cmdKeyButton","dxinput.cmdKeyMapToOutput","dxinput.cmdKeyMode","dxinput.cmdKeyPressureCurve","dxinput.cmdKeyRawSample","dxinput.cmdKeyResetArea","dxinput.cmdKeyRotate","dxinput.cmdKeySuppress","dxinput.cmdKeyThreshold","dxinput.cmdXSetWacom"]}]}
{"Filepath":"dxinput/common/common.go","Functions":[{"Uniquefunname":"func (infos DeviceInfos) Get(id int32) *DeviceInfo","Funname":"Get","Returntype":"*DeviceInfo","Args":"id int32"},{"Uniquefunname":"func (infos DeviceInfos) Get(id int32) *DeviceInfo","Funname":"common.DeviceInfos.Get","Returntype":"*DeviceInfo","Args":"id int32"}],"Records":[{"Name":"const:common","Fields":["common.DevTypeKeyboard","common.DevTypeMouse","common.DevTypeTouchpad","common.DevTypeTouchscreen","common.DevTypeUnknown","common.DevTypeWacom"]},{"Name":"struct:common.DeviceInfo","Fields":["common.DeviceInfo.Enabled bool","common.DeviceInfo.Id int32","common.DeviceInfo.Name string","common.DeviceInfo.Type int32"]}]}
{"Filepath":"dxinput/kwayland/inputdevice.go","Functions":[{"Uniquefunname":"func CanAdaptiveAccelProfile(sysName string) bool","Funname":"CanAdaptiveAccelProfile","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanDisableWhileTyping(sysName string) bool","Funname":"CanDisableWhileTyping","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanEnabled(sysName string) bool","Funname":"CanEnabled","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanLeftHanded(sysName string) bool","Funname":"CanLeftHanded","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanLmrTapButtonMap(sysName string) bool","Funname":"CanLmrTapButtonMap","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanMiddleButtonEmulation(sysName string) bool","Funname":"CanMiddleButtonEmulation","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanNaturalScroll(sysName string) bool","Funname":"CanNaturalScroll","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanScrollEdge(sysName string) bool","Funname":"CanScrollEdge","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanScrollTwoFinger(sysName string) bool","Funname":"CanScrollTwoFinger","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanTapToClick(sysName string) bool","Funname":"CanTapToClick","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func Enable(sysName string, enabled bool) error","Funname":"Enable","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableAdaptiveAccelProfile(sysName string, enabled bool) error","Funname":"EnableAdaptiveAccelProfile","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableDisableWhileTyping(sysName string, enabled bool) error","Funname":"EnableDisableWhileTyping","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableLeftHanded(sysName string, enabled bool) error","Funname":"EnableLeftHanded","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableLmrTapButtonMap(sysName string, enabled bool) error","Funname":"EnableLmrTapButtonMap","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableMiddleEmulation(sysName string, enabled bool) error","Funname":"EnableMiddleEmulation","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableNaturalScroll(sysName string, enabled bool) error","Funname":"EnableNaturalScroll","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableScrollEdge(sysName string, enabled bool) error","Funname":"EnableScrollEdge","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableScrollTwoFinger(sysName string, enabled bool) error","Funname":"EnableScrollTwoFinger","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableTapToClick(sysName string, enabled bool) error","Funname":"EnableTapToClick","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func GetPointerAccel(sysName string) (float64, error)","Funname":"GetPointerAccel","Returntype":"(float64, error)","Args":"sysName string"},{"Uniquefunname":"func GetScrollButton(sysName string) (uint32, error)","Funname":"GetScrollButton","Returntype":"(uint32, error)","Args":"sysName string"},{"Uniquefunname":"func ListDevice() (DeviceInfos, error)","Funname":"ListDevice","Returntype":"(DeviceInfos, error)","Args":""},{"Uniquefunname":"func NewDeviceInfo(sysName string) (*DeviceInfo, error)","Funname":"NewDeviceInfo","Returntype":"(*DeviceInfo, error)","Args":"sysName string"},{"Uniquefunname":"func SetPointerAccel(sysName string, v float64) error","Funname":"SetPointerAccel","Returntype":"error","Args":"sysName string, v float64"},{"Uniquefunname":"func SetScrollButton(sysName string, v uint32) error","Funname":"SetScrollButton","Returntype":"error","Args":"sysName string, v uint32"},{"Uniquefunname":"func getSessionBus() *dbus.Conn","Funname":"getSessionBus","Returntype":"*dbus.Conn","Args":""},{"Uniquefunname":"func isMouseDevice(dev *kwin.InputDevice) bool","Funname":"isMouseDevice","Returntype":"bool","Args":"dev *kwin.InputDevice"},{"Uniquefunname":"func CanAdaptiveAccelProfile(sysName string) bool","Funname":"kwayland.CanAdaptiveAccelProfile","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanDisableWhileTyping(sysName string) bool","Funname":"kwayland.CanDisableWhileTyping","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanEnabled(sysName string) bool","Funname":"kwayland.CanEnabled","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanLeftHanded(sysName string) bool","Funname":"kwayland.CanLeftHanded","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanLmrTapButtonMap(sysName string) bool","Funname":"kwayland.CanLmrTapButtonMap","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanMiddleButtonEmulation(sysName string) bool","Funname":"kwayland.CanMiddleButtonEmulation","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanNaturalScroll(sysName string) bool","Funname":"kwayland.CanNaturalScroll","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanScrollEdge(sysName string) bool","Funname":"kwayland.CanScrollEdge","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanScrollTwoFinger(sysName string) bool","Funname":"kwayland.CanScrollTwoFinger","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func CanTapToClick(sysName string) bool","Funname":"kwayland.CanTapToClick","Returntype":"bool","Args":"sysName string"},{"Uniquefunname":"func Enable(sysName string, enabled bool) error","Funname":"kwayland.Enable","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableAdaptiveAccelProfile(sysName string, enabled bool) error","Funname":"kwayland.EnableAdaptiveAccelProfile","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableDisableWhileTyping(sysName string, enabled bool) error","Funname":"kwayland.EnableDisableWhileTyping","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableLeftHanded(sysName string, enabled bool) error","Funname":"kwayland.EnableLeftHanded","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableLmrTapButtonMap(sysName string, enabled bool) error","Funname":"kwayland.EnableLmrTapButtonMap","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableMiddleEmulation(sysName string, enabled bool) error","Funname":"kwayland.EnableMiddleEmulation","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableNaturalScroll(sysName string, enabled bool) error","Funname":"kwayland.EnableNaturalScroll","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableScrollEdge(sysName string, enabled bool) error","Funname":"kwayland.EnableScrollEdge","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableScrollTwoFinger(sysName string, enabled bool) error","Funname":"kwayland.EnableScrollTwoFinger","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func EnableTapToClick(sysName string, enabled bool) error","Funname":"kwayland.EnableTapToClick","Returntype":"error","Args":"sysName string, enabled bool"},{"Uniquefunname":"func GetPointerAccel(sysName string) (float64, error)","Funname":"kwayland.GetPointerAccel","Returntype":"(float64, error)","Args":"sysName string"},{"Uniquefunname":"func GetScrollButton(sysName string) (uint32, error)","Funname":"kwayland.GetScrollButton","Returntype":"(uint32, error)","Args":"sysName string"},{"Uniquefunname":"func ListDevice() (DeviceInfos, error)","Funname":"kwayland.ListDevice","Returntype":"(DeviceInfos, error)","Args":""},{"Uniquefunname":"func NewDeviceInfo(sysName string) (*DeviceInfo, error)","Funname":"kwayland.NewDeviceInfo","Returntype":"(*DeviceInfo, error)","Args":"sysName string"},{"Uniquefunname":"func SetPointerAccel(sysName string, v float64) error","Funname":"kwayland.SetPointerAccel","Returntype":"error","Args":"sysName string, v float64"},{"Uniquefunname":"func SetScrollButton(sysName string, v uint32) error","Funname":"kwayland.SetScrollButton","Returntype":"error","Args":"sysName string, v uint32"},{"Uniquefunname":"func getSessionBus() *dbus.Conn","Funname":"kwayland.getSessionBus","Returntype":"*dbus.Conn","Args":""},{"Uniquefunname":"func isMouseDevice(dev *kwin.InputDevice) bool","Funname":"kwayland.isMouseDevice","Returntype":"bool","Args":"dev *kwin.InputDevice"},{"Uniquefunname":"func newInputDeviceObj(sysName string) (*kwin.InputDevice, error)","Funname":"kwayland.newInputDeviceObj","Returntype":"(*kwin.InputDevice, error)","Args":"sysName string"},{"Uniquefunname":"func newInputDeviceObj(sysName string) (*kwin.InputDevice, error)","Funname":"newInputDeviceObj","Returntype":"(*kwin.InputDevice, error)","Args":"sysName string"}],"Records":[{"Name":"const:kwayland","Fields":["kwayland.SysNamePrefix","kwayland.eventPathPrefix"]},{"Name":"var:kwayland","Fields":["kwayland._conn","kwayland.errUnsupported"]}]}
{"Filepath":"dxinput/utils/button_map.go","Functions":[{"Uniquefunname":"func CanLeftHanded(xid uint32, devName string) bool","Funname":"CanLeftHanded","Returntype":"bool","Args":"xid uint32, devName string"},{"Uniquefunname":"func GetButtonMap(xid uint32, devName string) ([]byte, error)","Funname":"GetButtonMap","Returntype":"([]byte, error)","Args":"xid uint32, devName string"},{"Uniquefunname":"func SetButtonMap(xid uint32, devName string, btnMap []byte) error","Funname":"SetButtonMap","Returntype":"error","Args":"xid uint32, devName string, btnMap []byte"},{"Uniquefunname":"func SetLeftHanded(xid uint32, devName string, useLeft bool) error","Funname":"SetLeftHanded","Returntype":"error","Args":"xid uint32, devName string, useLeft bool"},{"Uniquefunname":"func CanLeftHanded(xid uint32, devName string) bool","Funname":"utils.CanLeftHanded","Returntype":"bool","Args":"xid uint32, devName string"},{"Uniquefunname":"func GetButtonMap(xid uint32, devName string) ([]byte, error)","Funname":"utils.GetButtonMap","Returntype":"([]byte, error)","Args":"xid uint32, devName string"},{"Uniquefunname":"func SetButtonMap(xid uint32, devName string, btnMap []byte) error","Funname":"utils.SetButtonMap","Returntype":"error","Args":"xid uint32, devName string, btnMap []byte"},{"Uniquefunname":"func SetLeftHanded(xid uint32, devName string, useLeft bool) error","Funname":"utils.SetLeftHanded","Returntype":"error","Args":"xid uint32, devName string, useLeft bool"}],"Records":null}
{"Filepath":"dxinput/utils/byte_op.go","Functions":[{"Uniquefunname":"func ReadFloat32(datas []byte, nitems int32) []float32","Funname":"ReadFloat32","Returntype":"[]float32","Args":"datas []byte, nitems int32"},{"Uniquefunname":"func ReadInt16(datas []byte, nitems int32) []int16","Funname":"ReadInt16","Returntype":"[]int16","Args":"datas []byte, nitems int32"},{"Uniquefunname":"func ReadInt32(datas []byte, nitems int32) []int32","Funname":"ReadInt32","Returntype":"[]int32","Args":"datas []byte, nitems int32"},{"Uniquefunname":"func ReadInt8(datas []byte, nitems int32) []int8","Funname":"ReadInt8","Returntype":"[]int8","Args":"datas []byte, nitems int32"},{"Uniquefunname":"func WriteFloat32(values []float32) []byte","Funname":"WriteFloat32","Returntype":"[]byte","Args":"values []float32"},{"Uniquefunname":"func WriteInt16(values []int16) []byte","Funname":"WriteInt16","Returntype":"[]byte","Args":"values []int16"},{"Uniquefunname":"func WriteInt32(values []int32) []byte","Funname":"WriteInt32","Returntype":"[]byte","Args":"values []int32"},{"Uniquefunname":"func WriteInt8(values []int8) []byte","Funname":"WriteInt8","Returntype":"[]byte","Args":"values []int8"},{"Uniquefunname":"func machineEndian() binary.ByteOrder","Funname":"machineEndian","Returntype":"binary.ByteOrder","Args":""},{"Uniquefunname":"func ReadFloat32(datas []byte, nitems int32) []float32","Funname":"utils.ReadFloat32","Returntype":"[]float32","Args":"datas []byte, nitems int32"},{"Uniquefunname":"func ReadInt16(datas []byte, nitems int32) []int16","Funname":"utils.ReadInt16","Returntype":"[]int16","Args":"datas []byte, nitems int32"},{"Uniquefunname":"func ReadInt32(datas []byte, nitems int32) []int32","Funname":"utils.ReadInt32","Returntype":"[]int32","Args":"datas []byte, nitems int32"},{"Uniquefunname":"func ReadInt8(datas []byte, nitems int32) []int8","Funname":"utils.ReadInt8","Returntype":"[]int8","Args":"datas []byte, nitems int32"},{"Uniquefunname":"func WriteFloat32(values []float32) []byte","Funname":"utils.WriteFloat32","Returntype":"[]byte","Args":"values []float32"},{"Uniquefunname":"func WriteInt16(values []int16) []byte","Funname":"utils.WriteInt16","Returntype":"[]byte","Args":"values []int16"},{"Uniquefunname":"func WriteInt32(values []int32) []byte","Funname":"utils.WriteInt32","Returntype":"[]byte","Args":"values []int32"},{"Uniquefunname":"func WriteInt8(values []int8) []byte","Funname":"utils.WriteInt8","Returntype":"[]byte","Args":"values []int8"},{"Uniquefunname":"func machineEndian() binary.ByteOrder","Funname":"utils.machineEndian","Returntype":"binary.ByteOrder","Args":""}],"Records":null}
{"Filepath":"dxinput/utils/wrapper.go","Functions":[{"Uniquefunname":"func GetProperty(id int32, prop string) ([]byte, int32)","Funname":"GetProperty","Returntype":"([]byte, int32)","Args":"id int32, prop string"},{"Uniquefunname":"func IsPropertyExist(id int32, prop string) bool","Funname":"IsPropertyExist","Returntype":"bool","Args":"id int32, prop string"},{"Uniquefunname":"func ListDevice() DeviceInfos","Funname":"ListDevice","Returntype":"DeviceInfos","Args":""},{"Uniquefunname":"func QueryDeviceType(id int32) int32","Funname":"QueryDeviceType","Returntype":"int32","Args":"id int32"},{"Uniquefunname":"func SetFloat32Prop(id int32, prop string, values []float32) error","Funname":"SetFloat32Prop","Returntype":"error","Args":"id int32, prop string, values []float32"},{"Uniquefunname":"func SetInt16Prop(id int32, prop string, values []int16) error","Funname":"SetInt16Prop","Returntype":"error","Args":"id int32, prop string, values []int16"},{"Uniquefunname":"func SetInt32Prop(id int32, prop string, values []int32) error","Funname":"SetInt32Prop","Returntype":"error","Args":"id int32, prop string, values []int32"},{"Uniquefunname":"func SetInt8Prop(id int32, prop string, values []int8) error","Funname":"SetInt8Prop","Returntype":"error","Args":"id int32, prop string, values []int8"},{"Uniquefunname":"func SetKeyboardRepeat(enabled bool, delay, interval uint32) error","Funname":"SetKeyboardRepeat","Returntype":"error","Args":"enabled bool, delay, interval uint32"},{"Uniquefunname":"func byteArrayToUChar(datas []byte) []C.uchar","Funname":"byteArrayToUChar","Returntype":"[]C.uchar","Args":"datas []byte"},{"Uniquefunname":"func ucharArrayToByte(cData *C.uchar, length int) []byte","Funname":"ucharArrayToByte","Returntype":"[]byte","Args":"cData *C.uchar, length int"},{"Uniquefunname":"func GetProperty(id int32, prop string) ([]byte, int32)","Funname":"utils.GetProperty","Returntype":"([]byte, int32)","Args":"id int32, prop string"},{"Uniquefunname":"func IsPropertyExist(id int32, prop string) bool","Funname":"utils.IsPropertyExist","Returntype":"bool","Args":"id int32, prop string"},{"Uniquefunname":"func ListDevice() DeviceInfos","Funname":"utils.ListDevice","Returntype":"DeviceInfos","Args":""},{"Uniquefunname":"func QueryDeviceType(id int32) int32","Funname":"utils.QueryDeviceType","Returntype":"int32","Args":"id int32"},{"Uniquefunname":"func SetFloat32Prop(id int32, prop string, values []float32) error","Funname":"utils.SetFloat32Prop","Returntype":"error","Args":"id int32, prop string, values []float32"},{"Uniquefunname":"func SetInt16Prop(id int32, prop string, values []int16) error","Funname":"utils.SetInt16Prop","Returntype":"error","Args":"id int32, prop string, values []int16"},{"Uniquefunname":"func SetInt32Prop(id int32, prop string, values []int32) error","Funname":"utils.SetInt32Prop","Returntype":"error","Args":"id int32, prop string, values []int32"},{"Uniquefunname":"func SetInt8Prop(id int32, prop string, values []int8) error","Funname":"utils.SetInt8Prop","Returntype":"error","Args":"id int32, prop string, values []int8"},{"Uniquefunname":"func SetKeyboardRepeat(enabled bool, delay, interval uint32) error","Funname":"utils.SetKeyboardRepeat","Returntype":"error","Args":"enabled bool, delay, interval uint32"},{"Uniquefunname":"func byteArrayToUChar(datas []byte) []C.uchar","Funname":"utils.byteArrayToUChar","Returntype":"[]C.uchar","Args":"datas []byte"},{"Uniquefunname":"func ucharArrayToByte(cData *C.uchar, length int) []byte","Funname":"utils.ucharArrayToByte","Returntype":"[]byte","Args":"cData *C.uchar, length int"}],"Records":[{"Name":"const:utils","Fields":["utils.maxBufferLen"]}]}
{"Filepath":"graphic/graphic.go","Functions":[{"Uniquefunname":"func BlurImage(srcFile, dstFile string, sigma, numSteps float64, format string)*dbus.Error","Funname":"BlurImage","Returntype":"*dbus.Error","Args":"srcFile, dstFile string, sigma, numSteps float64, format string"},{"Uniquefunname":"func ClipImage(srcFile, dstFile string, x, y, w, h int32, format string)*dbus.Error","Funname":"ClipImage","Returntype":"*dbus.Error","Args":"srcFile, dstFile string, x, y, w, h int32, format string"},{"Uniquefunname":"func CompositeImage(srcFile, compFile, dstFile string, x, y int32, format string)*dbus.Error","Funname":"CompositeImage","Returntype":"*dbus.Error","Args":"srcFile, compFile, dstFile string, x, y int32, format string"},{"Uniquefunname":"func CompositeImageUri(srcDataUri, compDataUri string, x, y int32, format string)(resultDataUri string, busErr *dbus.Error)","Funname":"CompositeImageUri","Returntype":"(resultDataUri string, busErr *dbus.Error)","Args":"srcDataUri, compDataUri string, x, y int32, format string"},{"Uniquefunname":"func ConvertDataUriToImage(dataUri string, dstFile string, format string)*dbus.Error","Funname":"ConvertDataUriToImage","Returntype":"*dbus.Error","Args":"dataUri string, dstFile string, format string"},{"Uniquefunname":"func (graphic *Graphic) ConvertImage(srcFile, dstFile, format string) *dbus.Error","Funname":"ConvertImage","Returntype":"*dbus.Error","Args":"srcFile, dstFile, format string"},{"Uniquefunname":"func ConvertImageToDataUri(imgfile string)(dataUri string, busErr *dbus.Error)","Funname":"ConvertImageToDataUri","Returntype":"(dataUri string, busErr *dbus.Error)","Args":"imgfile string"},{"Uniquefunname":"func FillImage(srcFile, dstFile string, width, height int32, style, format string)*dbus.Error","Funname":"FillImage","Returntype":"*dbus.Error","Args":"srcFile, dstFile string, width, height int32, style, format string"},{"Uniquefunname":"func FlipImageHorizontal(srcFile, dstFile string, format string)*dbus.Error","Funname":"FlipImageHorizontal","Returntype":"*dbus.Error","Args":"srcFile, dstFile string, format string"},{"Uniquefunname":"func (graphic *Graphic) FlipImageVertical(srcFile, dstFile string, format string) *dbus.Error","Funname":"FlipImageVertical","Returntype":"*dbus.Error","Args":"srcFile, dstFile string, format string"},{"Uniquefunname":"func GetDominantColorOfImage(imgFile string)(h, s, v float64, busErr *dbus.Error)","Funname":"GetDominantColorOfImage","Returntype":"(h, s, v float64, busErr *dbus.Error)","Args":"imgFile string"},{"Uniquefunname":"func (graphic *Graphic) GetImageSize(imgFile string) (int32, int32, *dbus.Error)","Funname":"GetImageSize","Returntype":"(int32, int32, *dbus.Error)","Args":"imgFile string"},{"Uniquefunname":"func (*Graphic) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (graphic *Graphic) Hsv2Rgb(h, s, v float64) (r, g, b uint8, err *dbus.Error)","Funname":"Hsv2Rgb","Returntype":"(r, g, b uint8, err *dbus.Error)","Args":"h, s, v float64"},{"Uniquefunname":"func ResizeImage(srcFile, dstFile string, newWidth, newHeight int32, format string)*dbus.Error","Funname":"ResizeImage","Returntype":"*dbus.Error","Args":"srcFile, dstFile string, newWidth, newHeight int32, format string"},{"Uniquefunname":"func (graphic *Graphic) Rgb2Hsv(r, g, b uint8) (h, s, v float64, err *dbus.Error)","Funname":"Rgb2Hsv","Returntype":"(h, s, v float64, err *dbus.Error)","Args":"r, g, b uint8"},{"Uniquefunname":"func (graphic *Graphic) RotateImageLeft(srcFile, dstFile string, format string) *dbus.Error","Funname":"RotateImageLeft","Returntype":"*dbus.Error","Args":"srcFile, dstFile string, format string"},{"Uniquefunname":"func (graphic *Graphic) RotateImageRight(srcFile, dstFile string, format string) *dbus.Error","Funname":"RotateImageRight","Returntype":"*dbus.Error","Args":"srcFile, dstFile string, format string"},{"Uniquefunname":"func ThumbnailImage(srcFile, dstFile string, maxWidth, maxHeight uint32, format string)*dbus.Error","Funname":"ThumbnailImage","Returntype":"*dbus.Error","Args":"srcFile, dstFile string, maxWidth, maxHeight uint32, format string"},{"Uniquefunname":"func main.Graphic.BlurImage(srcFile, dstFile string, sigma, numSteps float64, format string)*dbus.Error","Funname":"main.Graphic.BlurImage","Returntype":"*dbus.Error","Args":"srcFile, dstFile string, sigma, numSteps float64, format string"},{"Uniquefunname":"func main.Graphic.ClipImage(srcFile, dstFile string, x, y, w, h int32, format string)*dbus.Error","Funname":"main.Graphic.ClipImage","Returntype":"*dbus.Error","Args":"srcFile, dstFile string, x, y, w, h int32, format string"},{"Uniquefunname":"func main.Graphic.CompositeImage(srcFile, compFile, dstFile string, x, y int32, format string)*dbus.Error","Funname":"main.Graphic.CompositeImage","Returntype":"*dbus.Error","Args":"srcFile, compFile, dstFile string, x, y int32, format string"},{"Uniquefunname":"func main.Graphic.CompositeImageUri(srcDataUri, compDataUri string, x, y int32, format string)(resultDataUri string, busErr *dbus.Error)","Funname":"main.Graphic.CompositeImageUri","Returntype":"(resultDataUri string, busErr *dbus.Error)","Args":"srcDataUri, compDataUri string, x, y int32, format string"},{"Uniquefunname":"func main.Graphic.ConvertDataUriToImage(dataUri string, dstFile string, format string)*dbus.Error","Funname":"main.Graphic.ConvertDataUriToImage","Returntype":"*dbus.Error","Args":"dataUri string, dstFile string, format string"},{"Uniquefunname":"func (graphic *Graphic) ConvertImage(srcFile, dstFile, format string) *dbus.Error","Funname":"main.Graphic.ConvertImage","Returntype":"*dbus.Error","Args":"srcFile, dstFile, format string"},{"Uniquefunname":"func main.Graphic.ConvertImageToDataUri(imgfile string)(dataUri string, busErr *dbus.Error)","Funname":"main.Graphic.ConvertImageToDataUri","Returntype":"(dataUri string, busErr *dbus.Error)","Args":"imgfile string"},{"Uniquefunname":"func main.Graphic.FillImage(srcFile, dstFile string, width, height int32, style, format string)*dbus.Error","Funname":"main.Graphic.FillImage","Returntype":"*dbus.Error","Args":"srcFile, dstFile string, width, height int32, style, format string"},{"Uniquefunname":"func main.Graphic.FlipImageHorizontal(srcFile, dstFile string, format string)*dbus.Error","Funname":"main.Graphic.FlipImageHorizontal","Returntype":"*dbus.Error","Args":"srcFile, dstFile string, format string"},{"Uniquefunname":"func (graphic *Graphic) FlipImageVertical(srcFile, dstFile string, format string) *dbus.Error","Funname":"main.Graphic.FlipImageVertical","Returntype":"*dbus.Error","Args":"srcFile, dstFile string, format string"},{"Uniquefunname":"func main.Graphic.GetDominantColorOfImage(imgFile string)(h, s, v float64, busErr *dbus.Error)","Funname":"main.Graphic.GetDominantColorOfImage","Returntype":"(h, s, v float64, busErr *dbus.Error)","Args":"imgFile string"},{"Uniquefunname":"func (graphic *Graphic) GetImageSize(imgFile string) (int32, int32, *dbus.Error)","Funname":"main.Graphic.GetImageSize","Returntype":"(int32, int32, *dbus.Error)","Args":"imgFile string"},{"Uniquefunname":"func (*Graphic) GetInterfaceName() string","Funname":"main.Graphic.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (graphic *Graphic) Hsv2Rgb(h, s, v float64) (r, g, b uint8, err *dbus.Error)","Funname":"main.Graphic.Hsv2Rgb","Returntype":"(r, g, b uint8, err *dbus.Error)","Args":"h, s, v float64"},{"Uniquefunname":"func main.Graphic.ResizeImage(srcFile, dstFile string, newWidth, newHeight int32, format string)*dbus.Error","Funname":"main.Graphic.ResizeImage","Returntype":"*dbus.Error","Args":"srcFile, dstFile string, newWidth, newHeight int32, format string"},{"Uniquefunname":"func (graphic *Graphic) Rgb2Hsv(r, g, b uint8) (h, s, v float64, err *dbus.Error)","Funname":"main.Graphic.Rgb2Hsv","Returntype":"(h, s, v float64, err *dbus.Error)","Args":"r, g, b uint8"},{"Uniquefunname":"func (graphic *Graphic) RotateImageLeft(srcFile, dstFile string, format string) *dbus.Error","Funname":"main.Graphic.RotateImageLeft","Returntype":"*dbus.Error","Args":"srcFile, dstFile string, format string"},{"Uniquefunname":"func (graphic *Graphic) RotateImageRight(srcFile, dstFile string, format string) *dbus.Error","Funname":"main.Graphic.RotateImageRight","Returntype":"*dbus.Error","Args":"srcFile, dstFile string, format string"},{"Uniquefunname":"func main.Graphic.ThumbnailImage(srcFile, dstFile string, maxWidth, maxHeight uint32, format string)*dbus.Error","Funname":"main.Graphic.ThumbnailImage","Returntype":"*dbus.Error","Args":"srcFile, dstFile string, maxWidth, maxHeight uint32, format string"}],"Records":[{"Name":"struct:main.Graphic","Fields":["main.Graphic.methods *struct { BlurImage func() `in:\"srcFile,dstFile,sigma,numSteps,format\"`; ClipImage func() `in:\"srcFile,dstFile,x,y,w,h,format\"`; ConvertImage func() `in:\"srcFile,dstFile,format\"`; ConvertImageToDataUri func() `in:\"srcFile\" out:\"dataUri\"`; ConvertDataUriToImage func() `in:\"dataUri,dstFile,format\"`; CompositeImage func() `in:\"srcFile,compFile,dstFile,x,y,format\"`; CompositeImageUri func() `in:\"srcDataUri,compDataUri,x,y,format\" out:\"resultDataUri\"`; GetDominantColorOfImage func() `in:\"imgFile\" out:\"h,s,v\"`;","main.Graphic.service *dbusutil.Service"]},{"Name":"const:main","Fields":["main.dbusInterface","main.dbusPath","main.dbusServiceName"]}]}
{"Filepath":"graphic/graphic_test.go","Functions":[{"Uniquefunname":"func (g *Graphic) SetUpSuite(c *C.C)","Funname":"SetUpSuite","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func Test(t *testing.T)","Funname":"Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func (g *Graphic) TestBlurImage(c *C.C)","Funname":"TestBlurImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *Graphic) TestClipImage(c *C.C)","Funname":"TestClipImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *Graphic) TestCompositeImage(c *C.C)","Funname":"TestCompositeImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *Graphic) TestCompositeImageUri(c *C.C)","Funname":"TestCompositeImageUri","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *Graphic) TestConvertDataUriToImage(c *C.C)","Funname":"TestConvertDataUriToImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *Graphic) TestConvertImage(c *C.C)","Funname":"TestConvertImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *Graphic) TestConvertImageToDataUri(c *C.C)","Funname":"TestConvertImageToDataUri","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *Graphic) TestFillImage(c *C.C)","Funname":"TestFillImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *Graphic) TestFlipImageHorizontal(c *C.C)","Funname":"TestFlipImageHorizontal","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *Graphic) TestFlipImageVertical(c *C.C)","Funname":"TestFlipImageVertical","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *Graphic) TestGetDominantColorOfImage(c *C.C)","Funname":"TestGetDominantColorOfImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *Graphic) TestGetImageSize(c *C.C)","Funname":"TestGetImageSize","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *Graphic) TestHsv(c *C.C)","Funname":"TestHsv","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *Graphic) TestResizeImage(c *C.C)","Funname":"TestResizeImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *Graphic) TestRotateImageLeft(c *C.C)","Funname":"TestRotateImageLeft","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *Graphic) TestRotateImageRight(c *C.C)","Funname":"TestRotateImageRight","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *Graphic) TestThumbnailImage(c *C.C)","Funname":"TestThumbnailImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func delta(x, y float64) float64","Funname":"delta","Returntype":"float64","Args":"x, y float64"},{"Uniquefunname":"func (g *Graphic) SetUpSuite(c *C.C)","Funname":"main.Graphic.SetUpSuite","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *Graphic) TestBlurImage(c *C.C)","Funname":"main.Graphic.TestBlurImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *Graphic) TestClipImage(c *C.C)","Funname":"main.Graphic.TestClipImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *Graphic) TestCompositeImage(c *C.C)","Funname":"main.Graphic.TestCompositeImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *Graphic) TestCompositeImageUri(c *C.C)","Funname":"main.Graphic.TestCompositeImageUri","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *Graphic) TestConvertDataUriToImage(c *C.C)","Funname":"main.Graphic.TestConvertDataUriToImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *Graphic) TestConvertImage(c *C.C)","Funname":"main.Graphic.TestConvertImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *Graphic) TestConvertImageToDataUri(c *C.C)","Funname":"main.Graphic.TestConvertImageToDataUri","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *Graphic) TestFillImage(c *C.C)","Funname":"main.Graphic.TestFillImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *Graphic) TestFlipImageHorizontal(c *C.C)","Funname":"main.Graphic.TestFlipImageHorizontal","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *Graphic) TestFlipImageVertical(c *C.C)","Funname":"main.Graphic.TestFlipImageVertical","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *Graphic) TestGetDominantColorOfImage(c *C.C)","Funname":"main.Graphic.TestGetDominantColorOfImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *Graphic) TestGetImageSize(c *C.C)","Funname":"main.Graphic.TestGetImageSize","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *Graphic) TestHsv(c *C.C)","Funname":"main.Graphic.TestHsv","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *Graphic) TestResizeImage(c *C.C)","Funname":"main.Graphic.TestResizeImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *Graphic) TestRotateImageLeft(c *C.C)","Funname":"main.Graphic.TestRotateImageLeft","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *Graphic) TestRotateImageRight(c *C.C)","Funname":"main.Graphic.TestRotateImageRight","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (g *Graphic) TestThumbnailImage(c *C.C)","Funname":"main.Graphic.TestThumbnailImage","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func main.Test(t *testing.T)","Funname":"main.Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func delta(x, y float64) float64","Funname":"main.delta","Returntype":"float64","Args":"x, y float64"}],"Records":[{"Name":"var:main","Fields":["main._"]},{"Name":"const:main","Fields":["main.originImg","main.originImgDominantColorH","main.originImgDominantColorS","main.originImgDominantColorV","main.originImgHeight","main.originImgPngIcon1","main.originImgPngIcon2","main.originImgPngSmall","main.originImgWidth","main.testDataUri"]}]}
{"Filepath":"graphic/main.go","Functions":[{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""}],"Records":[{"Name":"var:main","Fields":["main.logger"]}]}
{"Filepath":"grub_theme/font/font.go","Functions":[{"Uniquefunname":"func (f *Face) Close() error","Funname":"Close","Returntype":"error","Args":""},{"Uniquefunname":"func (f *Face) Height() int","Funname":"Height","Returntype":"int","Args":""},{"Uniquefunname":"func LoadFont(filename string) (*Face, error)","Funname":"LoadFont","Returntype":"(*Face, error)","Args":"filename string"},{"Uniquefunname":"func (f *Face) Close() error","Funname":"font.Face.Close","Returntype":"error","Args":""},{"Uniquefunname":"func (f *Face) Height() int","Funname":"font.Face.Height","Returntype":"int","Args":""},{"Uniquefunname":"func LoadFont(filename string) (*Face, error)","Funname":"font.LoadFont","Returntype":"(*Face, error)","Args":"filename string"},{"Uniquefunname":"func parseCharIndex(r *bytes.Reader) (charIndex, error)","Funname":"font.parseCharIndex","Returntype":"(charIndex, error)","Args":"r *bytes.Reader"},{"Uniquefunname":"func parseCharIndexes(data []byte) ([]charIndex, error)","Funname":"font.parseCharIndexes","Returntype":"([]charIndex, error)","Args":"data []byte"},{"Uniquefunname":"func parseSection(r io.Reader) (*section, error)","Funname":"font.parseSection","Returntype":"(*section, error)","Args":"r io.Reader"},{"Uniquefunname":"func (s *section) getString() string","Funname":"font.section.getString","Returntype":"string","Args":""},{"Uniquefunname":"func (s *section) getUint16BE() uint16","Funname":"font.section.getUint16BE","Returntype":"uint16","Args":""},{"Uniquefunname":"func (s *section) getString() string","Funname":"getString","Returntype":"string","Args":""},{"Uniquefunname":"func (s *section) getUint16BE() uint16","Funname":"getUint16BE","Returntype":"uint16","Args":""},{"Uniquefunname":"func parseCharIndex(r *bytes.Reader) (charIndex, error)","Funname":"parseCharIndex","Returntype":"(charIndex, error)","Args":"r *bytes.Reader"},{"Uniquefunname":"func parseCharIndexes(data []byte) ([]charIndex, error)","Funname":"parseCharIndexes","Returntype":"([]charIndex, error)","Args":"data []byte"},{"Uniquefunname":"func parseSection(r io.Reader) (*section, error)","Funname":"parseSection","Returntype":"(*section, error)","Args":"r io.Reader"}],"Records":[{"Name":"struct:font.Face","Fields":["font.Face.Ascent int","font.Face.CharIndexes []charIndex","font.Face.Descent int","font.Face.Family string","font.Face.MaxHeight int","font.Face.MaxWidth int","font.Face.Name string","font.Face.PointSize int","font.Face.Slant string","font.Face.Weight string","font.Face.br *bytes.Reader"]},{"Name":"struct:font.charIndex","Fields":["font.charIndex.flag byte","font.charIndex.offset uint32","font.charIndex.unicodeCodePoint uint32"]},{"Name":"struct:font.section","Fields":["font.section.data []byte","font.section.name string"]}]}
{"Filepath":"grub_theme/themetxt/grub_theme.peg.go","Functions":[{"Uniquefunname":"func AllowInvalidUTF8(b bool) Option","Funname":"AllowInvalidUTF8","Returntype":"Option","Args":"b bool"},{"Uniquefunname":"func Debug(b bool) Option","Funname":"Debug","Returntype":"Option","Args":"b bool"},{"Uniquefunname":"func Entrypoint(ruleName string) Option","Funname":"Entrypoint","Returntype":"Option","Args":"ruleName string"},{"Uniquefunname":"func (e errList) Error() string","Funname":"Error","Returntype":"string","Args":""},{"Uniquefunname":"func (p *parserError) Error() string","Funname":"Error","Returntype":"string","Args":""},{"Uniquefunname":"func GlobalStore(key string, value interface","Funname":"GlobalStore","Returntype":"Option","Args":"key string, value interface{}"},{"Uniquefunname":"func InitState(key string, value interface","Funname":"InitState","Returntype":"Option","Args":"key string, value interface{}"},{"Uniquefunname":"func MaxExpressions(maxExprCnt uint64) Option","Funname":"MaxExpressions","Returntype":"Option","Args":"maxExprCnt uint64"},{"Uniquefunname":"func Memoize(b bool) Option","Funname":"Memoize","Returntype":"Option","Args":"b bool"},{"Uniquefunname":"func Parse(filename string, b []byte, opts ...Option) (interface","Funname":"Parse","Returntype":"(interface{}, error)","Args":"filename string, b []byte, opts ...Option"},{"Uniquefunname":"func ParseFile(filename string, opts ...Option) (i interface","Funname":"ParseFile","Returntype":"(i interface{}, err error)","Args":"filename string, opts ...Option"},{"Uniquefunname":"func ParseReader(filename string, r io.Reader, opts ...Option) (interface","Funname":"ParseReader","Returntype":"(interface{}, error)","Args":"filename string, r io.Reader, opts ...Option"},{"Uniquefunname":"func Recover(b bool) Option","Funname":"Recover","Returntype":"Option","Args":"b bool"},{"Uniquefunname":"func Statistics(stats *Stats, choiceNoMatch string) Option","Funname":"Statistics","Returntype":"Option","Args":"stats *Stats, choiceNoMatch string"},{"Uniquefunname":"func (p position) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (e *errList) add(err error)","Funname":"add","Returntype":"","Args":"err error"},{"Uniquefunname":"func (p *parser) addErr(err error)","Funname":"addErr","Returntype":"","Args":"err error"},{"Uniquefunname":"func (p *parser) addErrAt(err error, pos position, expected []string)","Funname":"addErrAt","Returntype":"","Args":"err error, pos position, expected []string"},{"Uniquefunname":"func (p *parser) buildRulesTable(g *grammar)","Funname":"buildRulesTable","Returntype":"","Args":"g *grammar"},{"Uniquefunname":"func (p *parser) callonAbsNum1() (interface","Funname":"callonAbsNum1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonBool2() (interface","Funname":"callonBool2","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonBool4() (interface","Funname":"callonBool4","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonCPD1() (interface","Funname":"callonCPD1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonCombinedNum1() (interface","Funname":"callonCombinedNum1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonCombinedNumOp1() (interface","Funname":"callonCombinedNumOp1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonComment1() (interface","Funname":"callonComment1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonComponent1() (interface","Funname":"callonComponent1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonComponentElement1() (interface","Funname":"callonComponentElement1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonGPD1() (interface","Funname":"callonGPD1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonID1() (interface","Funname":"callonID1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonInteger1() (interface","Funname":"callonInteger1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonNumeric1() (interface","Funname":"callonNumeric1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonOption1() (interface","Funname":"callonOption1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonRelNum1() (interface","Funname":"callonRelNum1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonStatement1() (interface","Funname":"callonStatement1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonString1() (interface","Funname":"callonString1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonTheme1() (interface","Funname":"callonTheme1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonValue1() (interface","Funname":"callonValue1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) cloneState() storeDict","Funname":"cloneState","Returntype":"storeDict","Args":""},{"Uniquefunname":"func (e *errList) dedupe()","Funname":"dedupe","Returntype":"","Args":""},{"Uniquefunname":"func (e errList) err() error","Funname":"err","Returntype":"error","Args":""},{"Uniquefunname":"func (p *parser) failAt(fail bool, pos position, want string)","Funname":"failAt","Returntype":"","Args":"fail bool, pos position, want string"},{"Uniquefunname":"func (p *parser) getMemoized(node interface","Funname":"getMemoized","Returntype":"(resultTuple, bool)","Args":"node interface{}"},{"Uniquefunname":"func (p *parser) in(s string) string","Funname":"in","Returntype":"string","Args":"s string"},{"Uniquefunname":"func (p *parser) incChoiceAltCnt(ch *choiceExpr, altI int)","Funname":"incChoiceAltCnt","Returntype":"","Args":"ch *choiceExpr, altI int"},{"Uniquefunname":"func listJoin(list []string, sep string, lastSep string) string","Funname":"listJoin","Returntype":"string","Args":"list []string, sep string, lastSep string"},{"Uniquefunname":"func newParser(filename string, b []byte, opts ...Option) *parser","Funname":"newParser","Returntype":"*parser","Args":"filename string, b []byte, opts ...Option"},{"Uniquefunname":"func (c *current) onAbsNum1(i interface","Funname":"onAbsNum1","Returntype":"(interface{}, error)","Args":"i interface{}"},{"Uniquefunname":"func (c *current) onBool2() (interface","Funname":"onBool2","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (c *current) onBool4() (interface","Funname":"onBool4","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (c *current) onCPD1(option, val interface","Funname":"onCPD1","Returntype":"(interface{}, error)","Args":"option, val interface{}"},{"Uniquefunname":"func (c *current) onCombinedNum1(rel, op, abs interface","Funname":"onCombinedNum1","Returntype":"(interface{}, error)","Args":"rel, op, abs interface{}"},{"Uniquefunname":"func (c *current) onCombinedNumOp1() (interface","Funname":"onCombinedNumOp1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (c *current) onComment1() (interface","Funname":"onComment1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (c *current) onComponent1(type0, elements interface","Funname":"onComponent1","Returntype":"(interface{}, error)","Args":"type0, elements interface{}"},{"Uniquefunname":"func (c *current) onComponentElement1(ele interface","Funname":"onComponentElement1","Returntype":"(interface{}, error)","Args":"ele interface{}"},{"Uniquefunname":"func (c *current) onGPD1(option, val interface","Funname":"onGPD1","Returntype":"(interface{}, error)","Args":"option, val interface{}"},{"Uniquefunname":"func (c *current) onID1() (interface","Funname":"onID1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (c *current) onInteger1() (interface","Funname":"onInteger1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (c *current) onNumeric1(num interface","Funname":"onNumeric1","Returntype":"(interface{}, error)","Args":"num interface{}"},{"Uniquefunname":"func (c *current) onOption1() (interface","Funname":"onOption1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (c *current) onRelNum1(i interface","Funname":"onRelNum1","Returntype":"(interface{}, error)","Args":"i interface{}"},{"Uniquefunname":"func (c *current) onStatement1(s interface","Funname":"onStatement1","Returntype":"(interface{}, error)","Args":"s interface{}"},{"Uniquefunname":"func (c *current) onString1() (interface","Funname":"onString1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (c *current) onTheme1(statements interface","Funname":"onTheme1","Returntype":"(interface{}, error)","Args":"statements interface{}"},{"Uniquefunname":"func (c *current) onValue1(val interface","Funname":"onValue1","Returntype":"(interface{}, error)","Args":"val interface{}"},{"Uniquefunname":"func (p *parser) out(s string) string","Funname":"out","Returntype":"string","Args":"s string"},{"Uniquefunname":"func (p *parser) parse(g *grammar) (val interface","Funname":"parse","Returntype":"(val interface{}, err error)","Args":"g *grammar"},{"Uniquefunname":"func (p *parser) parseActionExpr(act *actionExpr) (interface","Funname":"parseActionExpr","Returntype":"(interface{}, bool)","Args":"act *actionExpr"},{"Uniquefunname":"func (p *parser) parseAndCodeExpr(and *andCodeExpr) (interface","Funname":"parseAndCodeExpr","Returntype":"(interface{}, bool)","Args":"and *andCodeExpr"},{"Uniquefunname":"func (p *parser) parseAndExpr(and *andExpr) (interface","Funname":"parseAndExpr","Returntype":"(interface{}, bool)","Args":"and *andExpr"},{"Uniquefunname":"func (p *parser) parseAnyMatcher(any *anyMatcher) (interface","Funname":"parseAnyMatcher","Returntype":"(interface{}, bool)","Args":"any *anyMatcher"},{"Uniquefunname":"func (p *parser) parseCharClassMatcher(chr *charClassMatcher) (interface","Funname":"parseCharClassMatcher","Returntype":"(interface{}, bool)","Args":"chr *charClassMatcher"},{"Uniquefunname":"func (p *parser) parseChoiceExpr(ch *choiceExpr) (interface","Funname":"parseChoiceExpr","Returntype":"(interface{}, bool)","Args":"ch *choiceExpr"},{"Uniquefunname":"func (p *parser) parseExpr(expr interface","Funname":"parseExpr","Returntype":"(interface{}, bool)","Args":"expr interface{}"},{"Uniquefunname":"func (p *parser) parseLabeledExpr(lab *labeledExpr) (interface","Funname":"parseLabeledExpr","Returntype":"(interface{}, bool)","Args":"lab *labeledExpr"},{"Uniquefunname":"func (p *parser) parseLitMatcher(lit *litMatcher) (interface","Funname":"parseLitMatcher","Returntype":"(interface{}, bool)","Args":"lit *litMatcher"},{"Uniquefunname":"func (p *parser) parseNotCodeExpr(not *notCodeExpr) (interface","Funname":"parseNotCodeExpr","Returntype":"(interface{}, bool)","Args":"not *notCodeExpr"},{"Uniquefunname":"func (p *parser) parseNotExpr(not *notExpr) (interface","Funname":"parseNotExpr","Returntype":"(interface{}, bool)","Args":"not *notExpr"},{"Uniquefunname":"func (p *parser) parseOneOrMoreExpr(expr *oneOrMoreExpr) (interface","Funname":"parseOneOrMoreExpr","Returntype":"(interface{}, bool)","Args":"expr *oneOrMoreExpr"},{"Uniquefunname":"func (p *parser) parseRecoveryExpr(recover *recoveryExpr) (interface","Funname":"parseRecoveryExpr","Returntype":"(interface{}, bool)","Args":"recover *recoveryExpr"},{"Uniquefunname":"func (p *parser) parseRule(rule *rule) (interface","Funname":"parseRule","Returntype":"(interface{}, bool)","Args":"rule *rule"},{"Uniquefunname":"func (p *parser) parseRuleRefExpr(ref *ruleRefExpr) (interface","Funname":"parseRuleRefExpr","Returntype":"(interface{}, bool)","Args":"ref *ruleRefExpr"},{"Uniquefunname":"func (p *parser) parseSeqExpr(seq *seqExpr) (interface","Funname":"parseSeqExpr","Returntype":"(interface{}, bool)","Args":"seq *seqExpr"},{"Uniquefunname":"func (p *parser) parseStateCodeExpr(state *stateCodeExpr) (interface","Funname":"parseStateCodeExpr","Returntype":"(interface{}, bool)","Args":"state *stateCodeExpr"},{"Uniquefunname":"func (p *parser) parseThrowExpr(expr *throwExpr) (interface","Funname":"parseThrowExpr","Returntype":"(interface{}, bool)","Args":"expr *throwExpr"},{"Uniquefunname":"func (p *parser) parseZeroOrMoreExpr(expr *zeroOrMoreExpr) (interface","Funname":"parseZeroOrMoreExpr","Returntype":"(interface{}, bool)","Args":"expr *zeroOrMoreExpr"},{"Uniquefunname":"func (p *parser) parseZeroOrOneExpr(expr *zeroOrOneExpr) (interface","Funname":"parseZeroOrOneExpr","Returntype":"(interface{}, bool)","Args":"expr *zeroOrOneExpr"},{"Uniquefunname":"func (p *parser) popRecovery()","Funname":"popRecovery","Returntype":"","Args":""},{"Uniquefunname":"func (p *parser) popV()","Funname":"popV","Returntype":"","Args":""},{"Uniquefunname":"func (p *parser) print(prefix, s string) string","Funname":"print","Returntype":"string","Args":"prefix, s string"},{"Uniquefunname":"func (p *parser) pushRecovery(labels []string, expr interface","Funname":"pushRecovery","Returntype":"","Args":"labels []string, expr interface{}"},{"Uniquefunname":"func (p *parser) pushV()","Funname":"pushV","Returntype":"","Args":""},{"Uniquefunname":"func (p *parser) read()","Funname":"read","Returntype":"","Args":""},{"Uniquefunname":"func (p *parser) restore(pt savepoint)","Funname":"restore","Returntype":"","Args":"pt savepoint"},{"Uniquefunname":"func (p *parser) restoreState(state storeDict)","Funname":"restoreState","Returntype":"","Args":"state storeDict"},{"Uniquefunname":"func (p *parser) setMemoized(pt savepoint, node interface","Funname":"setMemoized","Returntype":"","Args":"pt savepoint, node interface{}, tuple resultTuple"},{"Uniquefunname":"func (p *parser) setOptions(opts []Option)","Funname":"setOptions","Returntype":"","Args":"opts []Option"},{"Uniquefunname":"func (p *parser) sliceFrom(start savepoint) []byte","Funname":"sliceFrom","Returntype":"[]byte","Args":"start savepoint"},{"Uniquefunname":"func AllowInvalidUTF8(b bool) Option","Funname":"themetxt.AllowInvalidUTF8","Returntype":"Option","Args":"b bool"},{"Uniquefunname":"func Debug(b bool) Option","Funname":"themetxt.Debug","Returntype":"Option","Args":"b bool"},{"Uniquefunname":"func Entrypoint(ruleName string) Option","Funname":"themetxt.Entrypoint","Returntype":"Option","Args":"ruleName string"},{"Uniquefunname":"func GlobalStore(key string, value interface","Funname":"themetxt.GlobalStore","Returntype":"Option","Args":"key string, value interface{}"},{"Uniquefunname":"func InitState(key string, value interface","Funname":"themetxt.InitState","Returntype":"Option","Args":"key string, value interface{}"},{"Uniquefunname":"func MaxExpressions(maxExprCnt uint64) Option","Funname":"themetxt.MaxExpressions","Returntype":"Option","Args":"maxExprCnt uint64"},{"Uniquefunname":"func Memoize(b bool) Option","Funname":"themetxt.Memoize","Returntype":"Option","Args":"b bool"},{"Uniquefunname":"func Parse(filename string, b []byte, opts ...Option) (interface","Funname":"themetxt.Parse","Returntype":"(interface{}, error)","Args":"filename string, b []byte, opts ...Option"},{"Uniquefunname":"func ParseFile(filename string, opts ...Option) (i interface","Funname":"themetxt.ParseFile","Returntype":"(i interface{}, err error)","Args":"filename string, opts ...Option"},{"Uniquefunname":"func ParseReader(filename string, r io.Reader, opts ...Option) (interface","Funname":"themetxt.ParseReader","Returntype":"(interface{}, error)","Args":"filename string, r io.Reader, opts ...Option"},{"Uniquefunname":"func Recover(b bool) Option","Funname":"themetxt.Recover","Returntype":"Option","Args":"b bool"},{"Uniquefunname":"func Statistics(stats *Stats, choiceNoMatch string) Option","Funname":"themetxt.Statistics","Returntype":"Option","Args":"stats *Stats, choiceNoMatch string"},{"Uniquefunname":"func (c *current) onAbsNum1(i interface","Funname":"themetxt.current.onAbsNum1","Returntype":"(interface{}, error)","Args":"i interface{}"},{"Uniquefunname":"func (c *current) onBool2() (interface","Funname":"themetxt.current.onBool2","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (c *current) onBool4() (interface","Funname":"themetxt.current.onBool4","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (c *current) onCPD1(option, val interface","Funname":"themetxt.current.onCPD1","Returntype":"(interface{}, error)","Args":"option, val interface{}"},{"Uniquefunname":"func (c *current) onCombinedNum1(rel, op, abs interface","Funname":"themetxt.current.onCombinedNum1","Returntype":"(interface{}, error)","Args":"rel, op, abs interface{}"},{"Uniquefunname":"func (c *current) onCombinedNumOp1() (interface","Funname":"themetxt.current.onCombinedNumOp1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (c *current) onComment1() (interface","Funname":"themetxt.current.onComment1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (c *current) onComponent1(type0, elements interface","Funname":"themetxt.current.onComponent1","Returntype":"(interface{}, error)","Args":"type0, elements interface{}"},{"Uniquefunname":"func (c *current) onComponentElement1(ele interface","Funname":"themetxt.current.onComponentElement1","Returntype":"(interface{}, error)","Args":"ele interface{}"},{"Uniquefunname":"func (c *current) onGPD1(option, val interface","Funname":"themetxt.current.onGPD1","Returntype":"(interface{}, error)","Args":"option, val interface{}"},{"Uniquefunname":"func (c *current) onID1() (interface","Funname":"themetxt.current.onID1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (c *current) onInteger1() (interface","Funname":"themetxt.current.onInteger1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (c *current) onNumeric1(num interface","Funname":"themetxt.current.onNumeric1","Returntype":"(interface{}, error)","Args":"num interface{}"},{"Uniquefunname":"func (c *current) onOption1() (interface","Funname":"themetxt.current.onOption1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (c *current) onRelNum1(i interface","Funname":"themetxt.current.onRelNum1","Returntype":"(interface{}, error)","Args":"i interface{}"},{"Uniquefunname":"func (c *current) onStatement1(s interface","Funname":"themetxt.current.onStatement1","Returntype":"(interface{}, error)","Args":"s interface{}"},{"Uniquefunname":"func (c *current) onString1() (interface","Funname":"themetxt.current.onString1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (c *current) onTheme1(statements interface","Funname":"themetxt.current.onTheme1","Returntype":"(interface{}, error)","Args":"statements interface{}"},{"Uniquefunname":"func (c *current) onValue1(val interface","Funname":"themetxt.current.onValue1","Returntype":"(interface{}, error)","Args":"val interface{}"},{"Uniquefunname":"func (e errList) Error() string","Funname":"themetxt.errList.Error","Returntype":"string","Args":""},{"Uniquefunname":"func (e *errList) add(err error)","Funname":"themetxt.errList.add","Returntype":"","Args":"err error"},{"Uniquefunname":"func (e *errList) dedupe()","Funname":"themetxt.errList.dedupe","Returntype":"","Args":""},{"Uniquefunname":"func (e errList) err() error","Funname":"themetxt.errList.err","Returntype":"error","Args":""},{"Uniquefunname":"func listJoin(list []string, sep string, lastSep string) string","Funname":"themetxt.listJoin","Returntype":"string","Args":"list []string, sep string, lastSep string"},{"Uniquefunname":"func newParser(filename string, b []byte, opts ...Option) *parser","Funname":"themetxt.newParser","Returntype":"*parser","Args":"filename string, b []byte, opts ...Option"},{"Uniquefunname":"func (p *parser) addErr(err error)","Funname":"themetxt.parser.addErr","Returntype":"","Args":"err error"},{"Uniquefunname":"func (p *parser) addErrAt(err error, pos position, expected []string)","Funname":"themetxt.parser.addErrAt","Returntype":"","Args":"err error, pos position, expected []string"},{"Uniquefunname":"func (p *parser) buildRulesTable(g *grammar)","Funname":"themetxt.parser.buildRulesTable","Returntype":"","Args":"g *grammar"},{"Uniquefunname":"func (p *parser) callonAbsNum1() (interface","Funname":"themetxt.parser.callonAbsNum1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonBool2() (interface","Funname":"themetxt.parser.callonBool2","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonBool4() (interface","Funname":"themetxt.parser.callonBool4","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonCPD1() (interface","Funname":"themetxt.parser.callonCPD1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonCombinedNum1() (interface","Funname":"themetxt.parser.callonCombinedNum1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonCombinedNumOp1() (interface","Funname":"themetxt.parser.callonCombinedNumOp1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonComment1() (interface","Funname":"themetxt.parser.callonComment1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonComponent1() (interface","Funname":"themetxt.parser.callonComponent1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonComponentElement1() (interface","Funname":"themetxt.parser.callonComponentElement1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonGPD1() (interface","Funname":"themetxt.parser.callonGPD1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonID1() (interface","Funname":"themetxt.parser.callonID1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonInteger1() (interface","Funname":"themetxt.parser.callonInteger1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonNumeric1() (interface","Funname":"themetxt.parser.callonNumeric1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonOption1() (interface","Funname":"themetxt.parser.callonOption1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonRelNum1() (interface","Funname":"themetxt.parser.callonRelNum1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonStatement1() (interface","Funname":"themetxt.parser.callonStatement1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonString1() (interface","Funname":"themetxt.parser.callonString1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonTheme1() (interface","Funname":"themetxt.parser.callonTheme1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) callonValue1() (interface","Funname":"themetxt.parser.callonValue1","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (p *parser) cloneState() storeDict","Funname":"themetxt.parser.cloneState","Returntype":"storeDict","Args":""},{"Uniquefunname":"func (p *parser) failAt(fail bool, pos position, want string)","Funname":"themetxt.parser.failAt","Returntype":"","Args":"fail bool, pos position, want string"},{"Uniquefunname":"func (p *parser) getMemoized(node interface","Funname":"themetxt.parser.getMemoized","Returntype":"(resultTuple, bool)","Args":"node interface{}"},{"Uniquefunname":"func (p *parser) in(s string) string","Funname":"themetxt.parser.in","Returntype":"string","Args":"s string"},{"Uniquefunname":"func (p *parser) incChoiceAltCnt(ch *choiceExpr, altI int)","Funname":"themetxt.parser.incChoiceAltCnt","Returntype":"","Args":"ch *choiceExpr, altI int"},{"Uniquefunname":"func (p *parser) out(s string) string","Funname":"themetxt.parser.out","Returntype":"string","Args":"s string"},{"Uniquefunname":"func (p *parser) parse(g *grammar) (val interface","Funname":"themetxt.parser.parse","Returntype":"(val interface{}, err error)","Args":"g *grammar"},{"Uniquefunname":"func (p *parser) parseActionExpr(act *actionExpr) (interface","Funname":"themetxt.parser.parseActionExpr","Returntype":"(interface{}, bool)","Args":"act *actionExpr"},{"Uniquefunname":"func (p *parser) parseAndCodeExpr(and *andCodeExpr) (interface","Funname":"themetxt.parser.parseAndCodeExpr","Returntype":"(interface{}, bool)","Args":"and *andCodeExpr"},{"Uniquefunname":"func (p *parser) parseAndExpr(and *andExpr) (interface","Funname":"themetxt.parser.parseAndExpr","Returntype":"(interface{}, bool)","Args":"and *andExpr"},{"Uniquefunname":"func (p *parser) parseAnyMatcher(any *anyMatcher) (interface","Funname":"themetxt.parser.parseAnyMatcher","Returntype":"(interface{}, bool)","Args":"any *anyMatcher"},{"Uniquefunname":"func (p *parser) parseCharClassMatcher(chr *charClassMatcher) (interface","Funname":"themetxt.parser.parseCharClassMatcher","Returntype":"(interface{}, bool)","Args":"chr *charClassMatcher"},{"Uniquefunname":"func (p *parser) parseChoiceExpr(ch *choiceExpr) (interface","Funname":"themetxt.parser.parseChoiceExpr","Returntype":"(interface{}, bool)","Args":"ch *choiceExpr"},{"Uniquefunname":"func (p *parser) parseExpr(expr interface","Funname":"themetxt.parser.parseExpr","Returntype":"(interface{}, bool)","Args":"expr interface{}"},{"Uniquefunname":"func (p *parser) parseLabeledExpr(lab *labeledExpr) (interface","Funname":"themetxt.parser.parseLabeledExpr","Returntype":"(interface{}, bool)","Args":"lab *labeledExpr"},{"Uniquefunname":"func (p *parser) parseLitMatcher(lit *litMatcher) (interface","Funname":"themetxt.parser.parseLitMatcher","Returntype":"(interface{}, bool)","Args":"lit *litMatcher"},{"Uniquefunname":"func (p *parser) parseNotCodeExpr(not *notCodeExpr) (interface","Funname":"themetxt.parser.parseNotCodeExpr","Returntype":"(interface{}, bool)","Args":"not *notCodeExpr"},{"Uniquefunname":"func (p *parser) parseNotExpr(not *notExpr) (interface","Funname":"themetxt.parser.parseNotExpr","Returntype":"(interface{}, bool)","Args":"not *notExpr"},{"Uniquefunname":"func (p *parser) parseOneOrMoreExpr(expr *oneOrMoreExpr) (interface","Funname":"themetxt.parser.parseOneOrMoreExpr","Returntype":"(interface{}, bool)","Args":"expr *oneOrMoreExpr"},{"Uniquefunname":"func (p *parser) parseRecoveryExpr(recover *recoveryExpr) (interface","Funname":"themetxt.parser.parseRecoveryExpr","Returntype":"(interface{}, bool)","Args":"recover *recoveryExpr"},{"Uniquefunname":"func (p *parser) parseRule(rule *rule) (interface","Funname":"themetxt.parser.parseRule","Returntype":"(interface{}, bool)","Args":"rule *rule"},{"Uniquefunname":"func (p *parser) parseRuleRefExpr(ref *ruleRefExpr) (interface","Funname":"themetxt.parser.parseRuleRefExpr","Returntype":"(interface{}, bool)","Args":"ref *ruleRefExpr"},{"Uniquefunname":"func (p *parser) parseSeqExpr(seq *seqExpr) (interface","Funname":"themetxt.parser.parseSeqExpr","Returntype":"(interface{}, bool)","Args":"seq *seqExpr"},{"Uniquefunname":"func (p *parser) parseStateCodeExpr(state *stateCodeExpr) (interface","Funname":"themetxt.parser.parseStateCodeExpr","Returntype":"(interface{}, bool)","Args":"state *stateCodeExpr"},{"Uniquefunname":"func (p *parser) parseThrowExpr(expr *throwExpr) (interface","Funname":"themetxt.parser.parseThrowExpr","Returntype":"(interface{}, bool)","Args":"expr *throwExpr"},{"Uniquefunname":"func (p *parser) parseZeroOrMoreExpr(expr *zeroOrMoreExpr) (interface","Funname":"themetxt.parser.parseZeroOrMoreExpr","Returntype":"(interface{}, bool)","Args":"expr *zeroOrMoreExpr"},{"Uniquefunname":"func (p *parser) parseZeroOrOneExpr(expr *zeroOrOneExpr) (interface","Funname":"themetxt.parser.parseZeroOrOneExpr","Returntype":"(interface{}, bool)","Args":"expr *zeroOrOneExpr"},{"Uniquefunname":"func (p *parser) popRecovery()","Funname":"themetxt.parser.popRecovery","Returntype":"","Args":""},{"Uniquefunname":"func (p *parser) popV()","Funname":"themetxt.parser.popV","Returntype":"","Args":""},{"Uniquefunname":"func (p *parser) print(prefix, s string) string","Funname":"themetxt.parser.print","Returntype":"string","Args":"prefix, s string"},{"Uniquefunname":"func (p *parser) pushRecovery(labels []string, expr interface","Funname":"themetxt.parser.pushRecovery","Returntype":"","Args":"labels []string, expr interface{}"},{"Uniquefunname":"func (p *parser) pushV()","Funname":"themetxt.parser.pushV","Returntype":"","Args":""},{"Uniquefunname":"func (p *parser) read()","Funname":"themetxt.parser.read","Returntype":"","Args":""},{"Uniquefunname":"func (p *parser) restore(pt savepoint)","Funname":"themetxt.parser.restore","Returntype":"","Args":"pt savepoint"},{"Uniquefunname":"func (p *parser) restoreState(state storeDict)","Funname":"themetxt.parser.restoreState","Returntype":"","Args":"state storeDict"},{"Uniquefunname":"func (p *parser) setMemoized(pt savepoint, node interface","Funname":"themetxt.parser.setMemoized","Returntype":"","Args":"pt savepoint, node interface{}, tuple resultTuple"},{"Uniquefunname":"func (p *parser) setOptions(opts []Option)","Funname":"themetxt.parser.setOptions","Returntype":"","Args":"opts []Option"},{"Uniquefunname":"func (p *parser) sliceFrom(start savepoint) []byte","Funname":"themetxt.parser.sliceFrom","Returntype":"[]byte","Args":"start savepoint"},{"Uniquefunname":"func (p *parserError) Error() string","Funname":"themetxt.parserError.Error","Returntype":"string","Args":""},{"Uniquefunname":"func (p position) String() string","Funname":"themetxt.position.String","Returntype":"string","Args":""},{"Uniquefunname":"func toIfaceSlice(v interface","Funname":"themetxt.toIfaceSlice","Returntype":"[]interface{}","Args":"v interface{}"},{"Uniquefunname":"func toIfaceSlice(v interface","Funname":"toIfaceSlice","Returntype":"[]interface{}","Args":"v interface{}"}],"Records":[{"Name":"interface","Fields":["themetxt.Cloner"]},{"Name":"struct:themetxt.Stats","Fields":["themetxt.Stats.ChoiceAltCnt map[string]map[string]int","themetxt.Stats.ExprCnt uint64"]},{"Name":"struct:themetxt.actionExpr","Fields":["themetxt.actionExpr.expr interface{}","themetxt.actionExpr.pos position","themetxt.actionExpr.run func(*parser) (interface{}, error)"]},{"Name":"struct:themetxt.andCodeExpr","Fields":["themetxt.andCodeExpr.pos position","themetxt.andCodeExpr.run func(*parser) (bool, error)"]},{"Name":"struct:themetxt.charClassMatcher","Fields":["themetxt.charClassMatcher.basicLatinChars [128]bool","themetxt.charClassMatcher.chars []rune","themetxt.charClassMatcher.classes []*unicode.RangeTable","themetxt.charClassMatcher.ignoreCase bool","themetxt.charClassMatcher.inverted bool","themetxt.charClassMatcher.pos position","themetxt.charClassMatcher.ranges []rune","themetxt.charClassMatcher.val string"]},{"Name":"struct:themetxt.choiceExpr","Fields":["themetxt.choiceExpr.alternatives []interface{}","themetxt.choiceExpr.pos position"]},{"Name":"const:themetxt","Fields":["themetxt.choiceNoMatch"]},{"Name":"struct:themetxt.current","Fields":["themetxt.current.globalStore storeDict","themetxt.current.pos position","themetxt.current.state storeDict","themetxt.current.text []byte"]},{"Name":"var:themetxt","Fields":["themetxt.errInvalidEncoding","themetxt.errInvalidEntrypoint","themetxt.errMaxExprCnt","themetxt.errNoRule","themetxt.g"]},{"Name":"struct:themetxt.expr","Fields":["themetxt.expr.expr interface{}","themetxt.expr.pos position"]},{"Name":"struct:themetxt.grammar","Fields":["themetxt.grammar.pos position","themetxt.grammar.rules []*rule"]},{"Name":"struct:themetxt.labeledExpr","Fields":["themetxt.labeledExpr.expr interface{}","themetxt.labeledExpr.label string","themetxt.labeledExpr.pos position"]},{"Name":"struct:themetxt.litMatcher","Fields":["themetxt.litMatcher.ignoreCase bool","themetxt.litMatcher.pos position","themetxt.litMatcher.val string"]},{"Name":"struct:themetxt.notCodeExpr","Fields":["themetxt.notCodeExpr.pos position","themetxt.notCodeExpr.run func(*parser) (bool, error)"]},{"Name":"struct:themetxt.parser","Fields":["themetxt.parser.allowInvalidUTF8 bool","themetxt.parser.choiceNoMatch string","themetxt.parser.cur current","themetxt.parser.data []byte","themetxt.parser.debug bool","themetxt.parser.depth int","themetxt.parser.entrypoint string","themetxt.parser.errs *errList","themetxt.parser.filename string","themetxt.parser.maxExprCnt uint64","themetxt.parser.maxFailExpected []string","themetxt.parser.maxFailInvertExpected bool","themetxt.parser.maxFailPos position","themetxt.parser.memo map[int]map[interface{}]resultTuple","themetxt.parser.memoize bool","themetxt.parser.pt savepoint","themetxt.parser.recover bool","themetxt.parser.recoveryStack []map[string]interface{}","themetxt.parser.rstack []*rule","themetxt.parser.rules map[string]*rule","themetxt.parser.vstack []map[string]interface{}"]},{"Name":"struct:themetxt.parserError","Fields":["themetxt.parserError.Inner error","themetxt.parserError.expected []string","themetxt.parserError.pos position","themetxt.parserError.prefix string"]},{"Name":"struct:themetxt.position","Fields":["themetxt.position.col int","themetxt.position.line int","themetxt.position.offset int"]},{"Name":"struct:themetxt.recoveryExpr","Fields":["themetxt.recoveryExpr.expr interface{}","themetxt.recoveryExpr.failureLabel []string","themetxt.recoveryExpr.pos position","themetxt.recoveryExpr.recoverExpr interface{}"]},{"Name":"struct:themetxt.resultTuple","Fields":["themetxt.resultTuple.b bool","themetxt.resultTuple.end savepoint","themetxt.resultTuple.v interface{}"]},{"Name":"struct:themetxt.rule","Fields":["themetxt.rule.displayName string","themetxt.rule.expr interface{}","themetxt.rule.name string","themetxt.rule.pos position"]},{"Name":"struct:themetxt.ruleRefExpr","Fields":["themetxt.ruleRefExpr.name string","themetxt.ruleRefExpr.pos position"]},{"Name":"struct:themetxt.savepoint","Fields":["themetxt.savepoint.rn rune","themetxt.savepoint.w int"]},{"Name":"struct:themetxt.seqExpr","Fields":["themetxt.seqExpr.exprs []interface{}","themetxt.seqExpr.pos position"]},{"Name":"struct:themetxt.stateCodeExpr","Fields":["themetxt.stateCodeExpr.pos position","themetxt.stateCodeExpr.run func(*parser) error"]},{"Name":"struct:themetxt.throwExpr","Fields":["themetxt.throwExpr.label string","themetxt.throwExpr.pos position"]}]}
{"Filepath":"grub_theme/themetxt/theme.go","Functions":[{"Uniquefunname":"func (c *Component) Dump(indent int)","Funname":"Dump","Returntype":"","Args":"indent int"},{"Uniquefunname":"func (t *Theme) Dump()","Funname":"Dump","Returntype":"","Args":""},{"Uniquefunname":"func (v AbsNum) GetConvertFunc() func(val float64) float64","Funname":"GetConvertFunc","Returntype":"func(val float64) float64","Args":""},{"Uniquefunname":"func (v CombinedNum) GetConvertFunc() func(val float64) float64","Funname":"GetConvertFunc","Returntype":"func(val float64) float64","Args":""},{"Uniquefunname":"func (v RelNum) GetConvertFunc() func(val float64) float64","Funname":"GetConvertFunc","Returntype":"func(val float64) float64","Args":""},{"Uniquefunname":"func (c *Component) GetProp(name string) (interface","Funname":"GetProp","Returntype":"(interface{}, bool)","Args":"name string"},{"Uniquefunname":"func (c *Component) GetPropBool(name string) (bool, bool)","Funname":"GetPropBool","Returntype":"(bool, bool)","Args":"name string"},{"Uniquefunname":"func (c *Component) GetPropInt(name string) (int, bool)","Funname":"GetPropInt","Returntype":"(int, bool)","Args":"name string"},{"Uniquefunname":"func (c *Component) GetPropLength(name string) (Length, bool)","Funname":"GetPropLength","Returntype":"(Length, bool)","Args":"name string"},{"Uniquefunname":"func (c *Component) GetPropString(name string) (string, bool)","Funname":"GetPropString","Returntype":"(string, bool)","Args":"name string"},{"Uniquefunname":"func (t *Theme) GetPropString(name string) (string, bool)","Funname":"GetPropString","Returntype":"(string, bool)","Args":"name string"},{"Uniquefunname":"func ParseThemeFile(filename string) (*Theme, error)","Funname":"ParseThemeFile","Returntype":"(*Theme, error)","Args":"filename string"},{"Uniquefunname":"func (c *Component) SetProp(name string, value interface","Funname":"SetProp","Returntype":"","Args":"name string, value interface{}"},{"Uniquefunname":"func (t *Theme) SetProp(name string, value interface","Funname":"SetProp","Returntype":"","Args":"name string, value interface{}"},{"Uniquefunname":"func (c *Component) WriteTo(w io.Writer) (n int64, err error)","Funname":"WriteTo","Returntype":"(n int64, err error)","Args":"w io.Writer"},{"Uniquefunname":"func (t *Theme) WriteTo(w io.Writer) (n int64, err error)","Funname":"WriteTo","Returntype":"(n int64, err error)","Args":"w io.Writer"},{"Uniquefunname":"func getProp(props []*Property, name string) (interface","Funname":"getProp","Returntype":"(interface{}, bool)","Args":"props []*Property, name string"},{"Uniquefunname":"func getPropBool(props []*Property, name string) (bool, bool)","Funname":"getPropBool","Returntype":"(bool, bool)","Args":"props []*Property, name string"},{"Uniquefunname":"func getPropInt(props []*Property, name string) (int, bool)","Funname":"getPropInt","Returntype":"(int, bool)","Args":"props []*Property, name string"},{"Uniquefunname":"func getPropLength(props []*Property, name string) (Length, bool)","Funname":"getPropLength","Returntype":"(Length, bool)","Args":"props []*Property, name string"},{"Uniquefunname":"func getPropString(props []*Property, name string) (string, bool)","Funname":"getPropString","Returntype":"(string, bool)","Args":"props []*Property, name string"},{"Uniquefunname":"func propValueToString(value interface","Funname":"propValueToString","Returntype":"string","Args":"value interface{}"},{"Uniquefunname":"func (v AbsNum) GetConvertFunc() func(val float64) float64","Funname":"themetxt.AbsNum.GetConvertFunc","Returntype":"func(val float64) float64","Args":""},{"Uniquefunname":"func (v CombinedNum) GetConvertFunc() func(val float64) float64","Funname":"themetxt.CombinedNum.GetConvertFunc","Returntype":"func(val float64) float64","Args":""},{"Uniquefunname":"func (c *Component) Dump(indent int)","Funname":"themetxt.Component.Dump","Returntype":"","Args":"indent int"},{"Uniquefunname":"func (c *Component) GetProp(name string) (interface","Funname":"themetxt.Component.GetProp","Returntype":"(interface{}, bool)","Args":"name string"},{"Uniquefunname":"func (c *Component) GetPropBool(name string) (bool, bool)","Funname":"themetxt.Component.GetPropBool","Returntype":"(bool, bool)","Args":"name string"},{"Uniquefunname":"func (c *Component) GetPropInt(name string) (int, bool)","Funname":"themetxt.Component.GetPropInt","Returntype":"(int, bool)","Args":"name string"},{"Uniquefunname":"func (c *Component) GetPropLength(name string) (Length, bool)","Funname":"themetxt.Component.GetPropLength","Returntype":"(Length, bool)","Args":"name string"},{"Uniquefunname":"func (c *Component) GetPropString(name string) (string, bool)","Funname":"themetxt.Component.GetPropString","Returntype":"(string, bool)","Args":"name string"},{"Uniquefunname":"func (c *Component) SetProp(name string, value interface","Funname":"themetxt.Component.SetProp","Returntype":"","Args":"name string, value interface{}"},{"Uniquefunname":"func (c *Component) WriteTo(w io.Writer) (n int64, err error)","Funname":"themetxt.Component.WriteTo","Returntype":"(n int64, err error)","Args":"w io.Writer"},{"Uniquefunname":"func (c *Component) writeTo(w io.Writer, indent int) (n int64, err error)","Funname":"themetxt.Component.writeTo","Returntype":"(n int64, err error)","Args":"w io.Writer, indent int"},{"Uniquefunname":"func ParseThemeFile(filename string) (*Theme, error)","Funname":"themetxt.ParseThemeFile","Returntype":"(*Theme, error)","Args":"filename string"},{"Uniquefunname":"func (v RelNum) GetConvertFunc() func(val float64) float64","Funname":"themetxt.RelNum.GetConvertFunc","Returntype":"func(val float64) float64","Args":""},{"Uniquefunname":"func (t *Theme) Dump()","Funname":"themetxt.Theme.Dump","Returntype":"","Args":""},{"Uniquefunname":"func (t *Theme) GetPropString(name string) (string, bool)","Funname":"themetxt.Theme.GetPropString","Returntype":"(string, bool)","Args":"name string"},{"Uniquefunname":"func (t *Theme) SetProp(name string, value interface","Funname":"themetxt.Theme.SetProp","Returntype":"","Args":"name string, value interface{}"},{"Uniquefunname":"func (t *Theme) WriteTo(w io.Writer) (n int64, err error)","Funname":"themetxt.Theme.WriteTo","Returntype":"(n int64, err error)","Args":"w io.Writer"},{"Uniquefunname":"func getProp(props []*Property, name string) (interface","Funname":"themetxt.getProp","Returntype":"(interface{}, bool)","Args":"props []*Property, name string"},{"Uniquefunname":"func getPropBool(props []*Property, name string) (bool, bool)","Funname":"themetxt.getPropBool","Returntype":"(bool, bool)","Args":"props []*Property, name string"},{"Uniquefunname":"func getPropInt(props []*Property, name string) (int, bool)","Funname":"themetxt.getPropInt","Returntype":"(int, bool)","Args":"props []*Property, name string"},{"Uniquefunname":"func getPropLength(props []*Property, name string) (Length, bool)","Funname":"themetxt.getPropLength","Returntype":"(Length, bool)","Args":"props []*Property, name string"},{"Uniquefunname":"func getPropString(props []*Property, name string) (string, bool)","Funname":"themetxt.getPropString","Returntype":"(string, bool)","Args":"props []*Property, name string"},{"Uniquefunname":"func propValueToString(value interface","Funname":"themetxt.propValueToString","Returntype":"string","Args":"value interface{}"},{"Uniquefunname":"func (c *Component) writeTo(w io.Writer, indent int) (n int64, err error)","Funname":"writeTo","Returntype":"(n int64, err error)","Args":"w io.Writer, indent int"}],"Records":[{"Name":"struct:themetxt.CombinedNum","Fields":["themetxt.CombinedNum.Abs int","themetxt.CombinedNum.Op CombinedNumOp","themetxt.CombinedNum.Rel int"]},{"Name":"const:themetxt","Fields":["themetxt.CombinedNumAdd","themetxt.CombinedNumSub","themetxt.ComponentTypeBootMenu","themetxt.ComponentTypeCanvas","themetxt.ComponentTypeCircularProgress","themetxt.ComponentTypeHBox","themetxt.ComponentTypeImage","themetxt.ComponentTypeLabel","themetxt.ComponentTypeProgressBar","themetxt.ComponentTypeVBox"]},{"Name":"struct:themetxt.Component","Fields":["themetxt.Component.Children []*Component","themetxt.Component.Props []*Property","themetxt.Component.Type string"]},{"Name":"interface","Fields":["themetxt.Length"]},{"Name":"struct:themetxt.Property","Fields":["themetxt.Property.name string","themetxt.Property.value interface{}"]},{"Name":"struct:themetxt.Theme","Fields":["themetxt.Theme.Components []*Component","themetxt.Theme.Props []*Property"]}]}
{"Filepath":"gtk-thumbnailer/main.go","Functions":[{"Uniquefunname":"func doGenThumbnail(name, dest string, width, height int, force bool) error","Funname":"doGenThumbnail","Returntype":"error","Args":"name, dest string, width, height int, force bool"},{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func doGenThumbnail(name, dest string, width, height int, force bool) error","Funname":"main.doGenThumbnail","Returntype":"error","Args":"name, dest string, width, height int, force bool"},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""}],"Records":[{"Name":"var:main","Fields":["main.dest","main.force","main.height","main.theme","main.width"]}]}
{"Filepath":"hans2pinyin/main.go","Functions":[{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) Query(hans string) ([]string, *dbus.Error)","Funname":"Query","Returntype":"([]string, *dbus.Error)","Args":"hans string"},{"Uniquefunname":"func (m *Manager) QueryList(hansList []string) (string, *dbus.Error)","Funname":"QueryList","Returntype":"(string, *dbus.Error)","Args":"hansList []string"},{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"main.Manager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) Query(hans string) ([]string, *dbus.Error)","Funname":"main.Manager.Query","Returntype":"([]string, *dbus.Error)","Args":"hans string"},{"Uniquefunname":"func (m *Manager) QueryList(hansList []string) (string, *dbus.Error)","Funname":"main.Manager.QueryList","Returntype":"(string, *dbus.Error)","Args":"hansList []string"},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""},{"Uniquefunname":"func queryPinyin(hans string) []string","Funname":"main.queryPinyin","Returntype":"[]string","Args":"hans string"},{"Uniquefunname":"func usage()","Funname":"main.usage","Returntype":"","Args":""},{"Uniquefunname":"func queryPinyin(hans string) []string","Funname":"queryPinyin","Returntype":"[]string","Args":"hans string"},{"Uniquefunname":"func usage()","Funname":"usage","Returntype":"","Args":""}],"Records":[{"Name":"struct:main.Manager","Fields":["main.Manager.methods *struct { Query func() `in:\"hans\" out:\"pinyin\"`; QueryList func() `in:\"hansList\" out:\"json\"`; }","main.Manager.service *dbusutil.Service"]},{"Name":"const:main","Fields":["main.dbusInterface","main.dbusPath","main.dbusServiceName"]}]}
{"Filepath":"huangli/db.go","Functions":[{"Uniquefunname":"func (list HolidayList) Contain(year, month int) bool","Funname":"Contain","Returntype":"bool","Args":"year, month int"},{"Uniquefunname":"func (list FestivalList) Create(year int) error","Funname":"Create","Returntype":"error","Args":"year int"},{"Uniquefunname":"func (list HuangLiList) Create() error","Funname":"Create","Returntype":"error","Args":""},{"Uniquefunname":"func (info *Festival) DecodeHolidayList()","Funname":"DecodeHolidayList","Returntype":"","Args":""},{"Uniquefunname":"func (info *Festival) EncodeHolidayList()","Funname":"EncodeHolidayList","Returntype":"","Args":""},{"Uniquefunname":"func Finalize()","Funname":"Finalize","Returntype":"","Args":""},{"Uniquefunname":"func Init(filename string) error","Funname":"Init","Returntype":"error","Args":"filename string"},{"Uniquefunname":"func NewFestivalList(year, month int) (FestivalList, error)","Funname":"NewFestivalList","Returntype":"(FestivalList, error)","Args":"year, month int"},{"Uniquefunname":"func NewHuangLi(id int64) (*HuangLi, error)","Funname":"NewHuangLi","Returntype":"(*HuangLi, error)","Args":"id int64"},{"Uniquefunname":"func NewHuangLiList(idList []int64) (HuangLiList, error)","Funname":"NewHuangLiList","Returntype":"(HuangLiList, error)","Args":"idList []int64"},{"Uniquefunname":"func (list FestivalList) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (info *Festival) DecodeHolidayList()","Funname":"huangli.Festival.DecodeHolidayList","Returntype":"","Args":""},{"Uniquefunname":"func (info *Festival) EncodeHolidayList()","Funname":"huangli.Festival.EncodeHolidayList","Returntype":"","Args":""},{"Uniquefunname":"func (list FestivalList) Create(year int) error","Funname":"huangli.FestivalList.Create","Returntype":"error","Args":"year int"},{"Uniquefunname":"func (list FestivalList) String() string","Funname":"huangli.FestivalList.String","Returntype":"string","Args":""},{"Uniquefunname":"func Finalize()","Funname":"huangli.Finalize","Returntype":"","Args":""},{"Uniquefunname":"func (list HolidayList) Contain(year, month int) bool","Funname":"huangli.HolidayList.Contain","Returntype":"bool","Args":"year, month int"},{"Uniquefunname":"func (list HuangLiList) Create() error","Funname":"huangli.HuangLiList.Create","Returntype":"error","Args":""},{"Uniquefunname":"func Init(filename string) error","Funname":"huangli.Init","Returntype":"error","Args":"filename string"},{"Uniquefunname":"func NewFestivalList(year, month int) (FestivalList, error)","Funname":"huangli.NewFestivalList","Returntype":"(FestivalList, error)","Args":"year, month int"},{"Uniquefunname":"func NewHuangLi(id int64) (*HuangLi, error)","Funname":"huangli.NewHuangLi","Returntype":"(*HuangLi, error)","Args":"id int64"},{"Uniquefunname":"func NewHuangLiList(idList []int64) (HuangLiList, error)","Funname":"huangli.NewHuangLiList","Returntype":"(HuangLiList, error)","Args":"idList []int64"},{"Uniquefunname":"func initFestival() error","Funname":"huangli.initFestival","Returntype":"error","Args":""},{"Uniquefunname":"func txCreateFestival(tx *sql.Tx, table string, info *Festival) error","Funname":"huangli.txCreateFestival","Returntype":"error","Args":"tx *sql.Tx, table string, info *Festival"},{"Uniquefunname":"func txCreateHuangLi(tx *sql.Tx, info *HuangLi) error","Funname":"huangli.txCreateHuangLi","Returntype":"error","Args":"tx *sql.Tx, info *HuangLi"},{"Uniquefunname":"func txQueryFestival(tx *sql.Tx, table, id string) (*Festival, error)","Funname":"huangli.txQueryFestival","Returntype":"(*Festival, error)","Args":"tx *sql.Tx, table, id string"},{"Uniquefunname":"func txQueryFestivalList(tx *sql.Tx, table string, month int) (FestivalList, error)","Funname":"huangli.txQueryFestivalList","Returntype":"(FestivalList, error)","Args":"tx *sql.Tx, table string, month int"},{"Uniquefunname":"func txQueryHuangLi(tx *sql.Tx, id int64) (*HuangLi, error)","Funname":"huangli.txQueryHuangLi","Returntype":"(*HuangLi, error)","Args":"tx *sql.Tx, id int64"},{"Uniquefunname":"func initFestival() error","Funname":"initFestival","Returntype":"error","Args":""},{"Uniquefunname":"func txCreateFestival(tx *sql.Tx, table string, info *Festival) error","Funname":"txCreateFestival","Returntype":"error","Args":"tx *sql.Tx, table string, info *Festival"},{"Uniquefunname":"func txCreateHuangLi(tx *sql.Tx, info *HuangLi) error","Funname":"txCreateHuangLi","Returntype":"error","Args":"tx *sql.Tx, info *HuangLi"},{"Uniquefunname":"func txQueryFestival(tx *sql.Tx, table, id string) (*Festival, error)","Funname":"txQueryFestival","Returntype":"(*Festival, error)","Args":"tx *sql.Tx, table, id string"},{"Uniquefunname":"func txQueryFestivalList(tx *sql.Tx, table string, month int) (FestivalList, error)","Funname":"txQueryFestivalList","Returntype":"(FestivalList, error)","Args":"tx *sql.Tx, table string, month int"},{"Uniquefunname":"func txQueryHuangLi(tx *sql.Tx, id int64) (*HuangLi, error)","Funname":"txQueryHuangLi","Returntype":"(*HuangLi, error)","Args":"tx *sql.Tx, id int64"}],"Records":[{"Name":"struct:huangli.Festival","Fields":["huangli.Festival.Description string","huangli.Festival.Holidays HolidayList","huangli.Festival.ID string","huangli.Festival.Month int","huangli.Festival.Name string","huangli.Festival.Rest string","huangli.Festival.list string"]},{"Name":"struct:huangli.Holiday","Fields":["huangli.Holiday.Date string","huangli.Holiday.Status HolidayStatus"]},{"Name":"const:huangli","Fields":["huangli.HolidayStatusLeave","huangli.HolidayStatusWork"]},{"Name":"struct:huangli.HuangLi","Fields":["huangli.HuangLi.Avoid string","huangli.HuangLi.ID int64","huangli.HuangLi.Suit string"]},{"Name":"var:huangli","Fields":["huangli._db"]}]}
{"Filepath":"huangli-generator/main.go","Functions":[{"Uniquefunname":"func doTest()","Funname":"doTest","Returntype":"","Args":""},{"Uniquefunname":"func genFestivalData()","Funname":"genFestivalData","Returntype":"","Args":""},{"Uniquefunname":"func genHuangLiData(db *gorm.DB, start, end int)","Funname":"genHuangLiData","Returntype":"","Args":"db *gorm.DB, start, end int"},{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func doTest()","Funname":"main.doTest","Returntype":"","Args":""},{"Uniquefunname":"func genFestivalData()","Funname":"main.genFestivalData","Returntype":"","Args":""},{"Uniquefunname":"func genHuangLiData(db *gorm.DB, start, end int)","Funname":"main.genHuangLiData","Returntype":"","Args":"db *gorm.DB, start, end int"},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""},{"Uniquefunname":"func newBaiduFestivalByDate(year, month int) (*baiduFestival, error)","Funname":"main.newBaiduFestivalByDate","Returntype":"(*baiduFestival, error)","Args":"year, month int"},{"Uniquefunname":"func newBaiduFestivalByDate(year, month int) (*baiduFestival, error)","Funname":"newBaiduFestivalByDate","Returntype":"(*baiduFestival, error)","Args":"year, month int"}],"Records":[{"Name":"struct:main.Huangli","Fields":["main.Huangli.D int","main.Huangli.ID int","main.Huangli.Ji string","main.Huangli.M int","main.Huangli.Y int","main.Huangli.Yi string"]},{"Name":"var:main","Fields":["main.dbFile","main.end","main.festival","main.start","main.test"]}]}
{"Filepath":"huangli-generator/request.go","Functions":[{"Uniquefunname":"func (info *baiduFestival) Dump()","Funname":"Dump","Returntype":"","Args":""},{"Uniquefunname":"func (info *baiduHuangLi) Dump()","Funname":"Dump","Returntype":"","Args":""},{"Uniquefunname":"func (info *baiduFestival) ToFestival(year, month int) huangli.FestivalList","Funname":"ToFestival","Returntype":"huangli.FestivalList","Args":"year, month int"},{"Uniquefunname":"func (list baiduFestivalDayList) ToHolidayList() huangli.HolidayList","Funname":"ToHolidayList","Returntype":"huangli.HolidayList","Args":""},{"Uniquefunname":"func (info *baiduHuangLi) ToHuangLiList() huangli.HuangLiList","Funname":"ToHuangLiList","Returntype":"huangli.HuangLiList","Args":""},{"Uniquefunname":"func convertDateToID(date string) (int64, error)","Funname":"convertDateToID","Returntype":"(int64, error)","Args":"date string"},{"Uniquefunname":"func doGet(uri string) ([]byte, error)","Funname":"doGet","Returntype":"([]byte, error)","Args":"uri string"},{"Uniquefunname":"func getFestivalID(fest string, month int) (string, error)","Funname":"getFestivalID","Returntype":"(string, error)","Args":"fest string, month int"},{"Uniquefunname":"func (info *baiduFestival) Dump()","Funname":"main.baiduFestival.Dump","Returntype":"","Args":""},{"Uniquefunname":"func (info *baiduFestival) ToFestival(year, month int) huangli.FestivalList","Funname":"main.baiduFestival.ToFestival","Returntype":"huangli.FestivalList","Args":"year, month int"},{"Uniquefunname":"func (list baiduFestivalDayList) ToHolidayList() huangli.HolidayList","Funname":"main.baiduFestivalDayList.ToHolidayList","Returntype":"huangli.HolidayList","Args":""},{"Uniquefunname":"func (info *baiduHuangLi) Dump()","Funname":"main.baiduHuangLi.Dump","Returntype":"","Args":""},{"Uniquefunname":"func (info *baiduHuangLi) ToHuangLiList() huangli.HuangLiList","Funname":"main.baiduHuangLi.ToHuangLiList","Returntype":"huangli.HuangLiList","Args":""},{"Uniquefunname":"func convertDateToID(date string) (int64, error)","Funname":"main.convertDateToID","Returntype":"(int64, error)","Args":"date string"},{"Uniquefunname":"func doGet(uri string) ([]byte, error)","Funname":"main.doGet","Returntype":"([]byte, error)","Args":"uri string"},{"Uniquefunname":"func getFestivalID(fest string, month int) (string, error)","Funname":"main.getFestivalID","Returntype":"(string, error)","Args":"fest string, month int"},{"Uniquefunname":"func makeURL(year, month int) string","Funname":"main.makeURL","Returntype":"string","Args":"year, month int"},{"Uniquefunname":"func newBaiduFestival(data []byte) (*baiduFestival, error)","Funname":"main.newBaiduFestival","Returntype":"(*baiduFestival, error)","Args":"data []byte"},{"Uniquefunname":"func newBaiduHuangLi(data []byte) (*baiduHuangLi, error)","Funname":"main.newBaiduHuangLi","Returntype":"(*baiduHuangLi, error)","Args":"data []byte"},{"Uniquefunname":"func makeURL(year, month int) string","Funname":"makeURL","Returntype":"string","Args":"year, month int"},{"Uniquefunname":"func newBaiduFestival(data []byte) (*baiduFestival, error)","Funname":"newBaiduFestival","Returntype":"(*baiduFestival, error)","Args":"data []byte"},{"Uniquefunname":"func newBaiduHuangLi(data []byte) (*baiduHuangLi, error)","Funname":"newBaiduHuangLi","Returntype":"(*baiduHuangLi, error)","Args":"data []byte"}],"Records":[{"Name":"const:main","Fields":["main.apiCharset","main.apiURL","main.resourceID"]},{"Name":"struct:main.baiduFestival","Fields":["main.baiduFestival.Data []*baiduFestivalData"]},{"Name":"struct:main.baiduFestival2","Fields":["main.baiduFestival2.Data []*baiduFestivalData2"]},{"Name":"struct:main.baiduFestivalData","Fields":["main.baiduFestivalData.Holiday baiduFestivalHolidayList"]},{"Name":"struct:main.baiduFestivalData2","Fields":["main.baiduFestivalData2.Holiday baiduFestivalHoliday"]},{"Name":"struct:main.baiduFestivalDay","Fields":["main.baiduFestivalDay.Date string","main.baiduFestivalDay.Status string"]},{"Name":"struct:main.baiduFestivalHoliday","Fields":["main.baiduFestivalHoliday.Description string","main.baiduFestivalHoliday.Festival string","main.baiduFestivalHoliday.List baiduFestivalDayList","main.baiduFestivalHoliday.Name string","main.baiduFestivalHoliday.Rest string"]},{"Name":"struct:main.baiduHuangLi","Fields":["main.baiduHuangLi.Data []struct { Almanac []struct { Date string `json:\"date\"`; Avoid string `json:\"avoid\"`; Suit string `json:\"suit\"`; } `json:\"almanac\"`; }"]}]}
{"Filepath":"i18n_dependent/i18n_dependent.go","Functions":[{"Uniquefunname":"func GetByLocale(locale string) (DependentInfos, DependentInfos, error)","Funname":"GetByLocale","Returntype":"(DependentInfos, DependentInfos, error)","Args":"locale string"},{"Uniquefunname":"func GetByPackage(locale, pkg string) ([]string, []string, error)","Funname":"GetByPackage","Returntype":"([]string, []string, error)","Args":"locale, pkg string"},{"Uniquefunname":"func (infos DependentInfos) GetConflictPackages() DependentInfos","Funname":"GetConflictPackages","Returntype":"DependentInfos","Args":""},{"Uniquefunname":"func (infos DependentInfos) GetPackagesByDependent(dependent string) []string","Funname":"GetPackagesByDependent","Returntype":"[]string","Args":"dependent string"},{"Uniquefunname":"func getConflictPackages(pkgs []string) []string","Funname":"getConflictPackages","Returntype":"[]string","Args":"pkgs []string"},{"Uniquefunname":"func (infos DependentInfos) GetConflictPackages() DependentInfos","Funname":"i18n_dependent.DependentInfos.GetConflictPackages","Returntype":"DependentInfos","Args":""},{"Uniquefunname":"func (infos DependentInfos) GetPackagesByDependent(dependent string) []string","Funname":"i18n_dependent.DependentInfos.GetPackagesByDependent","Returntype":"[]string","Args":"dependent string"},{"Uniquefunname":"func GetByLocale(locale string) (DependentInfos, DependentInfos, error)","Funname":"i18n_dependent.GetByLocale","Returntype":"(DependentInfos, DependentInfos, error)","Args":"locale string"},{"Uniquefunname":"func GetByPackage(locale, pkg string) ([]string, []string, error)","Funname":"i18n_dependent.GetByPackage","Returntype":"([]string, []string, error)","Args":"locale, pkg string"},{"Uniquefunname":"func getConflictPackages(pkgs []string) []string","Funname":"i18n_dependent.getConflictPackages","Returntype":"[]string","Args":"pkgs []string"}],"Records":[{"Name":"struct:i18n_dependent.DependentInfo","Fields":["i18n_dependent.DependentInfo.Dependent string","i18n_dependent.DependentInfo.Packages []string"]},{"Name":"const:i18n_dependent","Fields":["i18n_dependent.pkgDependsFile"]}]}
{"Filepath":"i18n_dependent/parse_file.go","Functions":[{"Uniquefunname":"func (categories jsonDependentCategories) GetAllDependentInfos(locale string) DependentInfos","Funname":"GetAllDependentInfos","Returntype":"DependentInfos","Args":"locale string"},{"Uniquefunname":"func (categories jsonDependentCategories) GetDependentInfos(key, locale string) DependentInfos","Funname":"GetDependentInfos","Returntype":"DependentInfos","Args":"key, locale string"},{"Uniquefunname":"func (infos jsonDependentInfos) GetDependentInfos(locale string) DependentInfos","Funname":"GetDependentInfos","Returntype":"DependentInfos","Args":"locale string"},{"Uniquefunname":"func (categories jsonDependentCategories) GetInfos(key string) jsonDependentInfos","Funname":"GetInfos","Returntype":"jsonDependentInfos","Args":"key string"},{"Uniquefunname":"func (info *jsonDependentInfo) GetPackages(locale string) []string","Funname":"GetPackages","Returntype":"[]string","Args":"locale string"},{"Uniquefunname":"func getDependentCategories(config string) (jsonDependentCategories, error)","Funname":"getDependentCategories","Returntype":"(jsonDependentCategories, error)","Args":"config string"},{"Uniquefunname":"func getPackagesByLangInfo(locale, langCode, countryCode, variant string)[]string","Funname":"getPackagesByLangInfo","Returntype":"[]string","Args":"locale, langCode, countryCode, variant string"},{"Uniquefunname":"func getDependentCategories(config string) (jsonDependentCategories, error)","Funname":"i18n_dependent.getDependentCategories","Returntype":"(jsonDependentCategories, error)","Args":"config string"},{"Uniquefunname":"func (categories jsonDependentCategories) GetAllDependentInfos(locale string) DependentInfos","Funname":"i18n_dependent.jsonDependentCategories.GetAllDependentInfos","Returntype":"DependentInfos","Args":"locale string"},{"Uniquefunname":"func (categories jsonDependentCategories) GetDependentInfos(key, locale string) DependentInfos","Funname":"i18n_dependent.jsonDependentCategories.GetDependentInfos","Returntype":"DependentInfos","Args":"key, locale string"},{"Uniquefunname":"func (categories jsonDependentCategories) GetInfos(key string) jsonDependentInfos","Funname":"i18n_dependent.jsonDependentCategories.GetInfos","Returntype":"jsonDependentInfos","Args":"key string"},{"Uniquefunname":"func (info *jsonDependentInfo) GetPackages(locale string) []string","Funname":"i18n_dependent.jsonDependentInfo.GetPackages","Returntype":"[]string","Args":"locale string"},{"Uniquefunname":"func i18n_dependent.jsonDependentInfo.getPackagesByLangInfo(locale, langCode, countryCode, variant string)[]string","Funname":"i18n_dependent.jsonDependentInfo.getPackagesByLangInfo","Returntype":"[]string","Args":"locale, langCode, countryCode, variant string"},{"Uniquefunname":"func (infos jsonDependentInfos) GetDependentInfos(locale string) DependentInfos","Funname":"i18n_dependent.jsonDependentInfos.GetDependentInfos","Returntype":"DependentInfos","Args":"locale string"}],"Records":[{"Name":"const:i18n_dependent","Fields":["i18n_dependent.formatTypeLC","i18n_dependent.formatTypeLCCC","i18n_dependent.formatTypeLCVA","i18n_dependent.formatTypeNone"]},{"Name":"struct:i18n_dependent.jsonDependentCategory","Fields":["i18n_dependent.jsonDependentCategory.Category string","i18n_dependent.jsonDependentCategory.Infos jsonDependentInfos"]},{"Name":"struct:i18n_dependent.jsonDependentGroup","Fields":["i18n_dependent.jsonDependentGroup.Categories jsonDependentCategories"]},{"Name":"struct:i18n_dependent.jsonDependentInfo","Fields":["i18n_dependent.jsonDependentInfo.Dependent string","i18n_dependent.jsonDependentInfo.FormatType int32","i18n_dependent.jsonDependentInfo.LangCode string","i18n_dependent.jsonDependentInfo.PkgPull string"]},{"Name":"var:i18n_dependent","Fields":["i18n_dependent.regUnderLine"]}]}
{"Filepath":"i18n_dependent/sourcehansans.go","Functions":null,"Records":[{"Name":"var:i18n_dependent","Fields":["i18n_dependent.conflictPkgMap"]}]}
{"Filepath":"image-blur/main.go","Functions":[{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""}],"Records":[{"Name":"var:main","Fields":["main.sigma"]}]}
{"Filepath":"image-blur-helper/main.go","Functions":[{"Uniquefunname":"func getDestPath(src string) string","Funname":"getDestPath","Returntype":"string","Args":"src string"},{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func getDestPath(src string) string","Funname":"main.getDestPath","Returntype":"string","Args":"src string"},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""}],"Records":[{"Name":"const:main","Fields":["main.defaultOutDir"]},{"Name":"var:main","Fields":["main.force","main.lightness","main.outDir","main.radius","main.rounds","main.saturation","main.sigma","main.src"]}]}
{"Filepath":"inhibit_hint/inhibit_hint.go","Functions":[{"Uniquefunname":"func (o *Object) Export(service *dbusutil.Service) error","Funname":"Export","Returntype":"error","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (o *Object) Get(locale string, why string) (*HintInfo, *dbus.Error)","Funname":"Get","Returntype":"(*HintInfo, *dbus.Error)","Args":"locale string, why string"},{"Uniquefunname":"func (o *Object) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func New(domain string) *Object","Funname":"New","Returntype":"*Object","Args":"domain string"},{"Uniquefunname":"func (o *Object) SetIcon(icon string)","Funname":"SetIcon","Returntype":"","Args":"icon string"},{"Uniquefunname":"func (o *Object) SetIconFunc(fn GetFunc)","Funname":"SetIconFunc","Returntype":"","Args":"fn GetFunc"},{"Uniquefunname":"func (o *Object) SetName(name string)","Funname":"SetName","Returntype":"","Args":"name string"},{"Uniquefunname":"func (o *Object) SetNameFunc(fn GetFunc)","Funname":"SetNameFunc","Returntype":"","Args":"fn GetFunc"},{"Uniquefunname":"func (o *Object) StopExport(service *dbusutil.Service) error","Funname":"StopExport","Returntype":"error","Args":"service *dbusutil.Service"},{"Uniquefunname":"func get(v interface","Funname":"get","Returntype":"string","Args":"v interface{}, why string"},{"Uniquefunname":"func (o *Object) getIcon(why string) string","Funname":"getIcon","Returntype":"string","Args":"why string"},{"Uniquefunname":"func (o *Object) getName(why string) string","Funname":"getName","Returntype":"string","Args":"why string"},{"Uniquefunname":"func New(domain string) *Object","Funname":"inhibit_hint.New","Returntype":"*Object","Args":"domain string"},{"Uniquefunname":"func (o *Object) Export(service *dbusutil.Service) error","Funname":"inhibit_hint.Object.Export","Returntype":"error","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (o *Object) Get(locale string, why string) (*HintInfo, *dbus.Error)","Funname":"inhibit_hint.Object.Get","Returntype":"(*HintInfo, *dbus.Error)","Args":"locale string, why string"},{"Uniquefunname":"func (o *Object) GetInterfaceName() string","Funname":"inhibit_hint.Object.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (o *Object) SetIcon(icon string)","Funname":"inhibit_hint.Object.SetIcon","Returntype":"","Args":"icon string"},{"Uniquefunname":"func (o *Object) SetIconFunc(fn GetFunc)","Funname":"inhibit_hint.Object.SetIconFunc","Returntype":"","Args":"fn GetFunc"},{"Uniquefunname":"func (o *Object) SetName(name string)","Funname":"inhibit_hint.Object.SetName","Returntype":"","Args":"name string"},{"Uniquefunname":"func (o *Object) SetNameFunc(fn GetFunc)","Funname":"inhibit_hint.Object.SetNameFunc","Returntype":"","Args":"fn GetFunc"},{"Uniquefunname":"func (o *Object) StopExport(service *dbusutil.Service) error","Funname":"inhibit_hint.Object.StopExport","Returntype":"error","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (o *Object) getIcon(why string) string","Funname":"inhibit_hint.Object.getIcon","Returntype":"string","Args":"why string"},{"Uniquefunname":"func (o *Object) getName(why string) string","Funname":"inhibit_hint.Object.getName","Returntype":"string","Args":"why string"},{"Uniquefunname":"func get(v interface","Funname":"inhibit_hint.get","Returntype":"string","Args":"v interface{}, why string"}],"Records":[{"Name":"struct:inhibit_hint.HintInfo","Fields":["inhibit_hint.HintInfo.Icon string","inhibit_hint.HintInfo.Name string","inhibit_hint.HintInfo.Why string"]},{"Name":"struct:inhibit_hint.Object","Fields":["inhibit_hint.Object.domain string","inhibit_hint.Object.getMu sync.Mutex","inhibit_hint.Object.icon interface{}","inhibit_hint.Object.methods *struct { Get func() `in:\"locale,why\" out:\"hint\"`; }","inhibit_hint.Object.name interface{}"]},{"Name":"const:inhibit_hint","Fields":["inhibit_hint.dbusInterface","inhibit_hint.dbusPath"]},{"Name":"var:inhibit_hint","Fields":["inhibit_hint.errInvalidUTF8"]}]}
{"Filepath":"inhibit_hint/t1_test.go","Functions":[{"Uniquefunname":"func TestGetSetIcon(t *testing.T)","Funname":"TestGetSetIcon","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetSetName(t *testing.T)","Funname":"TestGetSetName","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetSetIcon(t *testing.T)","Funname":"inhibit_hint.TestGetSetIcon","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetSetName(t *testing.T)","Funname":"inhibit_hint.TestGetSetName","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"lang_info/lang_info.go","Functions":[{"Uniquefunname":"func (infos LangInfos) Get(locale string) (*LangInfo, error)","Funname":"Get","Returntype":"(*LangInfo, error)","Args":"locale string"},{"Uniquefunname":"func GetLangCodeInfo(locale string) (*LangCodeInfo, error)","Funname":"GetLangCodeInfo","Returntype":"(*LangCodeInfo, error)","Args":"locale string"},{"Uniquefunname":"func GetSupportedLangInfos() (LangInfos, error)","Funname":"GetSupportedLangInfos","Returntype":"(LangInfos, error)","Args":""},{"Uniquefunname":"func IsSupportedLocale(locale string) bool","Funname":"IsSupportedLocale","Returntype":"bool","Args":"locale string"},{"Uniquefunname":"func (info *LangInfo) ToLangCode() *LangCodeInfo","Funname":"ToLangCode","Returntype":"*LangCodeInfo","Args":""},{"Uniquefunname":"func getLangInfoByLocale(locale, config string) (*LangInfo, error)","Funname":"getLangInfoByLocale","Returntype":"(*LangInfo, error)","Args":"locale, config string"},{"Uniquefunname":"func getLangInfosFromFile(config string) (LangInfos, error)","Funname":"getLangInfosFromFile","Returntype":"(LangInfos, error)","Args":"config string"},{"Uniquefunname":"func getSupportedLocaleList(config string) ([]string, error)","Funname":"getSupportedLocaleList","Returntype":"([]string, error)","Args":"config string"},{"Uniquefunname":"func isItemInList(item string, list []string) bool","Funname":"isItemInList","Returntype":"bool","Args":"item string, list []string"},{"Uniquefunname":"func GetLangCodeInfo(locale string) (*LangCodeInfo, error)","Funname":"lang_info.GetLangCodeInfo","Returntype":"(*LangCodeInfo, error)","Args":"locale string"},{"Uniquefunname":"func GetSupportedLangInfos() (LangInfos, error)","Funname":"lang_info.GetSupportedLangInfos","Returntype":"(LangInfos, error)","Args":""},{"Uniquefunname":"func IsSupportedLocale(locale string) bool","Funname":"lang_info.IsSupportedLocale","Returntype":"bool","Args":"locale string"},{"Uniquefunname":"func (info *LangInfo) ToLangCode() *LangCodeInfo","Funname":"lang_info.LangInfo.ToLangCode","Returntype":"*LangCodeInfo","Args":""},{"Uniquefunname":"func (infos LangInfos) Get(locale string) (*LangInfo, error)","Funname":"lang_info.LangInfos.Get","Returntype":"(*LangInfo, error)","Args":"locale string"},{"Uniquefunname":"func getLangInfoByLocale(locale, config string) (*LangInfo, error)","Funname":"lang_info.getLangInfoByLocale","Returntype":"(*LangInfo, error)","Args":"locale, config string"},{"Uniquefunname":"func getLangInfosFromFile(config string) (LangInfos, error)","Funname":"lang_info.getLangInfosFromFile","Returntype":"(LangInfos, error)","Args":"config string"},{"Uniquefunname":"func getSupportedLocaleList(config string) ([]string, error)","Funname":"lang_info.getSupportedLocaleList","Returntype":"([]string, error)","Args":"config string"},{"Uniquefunname":"func isItemInList(item string, list []string) bool","Funname":"lang_info.isItemInList","Returntype":"bool","Args":"item string, list []string"}],"Records":[{"Name":"struct:lang_info.LangCodeInfo","Fields":["lang_info.LangCodeInfo.CountryCode string","lang_info.LangCodeInfo.LangCode string","lang_info.LangCodeInfo.Variant string"]},{"Name":"struct:lang_info.LangInfo","Fields":["lang_info.LangInfo.CountryCode string","lang_info.LangInfo.Description string","lang_info.LangInfo.LangCode string","lang_info.LangInfo.Locale string"]},{"Name":"const:lang_info","Fields":["lang_info.langInfoFile","lang_info.langSupportedFile"]},{"Name":"struct:lang_info.langInfoGroup","Fields":["lang_info.langInfoGroup.Infos LangInfos"]}]}
{"Filepath":"lang_info/lang_info_test.go","Functions":[{"Uniquefunname":"func TestLangInfo(t *testing.T)","Funname":"TestLangInfo","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSupportedLocale(t *testing.T)","Funname":"TestSupportedLocale","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestLangInfo(t *testing.T)","Funname":"lang_info.TestLangInfo","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSupportedLocale(t *testing.T)","Funname":"lang_info.TestSupportedLocale","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"language_support/lang_support.go","Functions":[{"Uniquefunname":"func (ls *LanguageSupport) ByLocale(locale string, includeInstalled bool) []string","Funname":"ByLocale","Returntype":"[]string","Args":"locale string, includeInstalled bool"},{"Uniquefunname":"func ByPackageAndLocale(package0 string, locale string, includeInstalled bool)(packages []string)","Funname":"ByPackageAndLocale","Returntype":"(packages []string)","Args":"package0 string, locale string, includeInstalled bool"},{"Uniquefunname":"func (ls *LanguageSupport) Destroy()","Funname":"Destroy","Returntype":"","Args":""},{"Uniquefunname":"func NewLanguageSupport() (ls *LanguageSupport, err error)","Funname":"NewLanguageSupport","Returntype":"(ls *LanguageSupport, err error)","Args":""},{"Uniquefunname":"func expendPkgPattern(pattern, locale string) (pkgs []string)","Funname":"expendPkgPattern","Returntype":"(pkgs []string)","Args":"pattern, locale string"},{"Uniquefunname":"func (ls *LanguageSupport) isPkgInstallable(name string) (bool, error)","Funname":"isPkgInstallable","Returntype":"(bool, error)","Args":"name string"},{"Uniquefunname":"func (ls *LanguageSupport) isPkgInstalled(name string) (bool, error)","Funname":"isPkgInstalled","Returntype":"(bool, error)","Args":"name string"},{"Uniquefunname":"func langCodeFromLocale(locale string) string","Funname":"langCodeFromLocale","Returntype":"string","Args":"locale string"},{"Uniquefunname":"func (ls *LanguageSupport) ByLocale(locale string, includeInstalled bool) []string","Funname":"language_support.LanguageSupport.ByLocale","Returntype":"[]string","Args":"locale string, includeInstalled bool"},{"Uniquefunname":"func language_support.LanguageSupport.ByPackageAndLocale(package0 string, locale string, includeInstalled bool)(packages []string)","Funname":"language_support.LanguageSupport.ByPackageAndLocale","Returntype":"(packages []string)","Args":"package0 string, locale string, includeInstalled bool"},{"Uniquefunname":"func (ls *LanguageSupport) Destroy()","Funname":"language_support.LanguageSupport.Destroy","Returntype":"","Args":""},{"Uniquefunname":"func (ls *LanguageSupport) isPkgInstallable(name string) (bool, error)","Funname":"language_support.LanguageSupport.isPkgInstallable","Returntype":"(bool, error)","Args":"name string"},{"Uniquefunname":"func (ls *LanguageSupport) isPkgInstalled(name string) (bool, error)","Funname":"language_support.LanguageSupport.isPkgInstalled","Returntype":"(bool, error)","Args":"name string"},{"Uniquefunname":"func NewLanguageSupport() (ls *LanguageSupport, err error)","Funname":"language_support.NewLanguageSupport","Returntype":"(ls *LanguageSupport, err error)","Args":""},{"Uniquefunname":"func expendPkgPattern(pattern, locale string) (pkgs []string)","Funname":"language_support.expendPkgPattern","Returntype":"(pkgs []string)","Args":"pattern, locale string"},{"Uniquefunname":"func langCodeFromLocale(locale string) string","Funname":"language_support.langCodeFromLocale","Returntype":"string","Args":"locale string"},{"Uniquefunname":"func language_support.parsePkgDepends(filename string)(ret map[string]map[string]map[string][]string, err error)","Funname":"language_support.parsePkgDepends","Returntype":"(ret map[string]map[string]map[string][]string, err error)","Args":"filename string"},{"Uniquefunname":"func parsePkgDepends(filename string)(ret map[string]map[string]map[string][]string, err error)","Funname":"parsePkgDepends","Returntype":"(ret map[string]map[string]map[string][]string, err error)","Args":"filename string"}],"Records":[{"Name":"struct:language_support.LanguageSupport","Fields":["language_support.LanguageSupport.langCountryMap int","language_support.LanguageSupport.pkgDepends map[string]map[string]map[string][]string"]},{"Name":"const:language_support","Fields":["language_support.defaultDependsFile"]}]}
{"Filepath":"language_support/lang_support_test.go","Functions":[{"Uniquefunname":"func TestExpendPkgPattern(t *testing.T)","Funname":"TestExpendPkgPattern","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestLangCodeFromLocale(t *testing.T)","Funname":"TestLangCodeFromLocale","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestParsePkgDepends(t *testing.T)","Funname":"TestParsePkgDepends","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestExpendPkgPattern(t *testing.T)","Funname":"language_support.TestExpendPkgPattern","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestLangCodeFromLocale(t *testing.T)","Funname":"language_support.TestLangCodeFromLocale","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestParsePkgDepends(t *testing.T)","Funname":"language_support.TestParsePkgDepends","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"locale-helper/ifc.go","Functions":[{"Uniquefunname":"func (h *Helper) GenerateLocale(sender dbus.Sender, locale string) *dbus.Error","Funname":"GenerateLocale","Returntype":"*dbus.Error","Args":"sender dbus.Sender, locale string"},{"Uniquefunname":"func (h *Helper) SetLocale(sender dbus.Sender, locale string) *dbus.Error","Funname":"SetLocale","Returntype":"*dbus.Error","Args":"sender dbus.Sender, locale string"},{"Uniquefunname":"func (h *Helper) checkAuth(sender dbus.Sender) (bool, error)","Funname":"checkAuth","Returntype":"(bool, error)","Args":"sender dbus.Sender"},{"Uniquefunname":"func (h *Helper) emitFailed(err error)","Funname":"emitFailed","Returntype":"","Args":"err error"},{"Uniquefunname":"func (h *Helper) emitRealSuccess()","Funname":"emitRealSuccess","Returntype":"","Args":""},{"Uniquefunname":"func enableLocaleInFile(locale, file string) error","Funname":"enableLocaleInFile","Returntype":"error","Args":"locale, file string"},{"Uniquefunname":"func (h *Helper) generateLocale(sender dbus.Sender, locale string) error","Funname":"generateLocale","Returntype":"error","Args":"sender dbus.Sender, locale string"},{"Uniquefunname":"func (h *Helper) GenerateLocale(sender dbus.Sender, locale string) *dbus.Error","Funname":"main.Helper.GenerateLocale","Returntype":"*dbus.Error","Args":"sender dbus.Sender, locale string"},{"Uniquefunname":"func (h *Helper) SetLocale(sender dbus.Sender, locale string) *dbus.Error","Funname":"main.Helper.SetLocale","Returntype":"*dbus.Error","Args":"sender dbus.Sender, locale string"},{"Uniquefunname":"func (h *Helper) checkAuth(sender dbus.Sender) (bool, error)","Funname":"main.Helper.checkAuth","Returntype":"(bool, error)","Args":"sender dbus.Sender"},{"Uniquefunname":"func (h *Helper) emitFailed(err error)","Funname":"main.Helper.emitFailed","Returntype":"","Args":"err error"},{"Uniquefunname":"func (h *Helper) emitRealSuccess()","Funname":"main.Helper.emitRealSuccess","Returntype":"","Args":""},{"Uniquefunname":"func (h *Helper) generateLocale(sender dbus.Sender, locale string) error","Funname":"main.Helper.generateLocale","Returntype":"error","Args":"sender dbus.Sender, locale string"},{"Uniquefunname":"func enableLocaleInFile(locale, file string) error","Funname":"main.enableLocaleInFile","Returntype":"error","Args":"locale, file string"}],"Records":[{"Name":"const:main","Fields":["main.defaultLocaleFile","main.defaultLocaleGenFile","main.polkitManageLocale"]},{"Name":"var:main","Fields":["main.errAuthFailed"]}]}
{"Filepath":"locale-helper/locale_test.go","Functions":[{"Uniquefunname":"func Test(t *testing.T)","Funname":"Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func (*testWrapper) TestLocaleFile(c *C.C)","Funname":"TestLocaleFile","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func Test(t *testing.T)","Funname":"main.Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func init()","Funname":"main.init","Returntype":"","Args":""},{"Uniquefunname":"func (*testWrapper) TestLocaleFile(c *C.C)","Funname":"main.testWrapper.TestLocaleFile","Returntype":"","Args":"c *C.C"}],"Records":null}
{"Filepath":"locale-helper/main.go","Functions":[{"Uniquefunname":"func (*Helper) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (h *Helper) canQuit() bool","Funname":"canQuit","Returntype":"bool","Args":""},{"Uniquefunname":"func (h *Helper) doGenLocale() error","Funname":"doGenLocale","Returntype":"error","Args":""},{"Uniquefunname":"func (h *Helper) doGenLocaleWithParam(locale string) error","Funname":"doGenLocaleWithParam","Returntype":"error","Args":"locale string"},{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func (*Helper) GetInterfaceName() string","Funname":"main.Helper.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (h *Helper) canQuit() bool","Funname":"main.Helper.canQuit","Returntype":"bool","Args":""},{"Uniquefunname":"func (h *Helper) doGenLocale() error","Funname":"main.Helper.doGenLocale","Returntype":"error","Args":""},{"Uniquefunname":"func (h *Helper) doGenLocaleWithParam(locale string) error","Funname":"main.Helper.doGenLocaleWithParam","Returntype":"error","Args":"locale string"},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""}],"Records":[{"Name":"struct:main.Helper","Fields":["main.Helper.methods *struct { SetLocale func() `in:\"locale\"`; GenerateLocale func() `in:\"locale\"`; }","main.Helper.mu sync.Mutex","main.Helper.running bool","main.Helper.service *dbusutil.Service","main.Helper.signals *struct { Success struct { ok bool; reason string; }; }"]},{"Name":"const:main","Fields":["main.dbusInterface","main.dbusPath","main.dbusServiceName","main.localeGenBin"]},{"Name":"var:main","Fields":["main.logger"]}]}
{"Filepath":"locale-helper/parser.go","Functions":[{"Uniquefunname":"func (finfo *localeFileInfo) DisableLocale(locale string)","Funname":"DisableLocale","Returntype":"","Args":"locale string"},{"Uniquefunname":"func (finfo *localeFileInfo) EnableLocale(locale string)","Funname":"EnableLocale","Returntype":"","Args":"locale string"},{"Uniquefunname":"func (finfo *localeFileInfo) GetEnabledLocales() LocaleLangInfos","Funname":"GetEnabledLocales","Returntype":"LocaleLangInfos","Args":""},{"Uniquefunname":"func (finfo *localeFileInfo) IsLocaleEnabled(locale string) bool","Funname":"IsLocaleEnabled","Returntype":"bool","Args":"locale string"},{"Uniquefunname":"func (infos LocaleLangInfos) IsLocaleExist(locale string) bool","Funname":"IsLocaleExist","Returntype":"bool","Args":"locale string"},{"Uniquefunname":"func (finfo *localeFileInfo) IsLocaleValid(locale string) bool","Funname":"IsLocaleValid","Returntype":"bool","Args":"locale string"},{"Uniquefunname":"func IsLocaleValid(locale string) bool","Funname":"IsLocaleValid","Returntype":"bool","Args":"locale string"},{"Uniquefunname":"func NewLocaleFileInfo(file string) (*localeFileInfo, error)","Funname":"NewLocaleFileInfo","Returntype":"(*localeFileInfo, error)","Args":"file string"},{"Uniquefunname":"func (finfo *localeFileInfo) Save(file string) error","Funname":"Save","Returntype":"error","Args":"file string"},{"Uniquefunname":"func getLineContent(line string) string","Funname":"getLineContent","Returntype":"string","Args":"line string"},{"Uniquefunname":"func isUncommented(line string) bool","Funname":"isUncommented","Returntype":"bool","Args":"line string"},{"Uniquefunname":"func IsLocaleValid(locale string) bool","Funname":"main.IsLocaleValid","Returntype":"bool","Args":"locale string"},{"Uniquefunname":"func (infos LocaleLangInfos) IsLocaleExist(locale string) bool","Funname":"main.LocaleLangInfos.IsLocaleExist","Returntype":"bool","Args":"locale string"},{"Uniquefunname":"func NewLocaleFileInfo(file string) (*localeFileInfo, error)","Funname":"main.NewLocaleFileInfo","Returntype":"(*localeFileInfo, error)","Args":"file string"},{"Uniquefunname":"func getLineContent(line string) string","Funname":"main.getLineContent","Returntype":"string","Args":"line string"},{"Uniquefunname":"func isUncommented(line string) bool","Funname":"main.isUncommented","Returntype":"bool","Args":"line string"},{"Uniquefunname":"func (finfo *localeFileInfo) DisableLocale(locale string)","Funname":"main.localeFileInfo.DisableLocale","Returntype":"","Args":"locale string"},{"Uniquefunname":"func (finfo *localeFileInfo) EnableLocale(locale string)","Funname":"main.localeFileInfo.EnableLocale","Returntype":"","Args":"locale string"},{"Uniquefunname":"func (finfo *localeFileInfo) GetEnabledLocales() LocaleLangInfos","Funname":"main.localeFileInfo.GetEnabledLocales","Returntype":"LocaleLangInfos","Args":""},{"Uniquefunname":"func (finfo *localeFileInfo) IsLocaleEnabled(locale string) bool","Funname":"main.localeFileInfo.IsLocaleEnabled","Returntype":"bool","Args":"locale string"},{"Uniquefunname":"func (finfo *localeFileInfo) IsLocaleValid(locale string) bool","Funname":"main.localeFileInfo.IsLocaleValid","Returntype":"bool","Args":"locale string"},{"Uniquefunname":"func (finfo *localeFileInfo) Save(file string) error","Funname":"main.localeFileInfo.Save","Returntype":"error","Args":"file string"},{"Uniquefunname":"func (finfo *localeFileInfo) marshal(content string)","Funname":"main.localeFileInfo.marshal","Returntype":"","Args":"content string"},{"Uniquefunname":"func (finfo *localeFileInfo) toggleLocale(locale string, enabled bool)","Funname":"main.localeFileInfo.toggleLocale","Returntype":"","Args":"locale string, enabled bool"},{"Uniquefunname":"func (finfo *localeFileInfo) unmarshal() string","Funname":"main.localeFileInfo.unmarshal","Returntype":"string","Args":""},{"Uniquefunname":"func writeContentToFile(file, content string) error","Funname":"main.writeContentToFile","Returntype":"error","Args":"file, content string"},{"Uniquefunname":"func (finfo *localeFileInfo) marshal(content string)","Funname":"marshal","Returntype":"","Args":"content string"},{"Uniquefunname":"func (finfo *localeFileInfo) toggleLocale(locale string, enabled bool)","Funname":"toggleLocale","Returntype":"","Args":"locale string, enabled bool"},{"Uniquefunname":"func (finfo *localeFileInfo) unmarshal() string","Funname":"unmarshal","Returntype":"string","Args":""},{"Uniquefunname":"func writeContentToFile(file, content string) error","Funname":"writeContentToFile","Returntype":"error","Args":"file, content string"}],"Records":[{"Name":"struct:main.LocaleLangInfo","Fields":["main.LocaleLangInfo.Enabled bool","main.LocaleLangInfo.Line string","main.LocaleLangInfo.Locale string"]},{"Name":"const:main","Fields":["main.headerMaxLine"]},{"Name":"var:main","Fields":["main.llocker"]},{"Name":"struct:main.localeFileInfo","Fields":["main.localeFileInfo.Header []string","main.localeFileInfo.Infos LocaleLangInfos"]}]}
{"Filepath":"lunar-calendar/calendar.go","Functions":[{"Uniquefunname":"func (days DayInfoList) GetIDList() (list []int64)","Funname":"GetIDList","Returntype":"(list []int64)","Args":""},{"Uniquefunname":"func getLunarMonthCalendar(year, month int, fill bool) (LunarMonthInfo, SolarMonthInfo, bool)","Funname":"getLunarMonthCalendar","Returntype":"(LunarMonthInfo, SolarMonthInfo, bool)","Args":"year, month int, fill bool"},{"Uniquefunname":"func getMonthDays(year, month, start, end int) []DayInfo","Funname":"getMonthDays","Returntype":"[]DayInfo","Args":"year, month, start, end int"},{"Uniquefunname":"func getNextMonth(year, month int) (nextYear, nextMonth int)","Funname":"getNextMonth","Returntype":"(nextYear, nextMonth int)","Args":"year, month int"},{"Uniquefunname":"func getPreMonth(year, month int) (preYear, preMonth int)","Funname":"getPreMonth","Returntype":"(preYear, preMonth int)","Args":"year, month int"},{"Uniquefunname":"func getSolarMonthCalendar(year, month int, fill bool) (SolarMonthInfo, bool)","Funname":"getSolarMonthCalendar","Returntype":"(SolarMonthInfo, bool)","Args":"year, month int, fill bool"},{"Uniquefunname":"func (days DayInfoList) GetIDList() (list []int64)","Funname":"main.DayInfoList.GetIDList","Returntype":"(list []int64)","Args":""},{"Uniquefunname":"func getLunarMonthCalendar(year, month int, fill bool) (LunarMonthInfo, SolarMonthInfo, bool)","Funname":"main.getLunarMonthCalendar","Returntype":"(LunarMonthInfo, SolarMonthInfo, bool)","Args":"year, month int, fill bool"},{"Uniquefunname":"func getMonthDays(year, month, start, end int) []DayInfo","Funname":"main.getMonthDays","Returntype":"[]DayInfo","Args":"year, month, start, end int"},{"Uniquefunname":"func getNextMonth(year, month int) (nextYear, nextMonth int)","Funname":"main.getNextMonth","Returntype":"(nextYear, nextMonth int)","Args":"year, month int"},{"Uniquefunname":"func getPreMonth(year, month int) (preYear, preMonth int)","Funname":"main.getPreMonth","Returntype":"(preYear, preMonth int)","Args":"year, month int"},{"Uniquefunname":"func getSolarMonthCalendar(year, month int, fill bool) (SolarMonthInfo, bool)","Funname":"main.getSolarMonthCalendar","Returntype":"(SolarMonthInfo, bool)","Args":"year, month int, fill bool"}],"Records":[{"Name":"struct:main.DayInfo","Fields":["main.DayInfo.Day int32","main.DayInfo.Month int32","main.DayInfo.Year int32"]},{"Name":"struct:main.LunarMonthInfo","Fields":["main.LunarMonthInfo.Datas []calendar.LunarDayInfo","main.LunarMonthInfo.Days int32","main.LunarMonthInfo.FirstDayWeek int32"]},{"Name":"struct:main.SolarMonthInfo","Fields":["main.SolarMonthInfo.Datas []DayInfo","main.SolarMonthInfo.Days int32","main.SolarMonthInfo.FirstDayWeek int32"]}]}
{"Filepath":"lunar-calendar/huangli.go","Functions":[{"Uniquefunname":"func (info *HuangLiInfo) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (info *HuangLiMonthInfo) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func checkDBVersion() bool","Funname":"checkDBVersion","Returntype":"bool","Args":""},{"Uniquefunname":"func finalizeHuangLi()","Funname":"finalizeHuangLi","Returntype":"","Args":""},{"Uniquefunname":"func getDBFile() string","Funname":"getDBFile","Returntype":"string","Args":""},{"Uniquefunname":"func initHuangLi()","Funname":"initHuangLi","Returntype":"","Args":""},{"Uniquefunname":"func (info *HuangLiInfo) String() string","Funname":"main.HuangLiInfo.String","Returntype":"string","Args":""},{"Uniquefunname":"func (info *HuangLiMonthInfo) String() string","Funname":"main.HuangLiMonthInfo.String","Returntype":"string","Args":""},{"Uniquefunname":"func checkDBVersion() bool","Funname":"main.checkDBVersion","Returntype":"bool","Args":""},{"Uniquefunname":"func finalizeHuangLi()","Funname":"main.finalizeHuangLi","Returntype":"","Args":""},{"Uniquefunname":"func getDBFile() string","Funname":"main.getDBFile","Returntype":"string","Args":""},{"Uniquefunname":"func initHuangLi()","Funname":"main.initHuangLi","Returntype":"","Args":""},{"Uniquefunname":"func newFestivalList(year, month int) (huangli.FestivalList, error)","Funname":"main.newFestivalList","Returntype":"(huangli.FestivalList, error)","Args":"year, month int"},{"Uniquefunname":"func main.newHuangLiInfoList(lunarDays []calendar.LunarDayInfo, days DayInfoList)(list HuangLiInfoList)","Funname":"main.newHuangLiInfoList","Returntype":"(list HuangLiInfoList)","Args":"lunarDays []calendar.LunarDayInfo, days DayInfoList"},{"Uniquefunname":"func newFestivalList(year, month int) (huangli.FestivalList, error)","Funname":"newFestivalList","Returntype":"(huangli.FestivalList, error)","Args":"year, month int"},{"Uniquefunname":"func newHuangLiInfoList(lunarDays []calendar.LunarDayInfo, days DayInfoList)(list HuangLiInfoList)","Funname":"newHuangLiInfoList","Returntype":"(list HuangLiInfoList)","Args":"lunarDays []calendar.LunarDayInfo, days DayInfoList"}],"Records":[{"Name":"struct:main.HuangLiInfo","Fields":["main.HuangLiInfo.Avoid string","main.HuangLiInfo.Suit string"]},{"Name":"struct:main.HuangLiMonthInfo","Fields":["main.HuangLiMonthInfo.Datas HuangLiInfoList","main.HuangLiMonthInfo.Days int32","main.HuangLiMonthInfo.FirstDayWeek int32"]},{"Name":"var:main","Fields":["main._hasHuangLi"]},{"Name":"const:main","Fields":["main.defaultHuangLiDBFile","main.defaultHuangLiVerFile"]}]}
{"Filepath":"lunar-calendar/main.go","Functions":[{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""}],"Records":[{"Name":"var:main","Fields":["main.logger"]}]}
{"Filepath":"lunar-calendar/manager.go","Functions":[{"Uniquefunname":"func (m *Manager) GetFestivalMonth(year, month int) (string, *dbus.Error)","Funname":"GetFestivalMonth","Returntype":"(string, *dbus.Error)","Args":"year, month int"},{"Uniquefunname":"func (m *Manager) GetFestivalsInRange(start, end string) ([]DayFestival, *dbus.Error)","Funname":"GetFestivalsInRange","Returntype":"([]DayFestival, *dbus.Error)","Args":"start, end string"},{"Uniquefunname":"func (m *Manager) GetHuangLiDay(year, month, day int32) (string, *dbus.Error)","Funname":"GetHuangLiDay","Returntype":"(string, *dbus.Error)","Args":"year, month, day int32"},{"Uniquefunname":"func (m *Manager) GetHuangLiMonth(year, month int32, fill bool) (string, *dbus.Error)","Funname":"GetHuangLiMonth","Returntype":"(string, *dbus.Error)","Args":"year, month int32, fill bool"},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func GetLunarInfoBySolar(year, month, day int32)(calendar.LunarDayInfo, bool, *dbus.Error)","Funname":"GetLunarInfoBySolar","Returntype":"(calendar.LunarDayInfo, bool, *dbus.Error)","Args":"year, month, day int32"},{"Uniquefunname":"func GetLunarMonthCalendar(year, month int32, fill bool)(LunarMonthInfo, bool, *dbus.Error)","Funname":"GetLunarMonthCalendar","Returntype":"(LunarMonthInfo, bool, *dbus.Error)","Args":"year, month int32, fill bool"},{"Uniquefunname":"func NewManager(service *dbusutil.Service) *Manager","Funname":"NewManager","Returntype":"*Manager","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (m *Manager) GetFestivalMonth(year, month int) (string, *dbus.Error)","Funname":"main.Manager.GetFestivalMonth","Returntype":"(string, *dbus.Error)","Args":"year, month int"},{"Uniquefunname":"func (m *Manager) GetFestivalsInRange(start, end string) ([]DayFestival, *dbus.Error)","Funname":"main.Manager.GetFestivalsInRange","Returntype":"([]DayFestival, *dbus.Error)","Args":"start, end string"},{"Uniquefunname":"func (m *Manager) GetHuangLiDay(year, month, day int32) (string, *dbus.Error)","Funname":"main.Manager.GetHuangLiDay","Returntype":"(string, *dbus.Error)","Args":"year, month, day int32"},{"Uniquefunname":"func (m *Manager) GetHuangLiMonth(year, month int32, fill bool) (string, *dbus.Error)","Funname":"main.Manager.GetHuangLiMonth","Returntype":"(string, *dbus.Error)","Args":"year, month int32, fill bool"},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"main.Manager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func main.Manager.GetLunarInfoBySolar(year, month, day int32)(calendar.LunarDayInfo, bool, *dbus.Error)","Funname":"main.Manager.GetLunarInfoBySolar","Returntype":"(calendar.LunarDayInfo, bool, *dbus.Error)","Args":"year, month, day int32"},{"Uniquefunname":"func main.Manager.GetLunarMonthCalendar(year, month int32, fill bool)(LunarMonthInfo, bool, *dbus.Error)","Funname":"main.Manager.GetLunarMonthCalendar","Returntype":"(LunarMonthInfo, bool, *dbus.Error)","Args":"year, month int32, fill bool"},{"Uniquefunname":"func NewManager(service *dbusutil.Service) *Manager","Funname":"main.NewManager","Returntype":"*Manager","Args":"service *dbusutil.Service"}],"Records":[{"Name":"struct:main.DayFestival","Fields":["main.DayFestival.Day int32","main.DayFestival.Festivals []string","main.DayFestival.Month int32","main.DayFestival.Year int32"]},{"Name":"struct:main.Manager","Fields":["main.Manager.methods *struct { GetLunarInfoBySolar func() `in:\"year,month,day\" out:\"lunarDay,ok\"`; GetLunarMonthCalendar func() `in:\"year,month,fill\" out:\"lunarMonth,ok\"`; GetHuangLiDay func() `in:\"year,month,day\" out:\"json\"`; GetHuangLiMonth func() `in:\"year,month,fill\" out:\"json\"`; GetFestivalMonth func() `in:\"year,month\" out:\"json\"`; GetFestivalsInRange func() `in:\"startDate,endDate\" out:\"result\"`; }","main.Manager.service *dbusutil.Service"]},{"Name":"const:main","Fields":["main.dbusInterface","main.dbusPath","main.dbusServiceName"]}]}
{"Filepath":"powersupply/powersupply.go","Functions":[{"Uniquefunname":"func ACOnline() (bool, bool, error)","Funname":"ACOnline","Returntype":"(bool, bool, error)","Args":""},{"Uniquefunname":"func GetDevices(client *gudev.Client) []*gudev.Device","Funname":"GetDevices","Returntype":"[]*gudev.Device","Args":"client *gudev.Client"},{"Uniquefunname":"func GetSystemBatteryInfos() ([]*battery.BatteryInfo, error)","Funname":"GetSystemBatteryInfos","Returntype":"([]*battery.BatteryInfo, error)","Args":""},{"Uniquefunname":"func IsBattery(dev *gudev.Device) bool","Funname":"IsBattery","Returntype":"bool","Args":"dev *gudev.Device"},{"Uniquefunname":"func IsMains(dev *gudev.Device) bool","Funname":"IsMains","Returntype":"bool","Args":"dev *gudev.Device"},{"Uniquefunname":"func IsSystemBattery(dev *gudev.Device) bool","Funname":"IsSystemBattery","Returntype":"bool","Args":"dev *gudev.Device"},{"Uniquefunname":"func getClient() *gudev.Client","Funname":"getClient","Returntype":"*gudev.Client","Args":""},{"Uniquefunname":"func isSystemPowerSupply(dev *gudev.Device) bool","Funname":"isSystemPowerSupply","Returntype":"bool","Args":"dev *gudev.Device"},{"Uniquefunname":"func ACOnline() (bool, bool, error)","Funname":"powersupply.ACOnline","Returntype":"(bool, bool, error)","Args":""},{"Uniquefunname":"func GetDevices(client *gudev.Client) []*gudev.Device","Funname":"powersupply.GetDevices","Returntype":"[]*gudev.Device","Args":"client *gudev.Client"},{"Uniquefunname":"func GetSystemBatteryInfos() ([]*battery.BatteryInfo, error)","Funname":"powersupply.GetSystemBatteryInfos","Returntype":"([]*battery.BatteryInfo, error)","Args":""},{"Uniquefunname":"func IsBattery(dev *gudev.Device) bool","Funname":"powersupply.IsBattery","Returntype":"bool","Args":"dev *gudev.Device"},{"Uniquefunname":"func IsMains(dev *gudev.Device) bool","Funname":"powersupply.IsMains","Returntype":"bool","Args":"dev *gudev.Device"},{"Uniquefunname":"func IsSystemBattery(dev *gudev.Device) bool","Funname":"powersupply.IsSystemBattery","Returntype":"bool","Args":"dev *gudev.Device"},{"Uniquefunname":"func getClient() *gudev.Client","Funname":"powersupply.getClient","Returntype":"*gudev.Client","Args":""},{"Uniquefunname":"func isSystemPowerSupply(dev *gudev.Device) bool","Funname":"powersupply.isSystemPowerSupply","Returntype":"bool","Args":"dev *gudev.Device"}],"Records":[{"Name":"var:powersupply","Fields":["powersupply.errClientIsNil"]},{"Name":"const:powersupply","Fields":["powersupply.propPsyOnline","powersupply.subsystemPowerSupply"]}]}
{"Filepath":"powersupply/powersupply_test.go","Functions":[{"Uniquefunname":"func TestACOnline(t *testing.T)","Funname":"TestACOnline","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetSystemBatteryInfos(t *testing.T)","Funname":"TestGetSystemBatteryInfos","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestACOnline(t *testing.T)","Funname":"powersupply.TestACOnline","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetSystemBatteryInfos(t *testing.T)","Funname":"powersupply.TestGetSystemBatteryInfos","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"powersupply/battery/battery.go","Functions":[{"Uniquefunname":"func GetBatteryInfo(bat *gudev.Device) *BatteryInfo","Funname":"GetBatteryInfo","Returntype":"*BatteryInfo","Args":"bat *gudev.Device"},{"Uniquefunname":"func GetBatteryInfo(bat *gudev.Device) *BatteryInfo","Funname":"battery.GetBatteryInfo","Returntype":"*BatteryInfo","Args":"bat *gudev.Device"},{"Uniquefunname":"func clamp(val, min, max float64) float64","Funname":"battery.clamp","Returntype":"float64","Args":"val, min, max float64"},{"Uniquefunname":"func getVoltageDesign(bat *gudev.Device) (voltage float64)","Funname":"battery.getVoltageDesign","Returntype":"(voltage float64)","Args":"bat *gudev.Device"},{"Uniquefunname":"func clamp(val, min, max float64) float64","Funname":"clamp","Returntype":"float64","Args":"val, min, max float64"},{"Uniquefunname":"func getVoltageDesign(bat *gudev.Device) (voltage float64)","Funname":"getVoltageDesign","Returntype":"(voltage float64)","Args":"bat *gudev.Device"}],"Records":[{"Name":"struct:battery.BatteryInfo","Fields":["battery.BatteryInfo.Capacity float64","battery.BatteryInfo.Energy float64","battery.BatteryInfo.EnergyFull float64","battery.BatteryInfo.EnergyFullDesign float64","battery.BatteryInfo.EnergyRate float64","battery.BatteryInfo.Manufacturer string","battery.BatteryInfo.ModelName string","battery.BatteryInfo.Name string","battery.BatteryInfo.Percentage float64","battery.BatteryInfo.SerialNumber string","battery.BatteryInfo.Status Status","battery.BatteryInfo.Technology string","battery.BatteryInfo.TimeToEmpty uint64","battery.BatteryInfo.TimeToFull uint64","battery.BatteryInfo.Voltage float64"]},{"Name":"const:battery","Fields":["battery.pCapacity","battery.pChargeAvg","battery.pChargeFull","battery.pChargeFullDesign","battery.pChargeNow","battery.pCurrentNow","battery.pEnergyAvg","battery.pEnergyFull","battery.pEnergyFullDesign","battery.pEnergyNow","battery.pManufacturer","battery.pModelName","battery.pName","battery.pPowerNow","battery.pPresent","battery.pSerialNumber","battery.pStatus","battery.pTechnology","battery.pVoltageAvg","battery.pVoltageMaxDesign","battery.pVoltageMinDesign","battery.pVoltageNow","battery.pVoltagePresent","battery.prefixPS"]}]}
{"Filepath":"powersupply/battery/battery_test.go","Functions":[{"Uniquefunname":"func Test_GetDisplayStatus(t *testing.T)","Funname":"Test_GetDisplayStatus","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_parseStatus(t *testing.T)","Funname":"Test_parseStatus","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_GetDisplayStatus(t *testing.T)","Funname":"battery.Test_GetDisplayStatus","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_parseStatus(t *testing.T)","Funname":"battery.Test_parseStatus","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"powersupply/battery/status.go","Functions":[{"Uniquefunname":"func (slice batteryStatusSlice) AllSame() bool","Funname":"AllSame","Returntype":"bool","Args":""},{"Uniquefunname":"func (slice batteryStatusSlice) AnyEqual(val Status) bool","Funname":"AnyEqual","Returntype":"bool","Args":"val Status"},{"Uniquefunname":"func GetDisplayStatus(slice []Status) Status","Funname":"GetDisplayStatus","Returntype":"Status","Args":"slice []Status"},{"Uniquefunname":"func (state Status) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func GetDisplayStatus(slice []Status) Status","Funname":"battery.GetDisplayStatus","Returntype":"Status","Args":"slice []Status"},{"Uniquefunname":"func (state Status) String() string","Funname":"battery.Status.String","Returntype":"string","Args":""},{"Uniquefunname":"func (slice batteryStatusSlice) AllSame() bool","Funname":"battery.batteryStatusSlice.AllSame","Returntype":"bool","Args":""},{"Uniquefunname":"func (slice batteryStatusSlice) AnyEqual(val Status) bool","Funname":"battery.batteryStatusSlice.AnyEqual","Returntype":"bool","Args":"val Status"},{"Uniquefunname":"func parseStatus(val string) Status","Funname":"battery.parseStatus","Returntype":"Status","Args":"val string"},{"Uniquefunname":"func parseStatus(val string) Status","Funname":"parseStatus","Returntype":"Status","Args":"val string"}],"Records":[{"Name":"const:battery","Fields":["battery.StatusCharging","battery.StatusDischarging","battery.StatusFull","battery.StatusNotCharging","battery.StatusUnknown"]},{"Name":"var:battery","Fields":["battery.StatusMap"]}]}
{"Filepath":"session/session_register.go","Functions":[{"Uniquefunname":"func Register()","Funname":"Register","Returntype":"","Args":""},{"Uniquefunname":"func Register()","Funname":"session.Register","Returntype":"","Args":""}],"Records":null}
{"Filepath":"sound-theme-player/config.go","Functions":[{"Uniquefunname":"func getConfigFile(uid int) string","Funname":"getConfigFile","Returntype":"string","Args":"uid int"},{"Uniquefunname":"func loadConfig(filename string, cfg *config) error","Funname":"loadConfig","Returntype":"error","Args":"filename string, cfg *config"},{"Uniquefunname":"func loadUserConfig(uid int, cfg *config) error","Funname":"loadUserConfig","Returntype":"error","Args":"uid int, cfg *config"},{"Uniquefunname":"func getConfigFile(uid int) string","Funname":"main.getConfigFile","Returntype":"string","Args":"uid int"},{"Uniquefunname":"func loadConfig(filename string, cfg *config) error","Funname":"main.loadConfig","Returntype":"error","Args":"filename string, cfg *config"},{"Uniquefunname":"func loadUserConfig(uid int, cfg *config) error","Funname":"main.loadUserConfig","Returntype":"error","Args":"uid int, cfg *config"},{"Uniquefunname":"func saveConfig(filename string, cfg *config) error","Funname":"main.saveConfig","Returntype":"error","Args":"filename string, cfg *config"},{"Uniquefunname":"func saveUserConfig(uid int, cfg *config) error","Funname":"main.saveUserConfig","Returntype":"error","Args":"uid int, cfg *config"},{"Uniquefunname":"func saveConfig(filename string, cfg *config) error","Funname":"saveConfig","Returntype":"error","Args":"filename string, cfg *config"},{"Uniquefunname":"func saveUserConfig(uid int, cfg *config) error","Funname":"saveUserConfig","Returntype":"error","Args":"uid int, cfg *config"}],"Records":[{"Name":"struct:main.config","Fields":["main.config.Card string","main.config.DesktopLoginEnabled bool","main.config.Device string","main.config.Mute bool","main.config.Theme string"]}]}
{"Filepath":"sound-theme-player/main.go","Functions":[{"Uniquefunname":"func (m *Manager) EnableSoundDesktopLogin(sender dbus.Sender, enabled bool) *dbus.Error","Funname":"EnableSoundDesktopLogin","Returntype":"*dbus.Error","Args":"sender dbus.Sender, enabled bool"},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) Play(theme, event, device string) *dbus.Error","Funname":"Play","Returntype":"*dbus.Error","Args":"theme, event, device string"},{"Uniquefunname":"func (m *Manager) PlaySoundDesktopLogin(sender dbus.Sender) *dbus.Error","Funname":"PlaySoundDesktopLogin","Returntype":"*dbus.Error","Args":"sender dbus.Sender"},{"Uniquefunname":"func SaveAudioState(sender dbus.Sender, activePlayback map[string]dbus.Variant)*dbus.Error","Funname":"SaveAudioState","Returntype":"*dbus.Error","Args":"sender dbus.Sender, activePlayback map[string]dbus.Variant"},{"Uniquefunname":"func (m *Manager) SetSoundTheme(sender dbus.Sender, theme string) *dbus.Error","Funname":"SetSoundTheme","Returntype":"*dbus.Error","Args":"sender dbus.Sender, theme string"},{"Uniquefunname":"func (m *Manager) canQuit() bool","Funname":"canQuit","Returntype":"bool","Args":""},{"Uniquefunname":"func cleanUpConfig() error","Funname":"cleanUpConfig","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) doPlaySound(theme, event, device string)","Funname":"doPlaySound","Returntype":"","Args":"theme, event, device string"},{"Uniquefunname":"func (m *Manager) enableSoundDesktopLogin(uid int, enabled bool) error","Funname":"enableSoundDesktopLogin","Returntype":"error","Args":"uid int, enabled bool"},{"Uniquefunname":"func (m *Manager) getUserConfig(uid int) *config","Funname":"getUserConfig","Returntype":"*config","Args":"uid int"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) EnableSoundDesktopLogin(sender dbus.Sender, enabled bool) *dbus.Error","Funname":"main.Manager.EnableSoundDesktopLogin","Returntype":"*dbus.Error","Args":"sender dbus.Sender, enabled bool"},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"main.Manager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) Play(theme, event, device string) *dbus.Error","Funname":"main.Manager.Play","Returntype":"*dbus.Error","Args":"theme, event, device string"},{"Uniquefunname":"func (m *Manager) PlaySoundDesktopLogin(sender dbus.Sender) *dbus.Error","Funname":"main.Manager.PlaySoundDesktopLogin","Returntype":"*dbus.Error","Args":"sender dbus.Sender"},{"Uniquefunname":"func main.Manager.SaveAudioState(sender dbus.Sender, activePlayback map[string]dbus.Variant)*dbus.Error","Funname":"main.Manager.SaveAudioState","Returntype":"*dbus.Error","Args":"sender dbus.Sender, activePlayback map[string]dbus.Variant"},{"Uniquefunname":"func (m *Manager) SetSoundTheme(sender dbus.Sender, theme string) *dbus.Error","Funname":"main.Manager.SetSoundTheme","Returntype":"*dbus.Error","Args":"sender dbus.Sender, theme string"},{"Uniquefunname":"func (m *Manager) canQuit() bool","Funname":"main.Manager.canQuit","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Manager) doPlaySound(theme, event, device string)","Funname":"main.Manager.doPlaySound","Returntype":"","Args":"theme, event, device string"},{"Uniquefunname":"func (m *Manager) enableSoundDesktopLogin(uid int, enabled bool) error","Funname":"main.Manager.enableSoundDesktopLogin","Returntype":"error","Args":"uid int, enabled bool"},{"Uniquefunname":"func (m *Manager) getUserConfig(uid int) *config","Funname":"main.Manager.getUserConfig","Returntype":"*config","Args":"uid int"},{"Uniquefunname":"func (m *Manager) saveAudioState(uid int, activePlayback map[string]dbus.Variant) error","Funname":"main.Manager.saveAudioState","Returntype":"error","Args":"uid int, activePlayback map[string]dbus.Variant"},{"Uniquefunname":"func (m *Manager) saveUserConfig(uid int) error","Funname":"main.Manager.saveUserConfig","Returntype":"error","Args":"uid int"},{"Uniquefunname":"func (m *Manager) setSoundTheme(uid int, theme string) error","Funname":"main.Manager.setSoundTheme","Returntype":"error","Args":"uid int, theme string"},{"Uniquefunname":"func cleanUpConfig() error","Funname":"main.cleanUpConfig","Returntype":"error","Args":""},{"Uniquefunname":"func init()","Funname":"main.init","Returntype":"","Args":""},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""},{"Uniquefunname":"func newManager(service *dbusutil.Service) *Manager","Funname":"main.newManager","Returntype":"*Manager","Args":"service *dbusutil.Service"},{"Uniquefunname":"func newManager(service *dbusutil.Service) *Manager","Funname":"newManager","Returntype":"*Manager","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (m *Manager) saveAudioState(uid int, activePlayback map[string]dbus.Variant) error","Funname":"saveAudioState","Returntype":"error","Args":"uid int, activePlayback map[string]dbus.Variant"},{"Uniquefunname":"func (m *Manager) saveUserConfig(uid int) error","Funname":"saveUserConfig","Returntype":"error","Args":"uid int"},{"Uniquefunname":"func (m *Manager) setSoundTheme(uid int, theme string) error","Funname":"setSoundTheme","Returntype":"error","Args":"uid int, theme string"}],"Records":[{"Name":"struct:main.Manager","Fields":["main.Manager.configCache map[int]*config","main.Manager.methods *struct { Play func() `in:\"theme,event,device\"`; SaveAudioState func() `in:\"activePlayback\"`; SetSoundTheme func() `in:\"theme\"`; EnableSoundDesktopLogin func() `in:\"enabled\"`; }","main.Manager.mu sync.Mutex","main.Manager.player *sound_effect.Player","main.Manager.playing bool","main.Manager.service *dbusutil.Service"]},{"Name":"const:main","Fields":["main.alsaCtlBin","main.dbusInterface","main.dbusPath","main.dbusServiceName","main.defaultHomeDir"]},{"Name":"var:main","Fields":["main.homeDir","main.logger","main.optAutoQuit"]}]}
{"Filepath":"sound-theme-player/utils.go","Functions":[{"Uniquefunname":"func getAsoundStateFile(uid int) string","Funname":"getAsoundStateFile","Returntype":"string","Args":"uid int"},{"Uniquefunname":"func getLastUser() (int, error)","Funname":"getLastUser","Returntype":"(int, error)","Args":""},{"Uniquefunname":"func getLightDMAutoLoginUser() (string, error)","Funname":"getLightDMAutoLoginUser","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func getAsoundStateFile(uid int) string","Funname":"main.getAsoundStateFile","Returntype":"string","Args":"uid int"},{"Uniquefunname":"func getLastUser() (int, error)","Funname":"main.getLastUser","Returntype":"(int, error)","Args":""},{"Uniquefunname":"func getLightDMAutoLoginUser() (string, error)","Funname":"main.getLightDMAutoLoginUser","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func runALSARestore(uid int) error","Funname":"main.runALSARestore","Returntype":"error","Args":"uid int"},{"Uniquefunname":"func runAlsaCtlStore(uid int) error","Funname":"main.runAlsaCtlStore","Returntype":"error","Args":"uid int"},{"Uniquefunname":"func runALSARestore(uid int) error","Funname":"runALSARestore","Returntype":"error","Args":"uid int"},{"Uniquefunname":"func runAlsaCtlStore(uid int) error","Funname":"runAlsaCtlStore","Returntype":"error","Args":"uid int"}],"Records":null}
{"Filepath":"soundutils/shutdown.go","Functions":[{"Uniquefunname":"func GetShutdownSoundConfig() (*ShutdownSoundConfig, error)","Funname":"GetShutdownSoundConfig","Returntype":"(*ShutdownSoundConfig, error)","Args":""},{"Uniquefunname":"func SetShutdownSoundConfig(v *ShutdownSoundConfig) error","Funname":"SetShutdownSoundConfig","Returntype":"error","Args":"v *ShutdownSoundConfig"},{"Uniquefunname":"func GetShutdownSoundConfig() (*ShutdownSoundConfig, error)","Funname":"soundutils.GetShutdownSoundConfig","Returntype":"(*ShutdownSoundConfig, error)","Args":""},{"Uniquefunname":"func SetShutdownSoundConfig(v *ShutdownSoundConfig) error","Funname":"soundutils.SetShutdownSoundConfig","Returntype":"error","Args":"v *ShutdownSoundConfig"}],"Records":[{"Name":"struct:soundutils.ShutdownSoundConfig","Fields":["soundutils.ShutdownSoundConfig.CanPlay bool","soundutils.ShutdownSoundConfig.Device string","soundutils.ShutdownSoundConfig.Event string","soundutils.ShutdownSoundConfig.Theme string"]},{"Name":"const:soundutils","Fields":["soundutils.shutdownSoundFile"]}]}
{"Filepath":"soundutils/soundplayer.go","Functions":[{"Uniquefunname":"func CanPlayEvent(event string) bool","Funname":"CanPlayEvent","Returntype":"bool","Args":"event string"},{"Uniquefunname":"func GetSoundTheme() string","Funname":"GetSoundTheme","Returntype":"string","Args":""},{"Uniquefunname":"func GetSystemSoundFile(event string) string","Funname":"GetSystemSoundFile","Returntype":"string","Args":"event string"},{"Uniquefunname":"func GetThemeSoundFile(theme, event string) string","Funname":"GetThemeSoundFile","Returntype":"string","Args":"theme, event string"},{"Uniquefunname":"func PlaySystemSound(event, device string) error","Funname":"PlaySystemSound","Returntype":"error","Args":"event, device string"},{"Uniquefunname":"func PlayThemeSound(theme, event, device string) error","Funname":"PlayThemeSound","Returntype":"error","Args":"theme, event, device string"},{"Uniquefunname":"func initPlayer()","Funname":"initPlayer","Returntype":"","Args":""},{"Uniquefunname":"func CanPlayEvent(event string) bool","Funname":"soundutils.CanPlayEvent","Returntype":"bool","Args":"event string"},{"Uniquefunname":"func GetSoundTheme() string","Funname":"soundutils.GetSoundTheme","Returntype":"string","Args":""},{"Uniquefunname":"func GetSystemSoundFile(event string) string","Funname":"soundutils.GetSystemSoundFile","Returntype":"string","Args":"event string"},{"Uniquefunname":"func GetThemeSoundFile(theme, event string) string","Funname":"soundutils.GetThemeSoundFile","Returntype":"string","Args":"theme, event string"},{"Uniquefunname":"func PlaySystemSound(event, device string) error","Funname":"soundutils.PlaySystemSound","Returntype":"error","Args":"event, device string"},{"Uniquefunname":"func PlayThemeSound(theme, event, device string) error","Funname":"soundutils.PlayThemeSound","Returntype":"error","Args":"theme, event, device string"},{"Uniquefunname":"func initPlayer()","Funname":"soundutils.initPlayer","Returntype":"","Args":""}],"Records":[{"Name":"const:soundutils","Fields":["soundutils.EventAudioVolumeChanged","soundutils.EventBatteryLow","soundutils.EventDesktopLogin","soundutils.EventDesktopLogout","soundutils.EventDeviceAdded","soundutils.EventDeviceRemoved","soundutils.EventIconToDesktop","soundutils.EventLogin","soundutils.EventLogout","soundutils.EventPowerPlug","soundutils.EventPowerUnplug","soundutils.EventPowerUnplugBatteryLow","soundutils.EventShutdown","soundutils.EventSuspendResume","soundutils.EventSystemShutdown","soundutils.EventVolumeChanged","soundutils.EventWakeup","soundutils.EventXDeepinAppSentToDesktop","soundutils.appearanceSchema","soundutils.defaultSoundTheme","soundutils.keyEnabled","soundutils.keyPlayer","soundutils.keySoundTheme","soundutils.soundEffectSchema"]},{"Name":"var:soundutils","Fields":["soundutils.UseCache","soundutils.player","soundutils.playerOnce"]}]}
{"Filepath":"theme_thumb/thumb.go","Functions":[{"Uniquefunname":"func GetCursor(id, descFile string) (string, error)","Funname":"GetCursor","Returntype":"(string, error)","Args":"id, descFile string"},{"Uniquefunname":"func GetGtk(id, descFile string) (string, error)","Funname":"GetGtk","Returntype":"(string, error)","Args":"id, descFile string"},{"Uniquefunname":"func GetIcon(id, descFile string) (string, error)","Funname":"GetIcon","Returntype":"(string, error)","Args":"id, descFile string"},{"Uniquefunname":"func Init(scaleFactor0 float64)","Funname":"Init","Returntype":"","Args":"scaleFactor0 float64"},{"Uniquefunname":"func checkScaleFactor() error","Funname":"checkScaleFactor","Returntype":"error","Args":""},{"Uniquefunname":"func getChangeTime(fileInfo os.FileInfo) time.Time","Funname":"getChangeTime","Returntype":"time.Time","Args":"fileInfo os.FileInfo"},{"Uniquefunname":"func getScaleDir() string","Funname":"getScaleDir","Returntype":"string","Args":""},{"Uniquefunname":"func getTypeDir(type0 string, version int) string","Funname":"getTypeDir","Returntype":"string","Args":"type0 string, version int"},{"Uniquefunname":"func prepareOutputPath(type0, id string, version int) string","Funname":"prepareOutputPath","Returntype":"string","Args":"type0, id string, version int"},{"Uniquefunname":"func removeAllTypesOldVersionDirs()","Funname":"removeAllTypesOldVersionDirs","Returntype":"","Args":""},{"Uniquefunname":"func removeOldVersionDirs(scaleDir, type0 string, version int)","Funname":"removeOldVersionDirs","Returntype":"","Args":"scaleDir, type0 string, version int"},{"Uniquefunname":"func removeUnusedDirs(pattern string, usedDir string)","Funname":"removeUnusedDirs","Returntype":"","Args":"pattern string, usedDir string"},{"Uniquefunname":"func removeUnusedScaleDirs()","Funname":"removeUnusedScaleDirs","Returntype":"","Args":""},{"Uniquefunname":"func shouldGenerateNew(descFile, out string) (bool, error)","Funname":"shouldGenerateNew","Returntype":"(bool, error)","Args":"descFile, out string"},{"Uniquefunname":"func shouldGenerateNewCursor(descFile, out string) (bool, error)","Funname":"shouldGenerateNewCursor","Returntype":"(bool, error)","Args":"descFile, out string"},{"Uniquefunname":"func GetCursor(id, descFile string) (string, error)","Funname":"theme_thumb.GetCursor","Returntype":"(string, error)","Args":"id, descFile string"},{"Uniquefunname":"func GetGtk(id, descFile string) (string, error)","Funname":"theme_thumb.GetGtk","Returntype":"(string, error)","Args":"id, descFile string"},{"Uniquefunname":"func GetIcon(id, descFile string) (string, error)","Funname":"theme_thumb.GetIcon","Returntype":"(string, error)","Args":"id, descFile string"},{"Uniquefunname":"func Init(scaleFactor0 float64)","Funname":"theme_thumb.Init","Returntype":"","Args":"scaleFactor0 float64"},{"Uniquefunname":"func checkScaleFactor() error","Funname":"theme_thumb.checkScaleFactor","Returntype":"error","Args":""},{"Uniquefunname":"func getChangeTime(fileInfo os.FileInfo) time.Time","Funname":"theme_thumb.getChangeTime","Returntype":"time.Time","Args":"fileInfo os.FileInfo"},{"Uniquefunname":"func getScaleDir() string","Funname":"theme_thumb.getScaleDir","Returntype":"string","Args":""},{"Uniquefunname":"func getTypeDir(type0 string, version int) string","Funname":"theme_thumb.getTypeDir","Returntype":"string","Args":"type0 string, version int"},{"Uniquefunname":"func prepareOutputPath(type0, id string, version int) string","Funname":"theme_thumb.prepareOutputPath","Returntype":"string","Args":"type0, id string, version int"},{"Uniquefunname":"func removeAllTypesOldVersionDirs()","Funname":"theme_thumb.removeAllTypesOldVersionDirs","Returntype":"","Args":""},{"Uniquefunname":"func removeOldVersionDirs(scaleDir, type0 string, version int)","Funname":"theme_thumb.removeOldVersionDirs","Returntype":"","Args":"scaleDir, type0 string, version int"},{"Uniquefunname":"func removeUnusedDirs(pattern string, usedDir string)","Funname":"theme_thumb.removeUnusedDirs","Returntype":"","Args":"pattern string, usedDir string"},{"Uniquefunname":"func removeUnusedScaleDirs()","Funname":"theme_thumb.removeUnusedScaleDirs","Returntype":"","Args":""},{"Uniquefunname":"func shouldGenerateNew(descFile, out string) (bool, error)","Funname":"theme_thumb.shouldGenerateNew","Returntype":"(bool, error)","Args":"descFile, out string"},{"Uniquefunname":"func shouldGenerateNewCursor(descFile, out string) (bool, error)","Funname":"theme_thumb.shouldGenerateNewCursor","Returntype":"(bool, error)","Args":"descFile, out string"}],"Records":[{"Name":"var:theme_thumb","Fields":["theme_thumb.cacheDir","theme_thumb.scaleFactor"]},{"Name":"const:theme_thumb","Fields":["theme_thumb.height","theme_thumb.width"]}]}
{"Filepath":"theme_thumb/common/common.go","Functions":[{"Uniquefunname":"func CompositeIcons(images []image.Image, width, height, iconSize, padding int) image.Image","Funname":"CompositeIcons","Returntype":"image.Image","Args":"images []image.Image, width, height, iconSize, padding int"},{"Uniquefunname":"func SavePngFile(m image.Image, filename string) error","Funname":"SavePngFile","Returntype":"error","Args":"m image.Image, filename string"},{"Uniquefunname":"func CompositeIcons(images []image.Image, width, height, iconSize, padding int) image.Image","Funname":"common.CompositeIcons","Returntype":"image.Image","Args":"images []image.Image, width, height, iconSize, padding int"},{"Uniquefunname":"func SavePngFile(m image.Image, filename string) error","Funname":"common.SavePngFile","Returntype":"error","Args":"m image.Image, filename string"}],"Records":null}
{"Filepath":"theme_thumb/cursor/cursor.go","Functions":[{"Uniquefunname":"func Gen(descFile string, width, height int, scaleFactor float64, out string) error","Funname":"Gen","Returntype":"error","Args":"descFile string, width, height int, scaleFactor float64, out string"},{"Uniquefunname":"func Gen(descFile string, width, height int, scaleFactor float64, out string) error","Funname":"cursor.Gen","Returntype":"error","Args":"descFile string, width, height int, scaleFactor float64, out string"},{"Uniquefunname":"func getCursorIcons(dir string, size int) (images []image.Image)","Funname":"cursor.getCursorIcons","Returntype":"(images []image.Image)","Args":"dir string, size int"},{"Uniquefunname":"func getCursorIcons(dir string, size int) (images []image.Image)","Funname":"getCursorIcons","Returntype":"(images []image.Image)","Args":"dir string, size int"}],"Records":[{"Name":"const:cursor","Fields":["cursor.Version","cursor.baseIconSize","cursor.basePadding"]},{"Name":"var:cursor","Fields":["cursor.presentCursors"]}]}
{"Filepath":"theme_thumb/cursor/load.go","Functions":[{"Uniquefunname":"func destroyXCursorImage(img *C.XcursorImage)","Funname":"cursor.destroyXCursorImage","Returntype":"","Args":"img *C.XcursorImage"},{"Uniquefunname":"func loadXCursor(filename string, size int) (image.Image, error)","Funname":"cursor.loadXCursor","Returntype":"(image.Image, error)","Args":"filename string, size int"},{"Uniquefunname":"func loadXCursorImage(filename string, size int) *C.XcursorImage","Funname":"cursor.loadXCursorImage","Returntype":"*C.XcursorImage","Args":"filename string, size int"},{"Uniquefunname":"func newImageFromXCurorImage(img *C.XcursorImage) image.Image","Funname":"cursor.newImageFromXCurorImage","Returntype":"image.Image","Args":"img *C.XcursorImage"},{"Uniquefunname":"func destroyXCursorImage(img *C.XcursorImage)","Funname":"destroyXCursorImage","Returntype":"","Args":"img *C.XcursorImage"},{"Uniquefunname":"func loadXCursor(filename string, size int) (image.Image, error)","Funname":"loadXCursor","Returntype":"(image.Image, error)","Args":"filename string, size int"},{"Uniquefunname":"func loadXCursorImage(filename string, size int) *C.XcursorImage","Funname":"loadXCursorImage","Returntype":"*C.XcursorImage","Args":"filename string, size int"},{"Uniquefunname":"func newImageFromXCurorImage(img *C.XcursorImage) image.Image","Funname":"newImageFromXCurorImage","Returntype":"image.Image","Args":"img *C.XcursorImage"}],"Records":null}
{"Filepath":"theme_thumb/gtk/gtk.go","Functions":[{"Uniquefunname":"func Gen(name string, width, height int, scaleFactor float64, dest string) error","Funname":"Gen","Returntype":"error","Args":"name string, width, height int, scaleFactor float64, dest string"},{"Uniquefunname":"func Gen(name string, width, height int, scaleFactor float64, dest string) error","Funname":"gtk.Gen","Returntype":"error","Args":"name string, width, height int, scaleFactor float64, dest string"}],"Records":[{"Name":"const:gtk","Fields":["gtk.Version","gtk.cmd"]}]}
{"Filepath":"theme_thumb/icon/icon.go","Functions":[{"Uniquefunname":"func ChooseIcon(theme string, iconNames []string, size int) string","Funname":"ChooseIcon","Returntype":"string","Args":"theme string, iconNames []string, size int"},{"Uniquefunname":"func Gen(theme string, width, height int, scaleFactor float64, out string) error","Funname":"Gen","Returntype":"error","Args":"theme string, width, height int, scaleFactor float64, out string"},{"Uniquefunname":"func cStrv(strv []string) []*C.char","Funname":"cStrv","Returntype":"[]*C.char","Args":"strv []string"},{"Uniquefunname":"func chooseIcon(theme string, iconNames []string, size int) string","Funname":"chooseIcon","Returntype":"string","Args":"theme string, iconNames []string, size int"},{"Uniquefunname":"func getIcons(theme string, size int) (images []image.Image)","Funname":"getIcons","Returntype":"(images []image.Image)","Args":"theme string, size int"},{"Uniquefunname":"func ChooseIcon(theme string, iconNames []string, size int) string","Funname":"icon.ChooseIcon","Returntype":"string","Args":"theme string, iconNames []string, size int"},{"Uniquefunname":"func Gen(theme string, width, height int, scaleFactor float64, out string) error","Funname":"icon.Gen","Returntype":"error","Args":"theme string, width, height int, scaleFactor float64, out string"},{"Uniquefunname":"func cStrv(strv []string) []*C.char","Funname":"icon.cStrv","Returntype":"[]*C.char","Args":"strv []string"},{"Uniquefunname":"func chooseIcon(theme string, iconNames []string, size int) string","Funname":"icon.chooseIcon","Returntype":"string","Args":"theme string, iconNames []string, size int"},{"Uniquefunname":"func getIcons(theme string, size int) (images []image.Image)","Funname":"icon.getIcons","Returntype":"(images []image.Image)","Args":"theme string, size int"},{"Uniquefunname":"func loadIcon(theme string, iconNames []string, size int) (img image.Image, err error)","Funname":"icon.loadIcon","Returntype":"(img image.Image, err error)","Args":"theme string, iconNames []string, size int"},{"Uniquefunname":"func loadOther(filename string) (image.Image, error)","Funname":"icon.loadOther","Returntype":"(image.Image, error)","Args":"filename string"},{"Uniquefunname":"func loadSvg(filename string, size int) (img image.Image, err error)","Funname":"icon.loadSvg","Returntype":"(img image.Image, err error)","Args":"filename string, size int"},{"Uniquefunname":"func loadIcon(theme string, iconNames []string, size int) (img image.Image, err error)","Funname":"loadIcon","Returntype":"(img image.Image, err error)","Args":"theme string, iconNames []string, size int"},{"Uniquefunname":"func loadOther(filename string) (image.Image, error)","Funname":"loadOther","Returntype":"(image.Image, error)","Args":"filename string"},{"Uniquefunname":"func loadSvg(filename string, size int) (img image.Image, err error)","Funname":"loadSvg","Returntype":"(img image.Image, err error)","Args":"filename string, size int"}],"Records":[{"Name":"const:icon","Fields":["icon.Version","icon.baseIconSize","icon.basePadding"]},{"Name":"var:icon","Fields":["icon.presentIcons"]}]}
{"Filepath":"themes/cursor.go","Functions":[{"Uniquefunname":"func setGtkCursor(name string)","Funname":"setGtkCursor","Returntype":"","Args":"name string"},{"Uniquefunname":"func setQtCursor(name string)","Funname":"setQtCursor","Returntype":"","Args":"name string"},{"Uniquefunname":"func setGtkCursor(name string)","Funname":"themes.setGtkCursor","Returntype":"","Args":"name string"},{"Uniquefunname":"func setQtCursor(name string)","Funname":"themes.setQtCursor","Returntype":"","Args":"name string"}],"Records":null}
{"Filepath":"themes/gtk2.go","Functions":[{"Uniquefunname":"func (infos gtk2ConfInfos) Add(key, value string) gtk2ConfInfos","Funname":"Add","Returntype":"gtk2ConfInfos","Args":"key, value string"},{"Uniquefunname":"func (infos gtk2ConfInfos) Get(key string) *gtk2ConfInfo","Funname":"Get","Returntype":"*gtk2ConfInfo","Args":"key string"},{"Uniquefunname":"func gtk2FileReader(file string) gtk2ConfInfos","Funname":"gtk2FileReader","Returntype":"gtk2ConfInfos","Args":"file string"},{"Uniquefunname":"func gtk2FileWriter(infos gtk2ConfInfos, file string) error","Funname":"gtk2FileWriter","Returntype":"error","Args":"infos gtk2ConfInfos, file string"},{"Uniquefunname":"func setGtk2Cursor(name string) error","Funname":"setGtk2Cursor","Returntype":"error","Args":"name string"},{"Uniquefunname":"func setGtk2Icon(name string) error","Funname":"setGtk2Icon","Returntype":"error","Args":"name string"},{"Uniquefunname":"func setGtk2Prop(key, value, file string) error","Funname":"setGtk2Prop","Returntype":"error","Args":"key, value, file string"},{"Uniquefunname":"func setGtk2Theme(name string) error","Funname":"setGtk2Theme","Returntype":"error","Args":"name string"},{"Uniquefunname":"func (infos gtk2ConfInfos) Add(key, value string) gtk2ConfInfos","Funname":"themes.gtk2ConfInfos.Add","Returntype":"gtk2ConfInfos","Args":"key, value string"},{"Uniquefunname":"func (infos gtk2ConfInfos) Get(key string) *gtk2ConfInfo","Funname":"themes.gtk2ConfInfos.Get","Returntype":"*gtk2ConfInfo","Args":"key string"},{"Uniquefunname":"func gtk2FileReader(file string) gtk2ConfInfos","Funname":"themes.gtk2FileReader","Returntype":"gtk2ConfInfos","Args":"file string"},{"Uniquefunname":"func gtk2FileWriter(infos gtk2ConfInfos, file string) error","Funname":"themes.gtk2FileWriter","Returntype":"error","Args":"infos gtk2ConfInfos, file string"},{"Uniquefunname":"func setGtk2Cursor(name string) error","Funname":"themes.setGtk2Cursor","Returntype":"error","Args":"name string"},{"Uniquefunname":"func setGtk2Icon(name string) error","Funname":"themes.setGtk2Icon","Returntype":"error","Args":"name string"},{"Uniquefunname":"func setGtk2Prop(key, value, file string) error","Funname":"themes.setGtk2Prop","Returntype":"error","Args":"key, value, file string"},{"Uniquefunname":"func setGtk2Theme(name string) error","Funname":"themes.setGtk2Theme","Returntype":"error","Args":"name string"}],"Records":[{"Name":"const:themes","Fields":["themes.gtk2ConfDelim"]},{"Name":"var:themes","Fields":["themes.gtk2ConfFile","themes.gtk2Locker"]},{"Name":"struct:themes.gtk2ConfInfo","Fields":["themes.gtk2ConfInfo.key string","themes.gtk2ConfInfo.value string"]}]}
{"Filepath":"themes/gtk2_test.go","Functions":[{"Uniquefunname":"func TestGtk2Infos(t *testing.T)","Funname":"TestGtk2Infos","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGtk2Infos(t *testing.T)","Funname":"themes.TestGtk2Infos","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"themes/gtk3.go","Functions":[{"Uniquefunname":"func doSetGtk3Prop(key, value, file string, kfile *glib.KeyFile) error","Funname":"doSetGtk3Prop","Returntype":"error","Args":"key, value, file string, kfile *glib.KeyFile"},{"Uniquefunname":"func isGtk3PropEqual(key, value string, kfile *glib.KeyFile) bool","Funname":"isGtk3PropEqual","Returntype":"bool","Args":"key, value string, kfile *glib.KeyFile"},{"Uniquefunname":"func setGtk3Cursor(name string) error","Funname":"setGtk3Cursor","Returntype":"error","Args":"name string"},{"Uniquefunname":"func setGtk3Icon(name string) error","Funname":"setGtk3Icon","Returntype":"error","Args":"name string"},{"Uniquefunname":"func setGtk3Prop(key, value, file string) error","Funname":"setGtk3Prop","Returntype":"error","Args":"key, value, file string"},{"Uniquefunname":"func setGtk3Theme(name string) error","Funname":"setGtk3Theme","Returntype":"error","Args":"name string"},{"Uniquefunname":"func doSetGtk3Prop(key, value, file string, kfile *glib.KeyFile) error","Funname":"themes.doSetGtk3Prop","Returntype":"error","Args":"key, value, file string, kfile *glib.KeyFile"},{"Uniquefunname":"func isGtk3PropEqual(key, value string, kfile *glib.KeyFile) bool","Funname":"themes.isGtk3PropEqual","Returntype":"bool","Args":"key, value string, kfile *glib.KeyFile"},{"Uniquefunname":"func setGtk3Cursor(name string) error","Funname":"themes.setGtk3Cursor","Returntype":"error","Args":"name string"},{"Uniquefunname":"func setGtk3Icon(name string) error","Funname":"themes.setGtk3Icon","Returntype":"error","Args":"name string"},{"Uniquefunname":"func setGtk3Prop(key, value, file string) error","Funname":"themes.setGtk3Prop","Returntype":"error","Args":"key, value, file string"},{"Uniquefunname":"func setGtk3Theme(name string) error","Funname":"themes.setGtk3Theme","Returntype":"error","Args":"name string"}],"Records":[{"Name":"var:themes","Fields":["themes.gtk3ConfFile","themes.gtk3Locker"]},{"Name":"const:themes","Fields":["themes.gtk3GroupSettings","themes.gtk3KeyCursor","themes.gtk3KeyIcon","themes.gtk3KeyTheme"]}]}
{"Filepath":"themes/gtk3_test.go","Functions":[{"Uniquefunname":"func TestGtk3Prop(t *testing.T)","Funname":"TestGtk3Prop","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGtk3Prop(t *testing.T)","Funname":"themes.TestGtk3Prop","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"themes/settings.go","Functions":[{"Uniquefunname":"func GetCursorTheme() string","Funname":"GetCursorTheme","Returntype":"string","Args":""},{"Uniquefunname":"func SetCursorTheme(name string) error","Funname":"SetCursorTheme","Returntype":"error","Args":"name string"},{"Uniquefunname":"func SetGtkTheme(name string) error","Funname":"SetGtkTheme","Returntype":"error","Args":"name string"},{"Uniquefunname":"func SetIconTheme(name string) error","Funname":"SetIconTheme","Returntype":"error","Args":"name string"},{"Uniquefunname":"func getThemePath(name, ty, key string) string","Funname":"getThemePath","Returntype":"string","Args":"name, ty, key string"},{"Uniquefunname":"func getXSettingsValue(key string) string","Funname":"getXSettingsValue","Returntype":"string","Args":"key string"},{"Uniquefunname":"func setDefaultCursor(name string) bool","Funname":"setDefaultCursor","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func setQTTheme(name string) bool","Funname":"setQTTheme","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func setQt4Theme(config string) bool","Funname":"setQt4Theme","Returntype":"bool","Args":"config string"},{"Uniquefunname":"func setWMCursor(name string)","Funname":"setWMCursor","Returntype":"","Args":"name string"},{"Uniquefunname":"func setWMTheme(name string) bool","Funname":"setWMTheme","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func setXSettingsKey(key, value string) bool","Funname":"setXSettingsKey","Returntype":"bool","Args":"key, value string"},{"Uniquefunname":"func GetCursorTheme() string","Funname":"themes.GetCursorTheme","Returntype":"string","Args":""},{"Uniquefunname":"func SetCursorTheme(name string) error","Funname":"themes.SetCursorTheme","Returntype":"error","Args":"name string"},{"Uniquefunname":"func SetGtkTheme(name string) error","Funname":"themes.SetGtkTheme","Returntype":"error","Args":"name string"},{"Uniquefunname":"func SetIconTheme(name string) error","Funname":"themes.SetIconTheme","Returntype":"error","Args":"name string"},{"Uniquefunname":"func getThemePath(name, ty, key string) string","Funname":"themes.getThemePath","Returntype":"string","Args":"name, ty, key string"},{"Uniquefunname":"func getXSettingsValue(key string) string","Funname":"themes.getXSettingsValue","Returntype":"string","Args":"key string"},{"Uniquefunname":"func setDefaultCursor(name string) bool","Funname":"themes.setDefaultCursor","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func setQTTheme(name string) bool","Funname":"themes.setQTTheme","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func setQt4Theme(config string) bool","Funname":"themes.setQt4Theme","Returntype":"bool","Args":"config string"},{"Uniquefunname":"func setWMCursor(name string)","Funname":"themes.setWMCursor","Returntype":"","Args":"name string"},{"Uniquefunname":"func setWMTheme(name string) bool","Funname":"themes.setWMTheme","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func setXSettingsKey(key, value string) bool","Funname":"themes.setXSettingsKey","Returntype":"bool","Args":"key, value string"}],"Records":[{"Name":"const:themes","Fields":["themes.interfaceSchema","themes.metacitySchema","themes.wmSchema","themes.xsKeyCursorName","themes.xsKeyIconTheme","themes.xsKeyTheme","themes.xsettingsSchema"]}]}
{"Filepath":"themes/theme.go","Functions":[{"Uniquefunname":"func IsThemeInList(theme string, list []string) bool","Funname":"IsThemeInList","Returntype":"bool","Args":"theme string, list []string"},{"Uniquefunname":"func ListCursorTheme() []string","Funname":"ListCursorTheme","Returntype":"[]string","Args":""},{"Uniquefunname":"func ListGtkTheme() []string","Funname":"ListGtkTheme","Returntype":"[]string","Args":""},{"Uniquefunname":"func ListIconTheme() []string","Funname":"ListIconTheme","Returntype":"[]string","Args":""},{"Uniquefunname":"func doListTheme(local, sys []string, scanner func(string) ([]string, error)) []string","Funname":"doListTheme","Returntype":"[]string","Args":"local, sys []string, scanner func(string) ([]string, error)"},{"Uniquefunname":"func mergeThemeList(src, target []string) []string","Funname":"mergeThemeList","Returntype":"[]string","Args":"src, target []string"},{"Uniquefunname":"func scanThemeDirs(dirs []string, scanner func(string) ([]string, error)) []string","Funname":"scanThemeDirs","Returntype":"[]string","Args":"dirs []string, scanner func(string) ([]string, error)"},{"Uniquefunname":"func IsThemeInList(theme string, list []string) bool","Funname":"themes.IsThemeInList","Returntype":"bool","Args":"theme string, list []string"},{"Uniquefunname":"func ListCursorTheme() []string","Funname":"themes.ListCursorTheme","Returntype":"[]string","Args":""},{"Uniquefunname":"func ListGtkTheme() []string","Funname":"themes.ListGtkTheme","Returntype":"[]string","Args":""},{"Uniquefunname":"func ListIconTheme() []string","Funname":"themes.ListIconTheme","Returntype":"[]string","Args":""},{"Uniquefunname":"func doListTheme(local, sys []string, scanner func(string) ([]string, error)) []string","Funname":"themes.doListTheme","Returntype":"[]string","Args":"local, sys []string, scanner func(string) ([]string, error)"},{"Uniquefunname":"func mergeThemeList(src, target []string) []string","Funname":"themes.mergeThemeList","Returntype":"[]string","Args":"src, target []string"},{"Uniquefunname":"func scanThemeDirs(dirs []string, scanner func(string) ([]string, error)) []string","Funname":"themes.scanThemeDirs","Returntype":"[]string","Args":"dirs []string, scanner func(string) ([]string, error)"}],"Records":null}
{"Filepath":"themes/theme_test.go","Functions":[{"Uniquefunname":"func TestMergeThemeList(t *testing.T)","Funname":"TestMergeThemeList","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSetQt4Theme(t *testing.T)","Funname":"TestSetQt4Theme","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestMergeThemeList(t *testing.T)","Funname":"themes.TestMergeThemeList","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSetQt4Theme(t *testing.T)","Funname":"themes.TestSetQt4Theme","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"themes/scanner/scanner.go","Functions":[{"Uniquefunname":"func IsCursorTheme(uri string) bool","Funname":"IsCursorTheme","Returntype":"bool","Args":"uri string"},{"Uniquefunname":"func IsGtkTheme(uri string) bool","Funname":"IsGtkTheme","Returntype":"bool","Args":"uri string"},{"Uniquefunname":"func IsIconTheme(uri string) bool","Funname":"IsIconTheme","Returntype":"bool","Args":"uri string"},{"Uniquefunname":"func ListCursorTheme(uri string) ([]string, error)","Funname":"ListCursorTheme","Returntype":"([]string, error)","Args":"uri string"},{"Uniquefunname":"func ListGtkTheme(uri string) ([]string, error)","Funname":"ListGtkTheme","Returntype":"([]string, error)","Args":"uri string"},{"Uniquefunname":"func ListIconTheme(uri string) ([]string, error)","Funname":"ListIconTheme","Returntype":"([]string, error)","Args":"uri string"},{"Uniquefunname":"func doListTheme(uri string, ty string, filter func(string) bool) ([]string, error)","Funname":"doListTheme","Returntype":"([]string, error)","Args":"uri string, ty string, filter func(string) bool"},{"Uniquefunname":"func isHidden(file, ty string) bool","Funname":"isHidden","Returntype":"bool","Args":"file, ty string"},{"Uniquefunname":"func listSubDir(dir string) ([]string, error)","Funname":"listSubDir","Returntype":"([]string, error)","Args":"dir string"},{"Uniquefunname":"func IsCursorTheme(uri string) bool","Funname":"scanner.IsCursorTheme","Returntype":"bool","Args":"uri string"},{"Uniquefunname":"func IsGtkTheme(uri string) bool","Funname":"scanner.IsGtkTheme","Returntype":"bool","Args":"uri string"},{"Uniquefunname":"func IsIconTheme(uri string) bool","Funname":"scanner.IsIconTheme","Returntype":"bool","Args":"uri string"},{"Uniquefunname":"func ListCursorTheme(uri string) ([]string, error)","Funname":"scanner.ListCursorTheme","Returntype":"([]string, error)","Args":"uri string"},{"Uniquefunname":"func ListGtkTheme(uri string) ([]string, error)","Funname":"scanner.ListGtkTheme","Returntype":"([]string, error)","Args":"uri string"},{"Uniquefunname":"func ListIconTheme(uri string) ([]string, error)","Funname":"scanner.ListIconTheme","Returntype":"([]string, error)","Args":"uri string"},{"Uniquefunname":"func doListTheme(uri string, ty string, filter func(string) bool) ([]string, error)","Funname":"scanner.doListTheme","Returntype":"([]string, error)","Args":"uri string, ty string, filter func(string) bool"},{"Uniquefunname":"func isHidden(file, ty string) bool","Funname":"scanner.isHidden","Returntype":"bool","Args":"file, ty string"},{"Uniquefunname":"func listSubDir(dir string) ([]string, error)","Funname":"scanner.listSubDir","Returntype":"([]string, error)","Args":"dir string"}],"Records":[{"Name":"const:scanner","Fields":["scanner.ThemeTypeCursor","scanner.ThemeTypeGtk","scanner.ThemeTypeIcon"]}]}
{"Filepath":"themes/scanner/scanner_test.go","Functions":[{"Uniquefunname":"func TestListCursorTheme(t *testing.T)","Funname":"TestListCursorTheme","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestListGtkTheme(t *testing.T)","Funname":"TestListGtkTheme","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestListIconTheme(t *testing.T)","Funname":"TestListIconTheme","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestThemeHidden(t *testing.T)","Funname":"TestThemeHidden","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestListCursorTheme(t *testing.T)","Funname":"scanner.TestListCursorTheme","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestListGtkTheme(t *testing.T)","Funname":"scanner.TestListGtkTheme","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestListIconTheme(t *testing.T)","Funname":"scanner.TestListIconTheme","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestThemeHidden(t *testing.T)","Funname":"scanner.TestThemeHidden","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"thumbnailer/main.go","Functions":[{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""}],"Records":[{"Name":"const:main","Fields":["main.SizeTypeLarge","main.SizeTypeNormal"]}]}
{"Filepath":"thumbnails/thumbnails.go","Functions":[{"Uniquefunname":"func GenThumbnail(uri string, size int) (string, error)","Funname":"GenThumbnail","Returntype":"(string, error)","Args":"uri string, size int"},{"Uniquefunname":"func GenThumbnailWithMime(uri, ty string, size int) (string, error)","Funname":"GenThumbnailWithMime","Returntype":"(string, error)","Args":"uri, ty string, size int"},{"Uniquefunname":"func correctSize(size int) int","Funname":"correctSize","Returntype":"int","Args":"size int"},{"Uniquefunname":"func GenThumbnail(uri string, size int) (string, error)","Funname":"thumbnails.GenThumbnail","Returntype":"(string, error)","Args":"uri string, size int"},{"Uniquefunname":"func GenThumbnailWithMime(uri, ty string, size int) (string, error)","Funname":"thumbnails.GenThumbnailWithMime","Returntype":"(string, error)","Args":"uri, ty string, size int"},{"Uniquefunname":"func correctSize(size int) int","Funname":"thumbnails.correctSize","Returntype":"int","Args":"size int"}],"Records":null}
{"Filepath":"thumbnails/thumbnails_test.go","Functions":[{"Uniquefunname":"func TestCorrectSize(t *testing.T)","Funname":"TestCorrectSize","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestCorrectSize(t *testing.T)","Funname":"thumbnails.TestCorrectSize","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"thumbnails/cursor/cursor.go","Functions":[{"Uniquefunname":"func GenThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"GenThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func ThumbnailForTheme(src, bg string, width, height int, force bool) (string, error)","Funname":"ThumbnailForTheme","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func GenThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"cursor.GenThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"cursor.SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func ThumbnailForTheme(src, bg string, width, height int, force bool) (string, error)","Funname":"cursor.ThumbnailForTheme","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func genCursorThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"cursor.genCursorThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func getThumbDest(src string, width, height int, theme bool) (string, error)","Funname":"cursor.getThumbDest","Returntype":"(string, error)","Args":"src string, width, height int, theme bool"},{"Uniquefunname":"func init()","Funname":"cursor.init","Returntype":"","Args":""},{"Uniquefunname":"func genCursorThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"genCursorThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func getThumbDest(src string, width, height int, theme bool) (string, error)","Funname":"getThumbDest","Returntype":"(string, error)","Args":"src string, width, height int, theme bool"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""}],"Records":[{"Name":"const:cursor","Fields":["cursor.sysThemeThumbDir"]},{"Name":"var:cursor","Fields":["cursor.themeThumbDir"]}]}
{"Filepath":"thumbnails/cursor/thumbnail.go","Functions":[{"Uniquefunname":"func cursor.doGenThumbnail(src, bg, dest string, width, height int, force, theme bool)(string, error)","Funname":"cursor.doGenThumbnail","Returntype":"(string, error)","Args":"src, bg, dest string, width, height int, force, theme bool"},{"Uniquefunname":"func getCursorIcons(dir, cacheDir string) []string","Funname":"cursor.getCursorIcons","Returntype":"[]string","Args":"dir, cacheDir string"},{"Uniquefunname":"func doGenThumbnail(src, bg, dest string, width, height int, force, theme bool)(string, error)","Funname":"doGenThumbnail","Returntype":"(string, error)","Args":"src, bg, dest string, width, height int, force, theme bool"},{"Uniquefunname":"func getCursorIcons(dir, cacheDir string) []string","Funname":"getCursorIcons","Returntype":"[]string","Args":"dir, cacheDir string"}],"Records":[{"Name":"const:cursor","Fields":["cursor.defaultHeight","cursor.defaultIconSize","cursor.defaultPadding","cursor.defaultWidth"]},{"Name":"var:cursor","Fields":["cursor.presentCursors"]}]}
{"Filepath":"thumbnails/cursor/xcur2png.go","Functions":[{"Uniquefunname":"func XCursorToPng(filename, destDir string) (string, error)","Funname":"XCursorToPng","Returntype":"(string, error)","Args":"filename, destDir string"},{"Uniquefunname":"func XCursorToPng(filename, destDir string) (string, error)","Funname":"cursor.XCursorToPng","Returntype":"(string, error)","Args":"filename, destDir string"},{"Uniquefunname":"func destroyXCursorImage(img *C.XcursorImage)","Funname":"cursor.destroyXCursorImage","Returntype":"","Args":"img *C.XcursorImage"},{"Uniquefunname":"func loadXCursorImage(filename string, size int) *C.XcursorImage","Funname":"cursor.loadXCursorImage","Returntype":"*C.XcursorImage","Args":"filename string, size int"},{"Uniquefunname":"func newImageFromXCurorImage(img *C.XcursorImage) image.Image","Funname":"cursor.newImageFromXCurorImage","Returntype":"image.Image","Args":"img *C.XcursorImage"},{"Uniquefunname":"func savePngFile(m image.Image, filename string) error","Funname":"cursor.savePngFile","Returntype":"error","Args":"m image.Image, filename string"},{"Uniquefunname":"func destroyXCursorImage(img *C.XcursorImage)","Funname":"destroyXCursorImage","Returntype":"","Args":"img *C.XcursorImage"},{"Uniquefunname":"func loadXCursorImage(filename string, size int) *C.XcursorImage","Funname":"loadXCursorImage","Returntype":"*C.XcursorImage","Args":"filename string, size int"},{"Uniquefunname":"func newImageFromXCurorImage(img *C.XcursorImage) image.Image","Funname":"newImageFromXCurorImage","Returntype":"image.Image","Args":"img *C.XcursorImage"},{"Uniquefunname":"func savePngFile(m image.Image, filename string) error","Funname":"savePngFile","Returntype":"error","Args":"m image.Image, filename string"}],"Records":null}
{"Filepath":"thumbnails/font/font.go","Functions":[{"Uniquefunname":"func GenThumbnail(src string, width, height int, force bool) (string, error)","Funname":"GenThumbnail","Returntype":"(string, error)","Args":"src string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func GenThumbnail(src string, width, height int, force bool) (string, error)","Funname":"font.GenThumbnail","Returntype":"(string, error)","Args":"src string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"font.SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func genFontThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"font.genFontThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func init()","Funname":"font.init","Returntype":"","Args":""},{"Uniquefunname":"func genFontThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"genFontThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""}],"Records":[{"Name":"const:font","Fields":["font.FontTypeOTF","font.FontTypeTTF"]}]}
{"Filepath":"thumbnails/font/wrapper.go","Functions":[{"Uniquefunname":"func doGenThumbnail(file, dest string, width, height int) (string, error)","Funname":"doGenThumbnail","Returntype":"(string, error)","Args":"file, dest string, width, height int"},{"Uniquefunname":"func doGenThumbnail(file, dest string, width, height int) (string, error)","Funname":"font.doGenThumbnail","Returntype":"(string, error)","Args":"file, dest string, width, height int"},{"Uniquefunname":"func getThumbSize(width, height int) int","Funname":"font.getThumbSize","Returntype":"int","Args":"width, height int"},{"Uniquefunname":"func getThumbSize(width, height int) int","Funname":"getThumbSize","Returntype":"int","Args":"width, height int"}],"Records":null}
{"Filepath":"thumbnails/gtk/gtk.go","Functions":[{"Uniquefunname":"func GenThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"GenThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func ThumbnailForTheme(src, bg string, width, height int, force bool) (string, error)","Funname":"ThumbnailForTheme","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func doGenThumbnail(name, bg, dest string, width, height int, force bool) (string, error)","Funname":"doGenThumbnail","Returntype":"(string, error)","Args":"name, bg, dest string, width, height int, force bool"},{"Uniquefunname":"func genGtkThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"genGtkThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func getThumbDest(src string, width, height int, theme bool) (string, error)","Funname":"getThumbDest","Returntype":"(string, error)","Args":"src string, width, height int, theme bool"},{"Uniquefunname":"func GenThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"gtk.GenThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"gtk.SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func ThumbnailForTheme(src, bg string, width, height int, force bool) (string, error)","Funname":"gtk.ThumbnailForTheme","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func doGenThumbnail(name, bg, dest string, width, height int, force bool) (string, error)","Funname":"gtk.doGenThumbnail","Returntype":"(string, error)","Args":"name, bg, dest string, width, height int, force bool"},{"Uniquefunname":"func genGtkThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"gtk.genGtkThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func getThumbDest(src string, width, height int, theme bool) (string, error)","Funname":"gtk.getThumbDest","Returntype":"(string, error)","Args":"src string, width, height int, theme bool"},{"Uniquefunname":"func init()","Funname":"gtk.init","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""}],"Records":[{"Name":"const:gtk","Fields":["gtk.cmdGtkThumbnailer","gtk.sysThemeThumbDir"]},{"Name":"var:gtk","Fields":["gtk.themeThumbDir"]}]}
{"Filepath":"thumbnails/icon/icon.go","Functions":[{"Uniquefunname":"func GenThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"GenThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func ThumbnailForTheme(src, bg string, width, height int, force bool) (string, error)","Funname":"ThumbnailForTheme","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func genIconThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"genIconThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func getThumbDest(src string, width, height int, theme bool) (string, error)","Funname":"getThumbDest","Returntype":"(string, error)","Args":"src string, width, height int, theme bool"},{"Uniquefunname":"func GenThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"icon.GenThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"icon.SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func ThumbnailForTheme(src, bg string, width, height int, force bool) (string, error)","Funname":"icon.ThumbnailForTheme","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func genIconThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"icon.genIconThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func getThumbDest(src string, width, height int, theme bool) (string, error)","Funname":"icon.getThumbDest","Returntype":"(string, error)","Args":"src string, width, height int, theme bool"},{"Uniquefunname":"func init()","Funname":"icon.init","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""}],"Records":[{"Name":"const:icon","Fields":["icon.sysThemeThumbDir"]},{"Name":"var:icon","Fields":["icon.themeThumbDir"]}]}
{"Filepath":"thumbnails/icon/thumbnail.go","Functions":[{"Uniquefunname":"func doGenThumbnail(src, bg, dest string, width, height int, force, theme bool)(string, error)","Funname":"doGenThumbnail","Returntype":"(string, error)","Args":"src, bg, dest string, width, height int, force, theme bool"},{"Uniquefunname":"func fixIconFiles(files []string) []string","Funname":"fixIconFiles","Returntype":"[]string","Args":"files []string"},{"Uniquefunname":"func getIconFiles(theme string) []string","Funname":"getIconFiles","Returntype":"[]string","Args":"theme string"},{"Uniquefunname":"func icon.doGenThumbnail(src, bg, dest string, width, height int, force, theme bool)(string, error)","Funname":"icon.doGenThumbnail","Returntype":"(string, error)","Args":"src, bg, dest string, width, height int, force, theme bool"},{"Uniquefunname":"func fixIconFiles(files []string) []string","Funname":"icon.fixIconFiles","Returntype":"[]string","Args":"files []string"},{"Uniquefunname":"func getIconFiles(theme string) []string","Funname":"icon.getIconFiles","Returntype":"[]string","Args":"theme string"}],"Records":[{"Name":"const:icon","Fields":["icon.defaultHeight","icon.defaultIconSize","icon.defaultPadding","icon.defaultWidth"]},{"Name":"var:icon","Fields":["icon.presentIcons"]}]}
{"Filepath":"thumbnails/icon/wrapper.go","Functions":[{"Uniquefunname":"func ChooseIcon(theme string, names []string) string","Funname":"ChooseIcon","Returntype":"string","Args":"theme string, names []string"},{"Uniquefunname":"func StrvInC(strv []string) []*C.char","Funname":"StrvInC","Returntype":"[]*C.char","Args":"strv []string"},{"Uniquefunname":"func ChooseIcon(theme string, names []string) string","Funname":"icon.ChooseIcon","Returntype":"string","Args":"theme string, names []string"},{"Uniquefunname":"func StrvInC(strv []string) []*C.char","Funname":"icon.StrvInC","Returntype":"[]*C.char","Args":"strv []string"}],"Records":null}
{"Filepath":"thumbnails/images/images.go","Functions":[{"Uniquefunname":"func GenThumbnail(src string, width, height int, force bool) (string, error)","Funname":"GenThumbnail","Returntype":"(string, error)","Args":"src string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func ThumbnailForTheme(src string, width, height int, force bool) (string, error)","Funname":"ThumbnailForTheme","Returntype":"(string, error)","Args":"src string, width, height int, force bool"},{"Uniquefunname":"func doGenThumbnail(src, bg, dest string, width, height int, force, theme bool)(string, error)","Funname":"doGenThumbnail","Returntype":"(string, error)","Args":"src, bg, dest string, width, height int, force, theme bool"},{"Uniquefunname":"func genImageThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"genImageThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func genSvgThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"genSvgThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func getThumbDest(src string, width, height int, theme bool) (string, error)","Funname":"getThumbDest","Returntype":"(string, error)","Args":"src string, width, height int, theme bool"},{"Uniquefunname":"func GenThumbnail(src string, width, height int, force bool) (string, error)","Funname":"images.GenThumbnail","Returntype":"(string, error)","Args":"src string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"images.SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func ThumbnailForTheme(src string, width, height int, force bool) (string, error)","Funname":"images.ThumbnailForTheme","Returntype":"(string, error)","Args":"src string, width, height int, force bool"},{"Uniquefunname":"func images.doGenThumbnail(src, bg, dest string, width, height int, force, theme bool)(string, error)","Funname":"images.doGenThumbnail","Returntype":"(string, error)","Args":"src, bg, dest string, width, height int, force, theme bool"},{"Uniquefunname":"func genImageThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"images.genImageThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func genSvgThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"images.genSvgThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func getThumbDest(src string, width, height int, theme bool) (string, error)","Funname":"images.getThumbDest","Returntype":"(string, error)","Args":"src string, width, height int, theme bool"},{"Uniquefunname":"func init()","Funname":"images.init","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""}],"Records":[{"Name":"const:images","Fields":["images.ImageTypeBmp","images.ImageTypeGif","images.ImageTypeJpeg","images.ImageTypePng","images.ImageTypeSvg","images.ImageTypeTiff","images.sysThemeThumbDir"]},{"Name":"var:images","Fields":["images.themeThumbDir"]}]}
{"Filepath":"thumbnails/images/wrapper.go","Functions":[{"Uniquefunname":"func svgToPng(src, dest string) error","Funname":"images.svgToPng","Returntype":"error","Args":"src, dest string"},{"Uniquefunname":"func svgToPng(src, dest string) error","Funname":"svgToPng","Returntype":"error","Args":"src, dest string"}],"Records":null}
{"Filepath":"thumbnails/loader/loader.go","Functions":[{"Uniquefunname":"func (m *Manager) Add(ty string, handler HandleType) error","Funname":"Add","Returntype":"error","Args":"ty string, handler HandleType"},{"Uniquefunname":"func CompositeIcons(icons []string, bg, dest string, iconSize, width, height, padding int)error","Funname":"CompositeIcons","Returntype":"error","Args":"icons []string, bg, dest string, iconSize, width, height, padding int"},{"Uniquefunname":"func (m *Manager) Delete(ty string)","Funname":"Delete","Returntype":"","Args":"ty string"},{"Uniquefunname":"func (m *Manager) Get(ty string) HandleType","Funname":"Get","Returntype":"HandleType","Args":"ty string"},{"Uniquefunname":"func GetBackground(width, height int) (string, error)","Funname":"GetBackground","Returntype":"(string, error)","Args":"width, height int"},{"Uniquefunname":"func GetHandler(ty string) (HandleType, error)","Funname":"GetHandler","Returntype":"(HandleType, error)","Args":"ty string"},{"Uniquefunname":"func GetThumbnailDest(uri string, width, height int) (string, error)","Funname":"GetThumbnailDest","Returntype":"(string, error)","Args":"uri string, width, height int"},{"Uniquefunname":"func GetTmpImage() string","Funname":"GetTmpImage","Returntype":"string","Args":""},{"Uniquefunname":"func IsStrInList(item string, items []string) bool","Funname":"IsStrInList","Returntype":"bool","Args":"item string, items []string"},{"Uniquefunname":"func Register(ty string, handler HandleType)","Funname":"Register","Returntype":"","Args":"ty string, handler HandleType"},{"Uniquefunname":"func ScaleImage(src, dest string, width, height int) error","Funname":"ScaleImage","Returntype":"error","Args":"src, dest string, width, height int"},{"Uniquefunname":"func ThumbnailImage(src, dest string, width, height int) error","Funname":"ThumbnailImage","Returntype":"error","Args":"src, dest string, width, height int"},{"Uniquefunname":"func getFileModTime(file string) string","Funname":"getFileModTime","Returntype":"string","Args":"file string"},{"Uniquefunname":"func loader.CompositeIcons(icons []string, bg, dest string, iconSize, width, height, padding int)error","Funname":"loader.CompositeIcons","Returntype":"error","Args":"icons []string, bg, dest string, iconSize, width, height, padding int"},{"Uniquefunname":"func GetBackground(width, height int) (string, error)","Funname":"loader.GetBackground","Returntype":"(string, error)","Args":"width, height int"},{"Uniquefunname":"func GetHandler(ty string) (HandleType, error)","Funname":"loader.GetHandler","Returntype":"(HandleType, error)","Args":"ty string"},{"Uniquefunname":"func GetThumbnailDest(uri string, width, height int) (string, error)","Funname":"loader.GetThumbnailDest","Returntype":"(string, error)","Args":"uri string, width, height int"},{"Uniquefunname":"func GetTmpImage() string","Funname":"loader.GetTmpImage","Returntype":"string","Args":""},{"Uniquefunname":"func IsStrInList(item string, items []string) bool","Funname":"loader.IsStrInList","Returntype":"bool","Args":"item string, items []string"},{"Uniquefunname":"func (m *Manager) Add(ty string, handler HandleType) error","Funname":"loader.Manager.Add","Returntype":"error","Args":"ty string, handler HandleType"},{"Uniquefunname":"func (m *Manager) Delete(ty string)","Funname":"loader.Manager.Delete","Returntype":"","Args":"ty string"},{"Uniquefunname":"func (m *Manager) Get(ty string) HandleType","Funname":"loader.Manager.Get","Returntype":"HandleType","Args":"ty string"},{"Uniquefunname":"func Register(ty string, handler HandleType)","Funname":"loader.Register","Returntype":"","Args":"ty string, handler HandleType"},{"Uniquefunname":"func ScaleImage(src, dest string, width, height int) error","Funname":"loader.ScaleImage","Returntype":"error","Args":"src, dest string, width, height int"},{"Uniquefunname":"func ThumbnailImage(src, dest string, width, height int) error","Funname":"loader.ThumbnailImage","Returntype":"error","Args":"src, dest string, width, height int"},{"Uniquefunname":"func getFileModTime(file string) string","Funname":"loader.getFileModTime","Returntype":"string","Args":"file string"}],"Records":[{"Name":"struct:loader.Manager","Fields":["loader.Manager.handlers map[string]HandleType","loader.Manager.locker *sync.RWMutex"]},{"Name":"const:loader","Fields":["loader.SizeFlagLarge","loader.SizeFlagNormal","loader.SizeFlagSmall","loader.thumbVersion"]},{"Name":"var:loader","Fields":["loader.getManager","loader.mInitializer"]}]}
{"Filepath":"thumbnails/pdf/pdf.go","Functions":[{"Uniquefunname":"func GenThumbnail(uri string, width, height int, force bool) (string, error)","Funname":"GenThumbnail","Returntype":"(string, error)","Args":"uri string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func genPDFThumbnail(uri, bg string, width, height int, force bool) (string, error)","Funname":"genPDFThumbnail","Returntype":"(string, error)","Args":"uri, bg string, width, height int, force bool"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func GenThumbnail(uri string, width, height int, force bool) (string, error)","Funname":"pdf.GenThumbnail","Returntype":"(string, error)","Args":"uri string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"pdf.SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func genPDFThumbnail(uri, bg string, width, height int, force bool) (string, error)","Funname":"pdf.genPDFThumbnail","Returntype":"(string, error)","Args":"uri, bg string, width, height int, force bool"},{"Uniquefunname":"func init()","Funname":"pdf.init","Returntype":"","Args":""}],"Records":[{"Name":"const:pdf","Fields":["pdf.PDFTypePDF"]}]}
{"Filepath":"thumbnails/pdf/wrapper.go","Functions":[{"Uniquefunname":"func doGenThumbnail(uri, dest string, width, height int) (string, error)","Funname":"doGenThumbnail","Returntype":"(string, error)","Args":"uri, dest string, width, height int"},{"Uniquefunname":"func doGenThumbnail(uri, dest string, width, height int) (string, error)","Funname":"pdf.doGenThumbnail","Returntype":"(string, error)","Args":"uri, dest string, width, height int"}],"Records":null}
{"Filepath":"thumbnails/text/text.go","Functions":[{"Uniquefunname":"func GenThumbnail(src string, width, height int, force bool) (string, error)","Funname":"GenThumbnail","Returntype":"(string, error)","Args":"src string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func genTextThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"genTextThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func GenThumbnail(src string, width, height int, force bool) (string, error)","Funname":"text.GenThumbnail","Returntype":"(string, error)","Args":"src string, width, height int, force bool"},{"Uniquefunname":"func SupportedTypes() []string","Funname":"text.SupportedTypes","Returntype":"[]string","Args":""},{"Uniquefunname":"func genTextThumbnail(src, bg string, width, height int, force bool) (string, error)","Funname":"text.genTextThumbnail","Returntype":"(string, error)","Args":"src, bg string, width, height int, force bool"},{"Uniquefunname":"func init()","Funname":"text.init","Returntype":"","Args":""}],"Records":[{"Name":"const:text","Fields":["text.TextTypeC","text.TextTypeCpp","text.TextTypeGo","text.TextTypeText"]}]}
{"Filepath":"thumbnails/text/wrapper.go","Functions":[{"Uniquefunname":"func doGenThumbnail(src, dest string, width, height int) (string, error)","Funname":"doGenThumbnail","Returntype":"(string, error)","Args":"src, dest string, width, height int"},{"Uniquefunname":"func freeCStrv(strv []*C.char)","Funname":"freeCStrv","Returntype":"","Args":"strv []*C.char"},{"Uniquefunname":"func getThumbInfo(width, height int) *thumbInfo","Funname":"getThumbInfo","Returntype":"*thumbInfo","Args":"width, height int"},{"Uniquefunname":"func readFile(file string, info *thumbInfo) ([]*C.char, error)","Funname":"readFile","Returntype":"([]*C.char, error)","Args":"file string, info *thumbInfo"},{"Uniquefunname":"func strvToCStrv(strv []string, bytesPerLine int) []*C.char","Funname":"strvToCStrv","Returntype":"[]*C.char","Args":"strv []string, bytesPerLine int"},{"Uniquefunname":"func doGenThumbnail(src, dest string, width, height int) (string, error)","Funname":"text.doGenThumbnail","Returntype":"(string, error)","Args":"src, dest string, width, height int"},{"Uniquefunname":"func freeCStrv(strv []*C.char)","Funname":"text.freeCStrv","Returntype":"","Args":"strv []*C.char"},{"Uniquefunname":"func getThumbInfo(width, height int) *thumbInfo","Funname":"text.getThumbInfo","Returntype":"*thumbInfo","Args":"width, height int"},{"Uniquefunname":"func readFile(file string, info *thumbInfo) ([]*C.char, error)","Funname":"text.readFile","Returntype":"([]*C.char, error)","Args":"file string, info *thumbInfo"},{"Uniquefunname":"func strvToCStrv(strv []string, bytesPerLine int) []*C.char","Funname":"text.strvToCStrv","Returntype":"[]*C.char","Args":"strv []string, bytesPerLine int"}],"Records":[{"Name":"const:text","Fields":["text.defaultDPI","text.defaultScale"]},{"Name":"struct:text.thumbInfo","Fields":["text.thumbInfo.canvasHeight int","text.thumbInfo.canvasWidth int","text.thumbInfo.fontsize int","text.thumbInfo.height int","text.thumbInfo.pixelsize int","text.thumbInfo.width int","text.thumbInfo.xborder int","text.thumbInfo.yborder int"]}]}
{"Filepath":"userenv/userenv.go","Functions":[{"Uniquefunname":"func DefaultFile() string","Funname":"DefaultFile","Returntype":"string","Args":""},{"Uniquefunname":"func Delete(key string) error","Funname":"Delete","Returntype":"error","Args":"key string"},{"Uniquefunname":"func DeleteFromFile(filename, key string) error","Funname":"DeleteFromFile","Returntype":"error","Args":"filename, key string"},{"Uniquefunname":"func Get(key string) (string, error)","Funname":"Get","Returntype":"(string, error)","Args":"key string"},{"Uniquefunname":"func GetFromFile(filename, key string) (string, error)","Funname":"GetFromFile","Returntype":"(string, error)","Args":"filename, key string"},{"Uniquefunname":"func Load() (map[string]string, error)","Funname":"Load","Returntype":"(map[string]string, error)","Args":""},{"Uniquefunname":"func LoadFromFile(filename string) (map[string]string, error)","Funname":"LoadFromFile","Returntype":"(map[string]string, error)","Args":"filename string"},{"Uniquefunname":"func Modify(fn func(map[string]string)) error","Funname":"Modify","Returntype":"error","Args":"fn func(map[string]string)"},{"Uniquefunname":"func ModifyAndSaveToFile(filename string, fn func(map[string]string)) error","Funname":"ModifyAndSaveToFile","Returntype":"error","Args":"filename string, fn func(map[string]string)"},{"Uniquefunname":"func Save(m map[string]string) error","Funname":"Save","Returntype":"error","Args":"m map[string]string"},{"Uniquefunname":"func SaveToFile(filename string, m map[string]string) error","Funname":"SaveToFile","Returntype":"error","Args":"filename string, m map[string]string"},{"Uniquefunname":"func Set(key, value string) error","Funname":"Set","Returntype":"error","Args":"key, value string"},{"Uniquefunname":"func SetAndSaveToFile(filename, key, value string) error","Funname":"SetAndSaveToFile","Returntype":"error","Args":"filename, key, value string"},{"Uniquefunname":"func bashQuote(str string) (string, error)","Funname":"bashQuote","Returntype":"(string, error)","Args":"str string"},{"Uniquefunname":"func bashUnquote(str string) (string, error)","Funname":"bashUnquote","Returntype":"(string, error)","Args":"str string"},{"Uniquefunname":"func isSpecialChar(char byte) bool","Funname":"isSpecialChar","Returntype":"bool","Args":"char byte"},{"Uniquefunname":"func DefaultFile() string","Funname":"userenv.DefaultFile","Returntype":"string","Args":""},{"Uniquefunname":"func Delete(key string) error","Funname":"userenv.Delete","Returntype":"error","Args":"key string"},{"Uniquefunname":"func DeleteFromFile(filename, key string) error","Funname":"userenv.DeleteFromFile","Returntype":"error","Args":"filename, key string"},{"Uniquefunname":"func Get(key string) (string, error)","Funname":"userenv.Get","Returntype":"(string, error)","Args":"key string"},{"Uniquefunname":"func GetFromFile(filename, key string) (string, error)","Funname":"userenv.GetFromFile","Returntype":"(string, error)","Args":"filename, key string"},{"Uniquefunname":"func Load() (map[string]string, error)","Funname":"userenv.Load","Returntype":"(map[string]string, error)","Args":""},{"Uniquefunname":"func LoadFromFile(filename string) (map[string]string, error)","Funname":"userenv.LoadFromFile","Returntype":"(map[string]string, error)","Args":"filename string"},{"Uniquefunname":"func Modify(fn func(map[string]string)) error","Funname":"userenv.Modify","Returntype":"error","Args":"fn func(map[string]string)"},{"Uniquefunname":"func ModifyAndSaveToFile(filename string, fn func(map[string]string)) error","Funname":"userenv.ModifyAndSaveToFile","Returntype":"error","Args":"filename string, fn func(map[string]string)"},{"Uniquefunname":"func Save(m map[string]string) error","Funname":"userenv.Save","Returntype":"error","Args":"m map[string]string"},{"Uniquefunname":"func SaveToFile(filename string, m map[string]string) error","Funname":"userenv.SaveToFile","Returntype":"error","Args":"filename string, m map[string]string"},{"Uniquefunname":"func Set(key, value string) error","Funname":"userenv.Set","Returntype":"error","Args":"key, value string"},{"Uniquefunname":"func SetAndSaveToFile(filename, key, value string) error","Funname":"userenv.SetAndSaveToFile","Returntype":"error","Args":"filename, key, value string"},{"Uniquefunname":"func bashQuote(str string) (string, error)","Funname":"userenv.bashQuote","Returntype":"(string, error)","Args":"str string"},{"Uniquefunname":"func bashUnquote(str string) (string, error)","Funname":"userenv.bashUnquote","Returntype":"(string, error)","Args":"str string"},{"Uniquefunname":"func isSpecialChar(char byte) bool","Funname":"userenv.isSpecialChar","Returntype":"bool","Args":"char byte"},{"Uniquefunname":"func writeTo(w io.Writer, m map[string]string) error","Funname":"userenv.writeTo","Returntype":"error","Args":"w io.Writer, m map[string]string"},{"Uniquefunname":"func writeTo(w io.Writer, m map[string]string) error","Funname":"writeTo","Returntype":"error","Args":"w io.Writer, m map[string]string"}],"Records":[{"Name":"var:userenv","Fields":["userenv.defaultFile","userenv.regLine"]}]}
{"Filepath":"userenv/userenv_test.go","Functions":[{"Uniquefunname":"func TestBashQuote(t *testing.T)","Funname":"TestBashQuote","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestBashUnquote(t *testing.T)","Funname":"TestBashUnquote","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestLoadFromFile(t *testing.T)","Funname":"TestLoadFromFile","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestBashQuote(t *testing.T)","Funname":"userenv.TestBashQuote","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestBashUnquote(t *testing.T)","Funname":"userenv.TestBashUnquote","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestLoadFromFile(t *testing.T)","Funname":"userenv.TestLoadFromFile","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"validator/consts.go","Functions":null,"Records":[{"Name":"const:main","Fields":["main.DBusInterface","main.DBusName","main.DBusPath"]}]}
{"Filepath":"validator/main.go","Functions":[{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""}],"Records":[{"Name":"var:main","Fields":["main.logger"]}]}
{"Filepath":"validator/validate_hostname.go","Functions":[{"Uniquefunname":"func (validator *Validator) ValidateHostname(hostname string) (bool, *dbus.Error)","Funname":"ValidateHostname","Returntype":"(bool, *dbus.Error)","Args":"hostname string"},{"Uniquefunname":"func (validator *Validator) ValidateHostnameTemp(hostname string) (bool, *dbus.Error)","Funname":"ValidateHostnameTemp","Returntype":"(bool, *dbus.Error)","Args":"hostname string"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (validator *Validator) ValidateHostname(hostname string) (bool, *dbus.Error)","Funname":"main.Validator.ValidateHostname","Returntype":"(bool, *dbus.Error)","Args":"hostname string"},{"Uniquefunname":"func (validator *Validator) ValidateHostnameTemp(hostname string) (bool, *dbus.Error)","Funname":"main.Validator.ValidateHostnameTemp","Returntype":"(bool, *dbus.Error)","Args":"hostname string"},{"Uniquefunname":"func init()","Funname":"main.init","Returntype":"","Args":""}],"Records":[{"Name":"var:main","Fields":["main.hostnameRegex","main.hostnameTempRegex"]}]}
{"Filepath":"validator/validate_username.go","Functions":[{"Uniquefunname":"func (validator *Validator) ValidateUsername(username string) (int, string, *dbus.Error)","Funname":"ValidateUsername","Returntype":"(int, string, *dbus.Error)","Args":"username string"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (validator *Validator) ValidateUsername(username string) (int, string, *dbus.Error)","Funname":"main.Validator.ValidateUsername","Returntype":"(int, string, *dbus.Error)","Args":"username string"},{"Uniquefunname":"func init()","Funname":"main.init","Returntype":"","Args":""}],"Records":[{"Name":"const:main","Fields":["main.UidMin","main.UsernameEmpty","main.UsernameExceed","main.UsernameExists","main.UsernameFirstCharInvalid","main.UsernameInvalidChars","main.UsernameMaxLength","main.UsernameOk","main.UsernameSystemUsed"]},{"Name":"var:main","Fields":["main.usernameRegex"]}]}
{"Filepath":"validator/validator.go","Functions":[{"Uniquefunname":"func (v *Validator) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (v *Validator) GetInterfaceName() string","Funname":"main.Validator.GetInterfaceName","Returntype":"string","Args":""}],"Records":[{"Name":"struct:main.Validator","Fields":["main.Validator.method *struct { ValidateHostname func() `in:\"hostname\",out:\"res\"`; ValidateHostnameTemp func() `in:\"hostname\",out:\"res\"`; ValidateUsername func() `in:\"username\",out:\"res\"`; }","main.Validator.service *dbusutil.Service"]}]}
{"Filepath":"validator/validator_test.go","Functions":[{"Uniquefunname":"func Test(t *testing.T)","Funname":"Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func (validator *Validator) TestValiateUsername(c *C.C)","Funname":"TestValiateUsername","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (validator *Validator) TestValidateHostname(c *C.C)","Funname":"TestValidateHostname","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (validator *Validator) TestValidateHostnameTemp(c *C.C)","Funname":"TestValidateHostnameTemp","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func Test(t *testing.T)","Funname":"main.Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func (validator *Validator) TestValiateUsername(c *C.C)","Funname":"main.Validator.TestValiateUsername","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (validator *Validator) TestValidateHostname(c *C.C)","Funname":"main.Validator.TestValidateHostname","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (validator *Validator) TestValidateHostnameTemp(c *C.C)","Funname":"main.Validator.TestValidateHostnameTemp","Returntype":"","Args":"c *C.C"}],"Records":[{"Name":"var:main","Fields":["main._"]}]}
